ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_SDIO_SD_Init:
  25              	.LFB136:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2017 STMicroelectronics International N.V.
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice,
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under
  31:Src/main.c    ****   *    this license.
  32:Src/main.c    ****   *
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 2


  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f4xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** #include "fatfs.h"
  53:Src/main.c    **** #include "usb_device.h"
  54:Src/main.c    **** #include "FreeRTOS.h"
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN Includes */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END Includes */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  61:Src/main.c    **** ADC_HandleTypeDef hadc3;
  62:Src/main.c    **** 
  63:Src/main.c    **** CAN_HandleTypeDef hcan1;
  64:Src/main.c    **** 
  65:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  66:Src/main.c    **** 
  67:Src/main.c    **** IWDG_HandleTypeDef hiwdg;
  68:Src/main.c    **** 
  69:Src/main.c    **** RNG_HandleTypeDef hrng;
  70:Src/main.c    **** 
  71:Src/main.c    **** SD_HandleTypeDef hsd;
  72:Src/main.c    **** 
  73:Src/main.c    **** TIM_HandleTypeDef htim2;
  74:Src/main.c    **** TIM_HandleTypeDef htim3;
  75:Src/main.c    **** TIM_HandleTypeDef htim5;
  76:Src/main.c    **** TIM_HandleTypeDef htim13;
  77:Src/main.c    **** TIM_HandleTypeDef htim14;
  78:Src/main.c    **** 
  79:Src/main.c    **** WWDG_HandleTypeDef hwwdg;
  80:Src/main.c    **** 
  81:Src/main.c    **** osThreadId defaultTaskHandle;
  82:Src/main.c    **** 
  83:Src/main.c    **** /* USER CODE BEGIN PV */
  84:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  85:Src/main.c    **** 
  86:Src/main.c    **** /* USER CODE END PV */
  87:Src/main.c    **** 
  88:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  89:Src/main.c    **** void SystemClock_Config(void);
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 3


  90:Src/main.c    **** static void MX_GPIO_Init(void);
  91:Src/main.c    **** static void MX_TIM5_Init(void);
  92:Src/main.c    **** static void MX_TIM3_Init(void);
  93:Src/main.c    **** static void MX_TIM2_Init(void);
  94:Src/main.c    **** static void MX_TIM13_Init(void);
  95:Src/main.c    **** static void MX_TIM14_Init(void);
  96:Src/main.c    **** static void MX_CAN1_Init(void);
  97:Src/main.c    **** static void MX_SDIO_SD_Init(void);
  98:Src/main.c    **** static void MX_I2C1_Init(void);
  99:Src/main.c    **** static void MX_WWDG_Init(void);
 100:Src/main.c    **** static void MX_IWDG_Init(void);
 101:Src/main.c    **** static void MX_RNG_Init(void);
 102:Src/main.c    **** static void MX_ADC3_Init(void);
 103:Src/main.c    **** void StartDefaultTask(void const * argument);
 104:Src/main.c    **** 
 105:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
 106:Src/main.c    **** 
 107:Src/main.c    **** 
 108:Src/main.c    **** 
 109:Src/main.c    **** 
 110:Src/main.c    **** 
 111:Src/main.c    **** 
 112:Src/main.c    **** /* USER CODE BEGIN PFP */
 113:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 114:Src/main.c    **** 
 115:Src/main.c    **** /* USER CODE END PFP */
 116:Src/main.c    **** 
 117:Src/main.c    **** /* USER CODE BEGIN 0 */
 118:Src/main.c    **** void vHeartbeat(void *pvParameters );
 119:Src/main.c    **** void vKillStatus(void *pvParammeters);
 120:Src/main.c    **** 
 121:Src/main.c    **** /* USER CODE END 0 */
 122:Src/main.c    **** 
 123:Src/main.c    **** int main(void)
 124:Src/main.c    **** {
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE BEGIN 1 */
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* USER CODE END 1 */
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 133:Src/main.c    ****   HAL_Init();
 134:Src/main.c    **** 
 135:Src/main.c    **** 
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* USER CODE BEGIN Init */
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* USER CODE END Init */
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* Configure the system clock */
 142:Src/main.c    ****   SystemClock_Config();
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 145:Src/main.c    **** 
 146:Src/main.c    ****   /* USER CODE END SysInit */
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****   /* Initialize all configured peripherals */
 149:Src/main.c    ****   MX_GPIO_Init();
 150:Src/main.c    ****   MX_TIM5_Init();
 151:Src/main.c    ****   MX_TIM3_Init();
 152:Src/main.c    ****   MX_TIM2_Init();
 153:Src/main.c    ****   MX_TIM13_Init();
 154:Src/main.c    ****   MX_TIM14_Init();
 155:Src/main.c    ****   MX_CAN1_Init();
 156:Src/main.c    ****   MX_SDIO_SD_Init();
 157:Src/main.c    ****   MX_I2C1_Init();
 158:Src/main.c    ****   MX_WWDG_Init();
 159:Src/main.c    ****   MX_IWDG_Init();
 160:Src/main.c    ****   MX_RNG_Init();
 161:Src/main.c    ****   MX_ADC3_Init();
 162:Src/main.c    **** 
 163:Src/main.c    ****   /* USER CODE BEGIN 2 */
 164:Src/main.c    ****   xTaskCreate( vHeartbeat, "Heartbeat", configMINIMAL_STACK_SIZE, NULL, 0, ( TaskHandle_t * ) NULL)
 165:Src/main.c    ****   xTaskCreate( vKillStatus, "KillStatus", configMINIMAL_STACK_SIZE, NULL, 0, ( TaskHandle_t * ) NUL
 166:Src/main.c    ****   /* USER CODE END 2 */
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 169:Src/main.c    ****   /* add mutexes, ... */
 170:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 171:Src/main.c    **** 
 172:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 173:Src/main.c    ****   /* add semaphores, ... */
 174:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 175:Src/main.c    **** 
 176:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 177:Src/main.c    ****   /* start timers, add new ones, ... */
 178:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 179:Src/main.c    **** 
 180:Src/main.c    ****   /* Create the thread(s) */
 181:Src/main.c    ****   /* definition and creation of defaultTask */
 182:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 183:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 186:Src/main.c    **** 
 187:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 188:Src/main.c    **** 
 189:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 190:Src/main.c    ****   /* add queues, ... */
 191:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 192:Src/main.c    **** 
 193:Src/main.c    **** 
 194:Src/main.c    ****   /* Start scheduler */
 195:Src/main.c    ****   osKernelStart();
 196:Src/main.c    **** 
 197:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 198:Src/main.c    **** 
 199:Src/main.c    ****   /* Infinite loop */
 200:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 201:Src/main.c    ****   while (1)
 202:Src/main.c    ****   {
 203:Src/main.c    ****   /* USER CODE END WHILE */
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 5


 204:Src/main.c    **** 
 205:Src/main.c    ****   /* USER CODE BEGIN 3 */
 206:Src/main.c    **** 
 207:Src/main.c    ****   }
 208:Src/main.c    ****   /* USER CODE END 3 */
 209:Src/main.c    **** 
 210:Src/main.c    **** }
 211:Src/main.c    **** 
 212:Src/main.c    **** /** System Clock Configuration
 213:Src/main.c    **** */
 214:Src/main.c    **** void SystemClock_Config(void)
 215:Src/main.c    **** {
 216:Src/main.c    **** 
 217:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 218:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 219:Src/main.c    **** 
 220:Src/main.c    ****     /**Configure the main internal regulator output voltage
 221:Src/main.c    ****     */
 222:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 223:Src/main.c    **** 
 224:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 225:Src/main.c    **** 
 226:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 227:Src/main.c    ****     */
 228:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 229:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 230:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 232:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 233:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 15;
 234:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 144;
 235:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 236:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 5;
 237:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 238:Src/main.c    ****   {
 239:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 240:Src/main.c    ****   }
 241:Src/main.c    **** 
 242:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 243:Src/main.c    ****     */
 244:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 245:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 246:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 247:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 248:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 249:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 250:Src/main.c    **** 
 251:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 252:Src/main.c    ****   {
 253:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 254:Src/main.c    ****   }
 255:Src/main.c    **** 
 256:Src/main.c    ****     /**Configure the Systick interrupt time
 257:Src/main.c    ****     */
 258:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 259:Src/main.c    **** 
 260:Src/main.c    ****     /**Configure the Systick
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 6


 261:Src/main.c    ****     */
 262:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 263:Src/main.c    **** 
 264:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 265:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 266:Src/main.c    **** }
 267:Src/main.c    **** 
 268:Src/main.c    **** /* ADC3 init function */
 269:Src/main.c    **** static void MX_ADC3_Init(void)
 270:Src/main.c    **** {
 271:Src/main.c    **** 
 272:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 273:Src/main.c    **** 
 274:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 275:Src/main.c    ****     */
 276:Src/main.c    ****   hadc3.Instance = ADC3;
 277:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 278:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 279:Src/main.c    ****   hadc3.Init.ScanConvMode = DISABLE;
 280:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 281:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 282:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 283:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 284:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 285:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 286:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 287:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 288:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 289:Src/main.c    ****   {
 290:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 291:Src/main.c    ****   }
 292:Src/main.c    **** 
 293:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 294:Src/main.c    ****     */
 295:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_10;
 296:Src/main.c    ****   sConfig.Rank = 1;
 297:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 298:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 299:Src/main.c    ****   {
 300:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 301:Src/main.c    ****   }
 302:Src/main.c    **** 
 303:Src/main.c    **** }
 304:Src/main.c    **** 
 305:Src/main.c    **** /* CAN1 init function */
 306:Src/main.c    **** static void MX_CAN1_Init(void)
 307:Src/main.c    **** {
 308:Src/main.c    **** 
 309:Src/main.c    ****   hcan1.Instance = CAN1;
 310:Src/main.c    ****   hcan1.Init.Prescaler = 16;
 311:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 312:Src/main.c    ****   hcan1.Init.SJW = CAN_SJW_1TQ;
 313:Src/main.c    ****   hcan1.Init.BS1 = CAN_BS1_1TQ;
 314:Src/main.c    ****   hcan1.Init.BS2 = CAN_BS2_1TQ;
 315:Src/main.c    ****   hcan1.Init.TTCM = DISABLE;
 316:Src/main.c    ****   hcan1.Init.ABOM = DISABLE;
 317:Src/main.c    ****   hcan1.Init.AWUM = DISABLE;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 7


 318:Src/main.c    ****   hcan1.Init.NART = DISABLE;
 319:Src/main.c    ****   hcan1.Init.RFLM = DISABLE;
 320:Src/main.c    ****   hcan1.Init.TXFP = DISABLE;
 321:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 322:Src/main.c    ****   {
 323:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 324:Src/main.c    ****   }
 325:Src/main.c    **** 
 326:Src/main.c    **** }
 327:Src/main.c    **** 
 328:Src/main.c    **** /* I2C1 init function */
 329:Src/main.c    **** static void MX_I2C1_Init(void)
 330:Src/main.c    **** {
 331:Src/main.c    **** 
 332:Src/main.c    ****   hi2c1.Instance = I2C1;
 333:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 334:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 335:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 336:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 337:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 338:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 339:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 340:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 341:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 342:Src/main.c    ****   {
 343:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 344:Src/main.c    ****   }
 345:Src/main.c    **** 
 346:Src/main.c    **** }
 347:Src/main.c    **** 
 348:Src/main.c    **** /* IWDG init function */
 349:Src/main.c    **** static void MX_IWDG_Init(void)
 350:Src/main.c    **** {
 351:Src/main.c    **** 
 352:Src/main.c    ****   hiwdg.Instance = IWDG;
 353:Src/main.c    ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 354:Src/main.c    ****   hiwdg.Init.Reload = 4095;
 355:Src/main.c    ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 356:Src/main.c    ****   {
 357:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 358:Src/main.c    ****   }
 359:Src/main.c    **** 
 360:Src/main.c    **** }
 361:Src/main.c    **** 
 362:Src/main.c    **** /* RNG init function */
 363:Src/main.c    **** static void MX_RNG_Init(void)
 364:Src/main.c    **** {
 365:Src/main.c    **** 
 366:Src/main.c    ****   hrng.Instance = RNG;
 367:Src/main.c    ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 368:Src/main.c    ****   {
 369:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 370:Src/main.c    ****   }
 371:Src/main.c    **** 
 372:Src/main.c    **** }
 373:Src/main.c    **** 
 374:Src/main.c    **** /* SDIO init function */
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 8


 375:Src/main.c    **** static void MX_SDIO_SD_Init(void)
 376:Src/main.c    **** {
  27              		.loc 1 376 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 377:Src/main.c    **** 
 378:Src/main.c    ****   hsd.Instance = SDIO;
  32              		.loc 1 378 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 064A     		ldr	r2, .L2+4
  35 0004 1A60     		str	r2, [r3]
 379:Src/main.c    ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
  36              		.loc 1 379 0
  37 0006 0022     		movs	r2, #0
  38 0008 5A60     		str	r2, [r3, #4]
 380:Src/main.c    ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
  39              		.loc 1 380 0
  40 000a 9A60     		str	r2, [r3, #8]
 381:Src/main.c    ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 381 0
  42 000c DA60     		str	r2, [r3, #12]
 382:Src/main.c    ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
  43              		.loc 1 382 0
  44 000e 1A61     		str	r2, [r3, #16]
 383:Src/main.c    ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
  45              		.loc 1 383 0
  46 0010 5A61     		str	r2, [r3, #20]
 384:Src/main.c    ****   hsd.Init.ClockDiv = 0;
  47              		.loc 1 384 0
  48 0012 9A61     		str	r2, [r3, #24]
  49 0014 7047     		bx	lr
  50              	.L3:
  51 0016 00BF     		.align	2
  52              	.L2:
  53 0018 00000000 		.word	hsd
  54 001c 002C0140 		.word	1073818624
  55              		.cfi_endproc
  56              	.LFE136:
  58              		.section	.text.MX_GPIO_Init,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	MX_GPIO_Init:
  66              	.LFB143:
 385:Src/main.c    **** 
 386:Src/main.c    **** }
 387:Src/main.c    **** 
 388:Src/main.c    **** /* TIM2 init function */
 389:Src/main.c    **** static void MX_TIM2_Init(void)
 390:Src/main.c    **** {
 391:Src/main.c    **** 
 392:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 393:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 9


 394:Src/main.c    **** 
 395:Src/main.c    ****   htim2.Instance = TIM2;
 396:Src/main.c    ****   htim2.Init.Prescaler = 0;
 397:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 398:Src/main.c    ****   htim2.Init.Period = 0;
 399:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 400:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 401:Src/main.c    ****   {
 402:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 403:Src/main.c    ****   }
 404:Src/main.c    **** 
 405:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 406:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 407:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 408:Src/main.c    ****   {
 409:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 410:Src/main.c    ****   }
 411:Src/main.c    **** 
 412:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 413:Src/main.c    ****   sConfigOC.Pulse = 0;
 414:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 415:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 416:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 417:Src/main.c    ****   {
 418:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 419:Src/main.c    ****   }
 420:Src/main.c    **** 
 421:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 422:Src/main.c    ****   {
 423:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 424:Src/main.c    ****   }
 425:Src/main.c    **** 
 426:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 427:Src/main.c    **** 
 428:Src/main.c    **** }
 429:Src/main.c    **** 
 430:Src/main.c    **** /* TIM3 init function */
 431:Src/main.c    **** static void MX_TIM3_Init(void)
 432:Src/main.c    **** {
 433:Src/main.c    **** 
 434:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 435:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 436:Src/main.c    **** 
 437:Src/main.c    ****   htim3.Instance = TIM3;
 438:Src/main.c    ****   htim3.Init.Prescaler = 0;
 439:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 440:Src/main.c    ****   htim3.Init.Period = 0;
 441:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 442:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 443:Src/main.c    ****   {
 444:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 445:Src/main.c    ****   }
 446:Src/main.c    **** 
 447:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 448:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 449:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 450:Src/main.c    ****   {
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 10


 451:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 452:Src/main.c    ****   }
 453:Src/main.c    **** 
 454:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 455:Src/main.c    ****   sConfigOC.Pulse = 0;
 456:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 457:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 458:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 459:Src/main.c    ****   {
 460:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 461:Src/main.c    ****   }
 462:Src/main.c    **** 
 463:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 464:Src/main.c    ****   {
 465:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 466:Src/main.c    ****   }
 467:Src/main.c    **** 
 468:Src/main.c    ****   HAL_TIM_MspPostInit(&htim3);
 469:Src/main.c    **** 
 470:Src/main.c    **** }
 471:Src/main.c    **** 
 472:Src/main.c    **** /* TIM5 init function */
 473:Src/main.c    **** static void MX_TIM5_Init(void)
 474:Src/main.c    **** {
 475:Src/main.c    **** 
 476:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 477:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 478:Src/main.c    **** 
 479:Src/main.c    ****   htim5.Instance = TIM5;
 480:Src/main.c    ****   htim5.Init.Prescaler = 0;
 481:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 482:Src/main.c    ****   htim5.Init.Period = 0;
 483:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 484:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 485:Src/main.c    ****   {
 486:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 487:Src/main.c    ****   }
 488:Src/main.c    **** 
 489:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 490:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 491:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 492:Src/main.c    ****   {
 493:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 494:Src/main.c    ****   }
 495:Src/main.c    **** 
 496:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 497:Src/main.c    ****   sConfigOC.Pulse = 0;
 498:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 499:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 500:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 501:Src/main.c    ****   {
 502:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 503:Src/main.c    ****   }
 504:Src/main.c    **** 
 505:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 506:Src/main.c    ****   {
 507:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 11


 508:Src/main.c    ****   }
 509:Src/main.c    **** 
 510:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 511:Src/main.c    ****   {
 512:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 513:Src/main.c    ****   }
 514:Src/main.c    **** 
 515:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 516:Src/main.c    ****   {
 517:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 518:Src/main.c    ****   }
 519:Src/main.c    **** 
 520:Src/main.c    ****   HAL_TIM_MspPostInit(&htim5);
 521:Src/main.c    **** 
 522:Src/main.c    **** }
 523:Src/main.c    **** 
 524:Src/main.c    **** /* TIM13 init function */
 525:Src/main.c    **** static void MX_TIM13_Init(void)
 526:Src/main.c    **** {
 527:Src/main.c    **** 
 528:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 529:Src/main.c    **** 
 530:Src/main.c    ****   htim13.Instance = TIM13;
 531:Src/main.c    ****   htim13.Init.Prescaler = 0;
 532:Src/main.c    ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 533:Src/main.c    ****   htim13.Init.Period = 0;
 534:Src/main.c    ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 535:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 536:Src/main.c    ****   {
 537:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 538:Src/main.c    ****   }
 539:Src/main.c    **** 
 540:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 541:Src/main.c    ****   {
 542:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 543:Src/main.c    ****   }
 544:Src/main.c    **** 
 545:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 546:Src/main.c    ****   sConfigOC.Pulse = 0;
 547:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 548:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 549:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 550:Src/main.c    ****   {
 551:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 552:Src/main.c    ****   }
 553:Src/main.c    **** 
 554:Src/main.c    ****   HAL_TIM_MspPostInit(&htim13);
 555:Src/main.c    **** 
 556:Src/main.c    **** }
 557:Src/main.c    **** 
 558:Src/main.c    **** /* TIM14 init function */
 559:Src/main.c    **** static void MX_TIM14_Init(void)
 560:Src/main.c    **** {
 561:Src/main.c    **** 
 562:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 563:Src/main.c    **** 
 564:Src/main.c    ****   htim14.Instance = TIM14;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 12


 565:Src/main.c    ****   htim14.Init.Prescaler = 0;
 566:Src/main.c    ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 567:Src/main.c    ****   htim14.Init.Period = 0;
 568:Src/main.c    ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 569:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 570:Src/main.c    ****   {
 571:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 572:Src/main.c    ****   }
 573:Src/main.c    **** 
 574:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 575:Src/main.c    ****   {
 576:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 577:Src/main.c    ****   }
 578:Src/main.c    **** 
 579:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 580:Src/main.c    ****   sConfigOC.Pulse = 0;
 581:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 582:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 583:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 584:Src/main.c    ****   {
 585:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 586:Src/main.c    ****   }
 587:Src/main.c    **** 
 588:Src/main.c    ****   HAL_TIM_MspPostInit(&htim14);
 589:Src/main.c    **** 
 590:Src/main.c    **** }
 591:Src/main.c    **** 
 592:Src/main.c    **** /* WWDG init function */
 593:Src/main.c    **** static void MX_WWDG_Init(void)
 594:Src/main.c    **** {
 595:Src/main.c    **** 
 596:Src/main.c    ****   hwwdg.Instance = WWDG;
 597:Src/main.c    ****   hwwdg.Init.Prescaler = WWDG_PRESCALER_1;
 598:Src/main.c    ****   hwwdg.Init.Window = 64;
 599:Src/main.c    ****   hwwdg.Init.Counter = 64;
 600:Src/main.c    ****   hwwdg.Init.EWIMode = WWDG_EWI_DISABLE;
 601:Src/main.c    ****   if (HAL_WWDG_Init(&hwwdg) != HAL_OK)
 602:Src/main.c    ****   {
 603:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 604:Src/main.c    ****   }
 605:Src/main.c    **** 
 606:Src/main.c    **** }
 607:Src/main.c    **** 
 608:Src/main.c    **** /** Configure pins as
 609:Src/main.c    ****         * Analog
 610:Src/main.c    ****         * Input
 611:Src/main.c    ****         * Output
 612:Src/main.c    ****         * EVENT_OUT
 613:Src/main.c    ****         * EXTI
 614:Src/main.c    **** */
 615:Src/main.c    **** static void MX_GPIO_Init(void)
 616:Src/main.c    **** {
  67              		.loc 1 616 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 24
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 13


  72 0000 86B0     		sub	sp, sp, #24
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 24
  75              	.LBB2:
 617:Src/main.c    **** 
 618:Src/main.c    ****   /* GPIO Ports Clock Enable */
 619:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  76              		.loc 1 619 0
  77 0002 0022     		movs	r2, #0
  78 0004 0192     		str	r2, [sp, #4]
  79 0006 1A4B     		ldr	r3, .L6
  80 0008 196B     		ldr	r1, [r3, #48]
  81 000a 41F08001 		orr	r1, r1, #128
  82 000e 1963     		str	r1, [r3, #48]
  83 0010 196B     		ldr	r1, [r3, #48]
  84 0012 01F08001 		and	r1, r1, #128
  85 0016 0191     		str	r1, [sp, #4]
  86 0018 0199     		ldr	r1, [sp, #4]
  87              	.LBE2:
  88              	.LBB3:
 620:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  89              		.loc 1 620 0
  90 001a 0292     		str	r2, [sp, #8]
  91 001c 196B     		ldr	r1, [r3, #48]
  92 001e 41F00401 		orr	r1, r1, #4
  93 0022 1963     		str	r1, [r3, #48]
  94 0024 196B     		ldr	r1, [r3, #48]
  95 0026 01F00401 		and	r1, r1, #4
  96 002a 0291     		str	r1, [sp, #8]
  97 002c 0299     		ldr	r1, [sp, #8]
  98              	.LBE3:
  99              	.LBB4:
 621:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 100              		.loc 1 621 0
 101 002e 0392     		str	r2, [sp, #12]
 102 0030 196B     		ldr	r1, [r3, #48]
 103 0032 41F00101 		orr	r1, r1, #1
 104 0036 1963     		str	r1, [r3, #48]
 105 0038 196B     		ldr	r1, [r3, #48]
 106 003a 01F00101 		and	r1, r1, #1
 107 003e 0391     		str	r1, [sp, #12]
 108 0040 0399     		ldr	r1, [sp, #12]
 109              	.LBE4:
 110              	.LBB5:
 622:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 111              		.loc 1 622 0
 112 0042 0492     		str	r2, [sp, #16]
 113 0044 196B     		ldr	r1, [r3, #48]
 114 0046 41F00201 		orr	r1, r1, #2
 115 004a 1963     		str	r1, [r3, #48]
 116 004c 196B     		ldr	r1, [r3, #48]
 117 004e 01F00201 		and	r1, r1, #2
 118 0052 0491     		str	r1, [sp, #16]
 119 0054 0499     		ldr	r1, [sp, #16]
 120              	.LBE5:
 121              	.LBB6:
 623:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 14


 122              		.loc 1 623 0
 123 0056 0592     		str	r2, [sp, #20]
 124 0058 1A6B     		ldr	r2, [r3, #48]
 125 005a 42F00802 		orr	r2, r2, #8
 126 005e 1A63     		str	r2, [r3, #48]
 127 0060 1B6B     		ldr	r3, [r3, #48]
 128 0062 03F00803 		and	r3, r3, #8
 129 0066 0593     		str	r3, [sp, #20]
 130 0068 059B     		ldr	r3, [sp, #20]
 131              	.LBE6:
 624:Src/main.c    **** 
 625:Src/main.c    **** }
 132              		.loc 1 625 0
 133 006a 06B0     		add	sp, sp, #24
 134              	.LCFI1:
 135              		.cfi_def_cfa_offset 0
 136              		@ sp needed
 137 006c 7047     		bx	lr
 138              	.L7:
 139 006e 00BF     		.align	2
 140              	.L6:
 141 0070 00380240 		.word	1073887232
 142              		.cfi_endproc
 143              	.LFE143:
 145              		.section	.text.vKillStatus,"ax",%progbits
 146              		.align	1
 147              		.global	vKillStatus
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv4-sp-d16
 153              	vKillStatus:
 154              	.LFB145:
 626:Src/main.c    **** 
 627:Src/main.c    **** /* USER CODE BEGIN 4 */
 628:Src/main.c    **** void vHeartbeat(void *pvParameters ){
 629:Src/main.c    ****   //get GPIO pins here should be two pins
 630:Src/main.c    **** 
 631:Src/main.c    ****   for( ;; ){
 632:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 633:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 634:Src/main.c    ****     HAL_Delay(1000);
 635:Src/main.c    ****   }
 636:Src/main.c    **** }
 637:Src/main.c    **** 
 638:Src/main.c    **** void vKillStatus(void *pvParameters ){
 155              		.loc 1 638 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL0:
 161              	.L9:
 162 0000 FEE7     		b	.L9
 163              		.cfi_endproc
 164              	.LFE145:
 166              		.section	.text.vHeartbeat,"ax",%progbits
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 15


 167              		.align	1
 168              		.global	vHeartbeat
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	vHeartbeat:
 175              	.LFB144:
 628:Src/main.c    ****   //get GPIO pins here should be two pins
 176              		.loc 1 628 0
 177              		.cfi_startproc
 178              		@ Volatile: function does not return.
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              	.LVL1:
 628:Src/main.c    ****   //get GPIO pins here should be two pins
 182              		.loc 1 628 0
 183 0000 08B5     		push	{r3, lr}
 184              	.LCFI2:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
 188              	.LVL2:
 189              	.L11:
 632:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 190              		.loc 1 632 0 discriminator 1
 191 0002 084C     		ldr	r4, .L13
 192 0004 4FF48051 		mov	r1, #4096
 193 0008 2046     		mov	r0, r4
 194 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 195              	.LVL3:
 633:Src/main.c    ****     HAL_Delay(1000);
 196              		.loc 1 633 0 discriminator 1
 197 000e 4FF40051 		mov	r1, #8192
 198 0012 2046     		mov	r0, r4
 199 0014 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 200              	.LVL4:
 634:Src/main.c    ****   }
 201              		.loc 1 634 0 discriminator 1
 202 0018 4FF47A70 		mov	r0, #1000
 203 001c FFF7FEFF 		bl	HAL_Delay
 204              	.LVL5:
 205 0020 EFE7     		b	.L11
 206              	.L14:
 207 0022 00BF     		.align	2
 208              	.L13:
 209 0024 000C0240 		.word	1073875968
 210              		.cfi_endproc
 211              	.LFE144:
 213              		.section	.text.StartDefaultTask,"ax",%progbits
 214              		.align	1
 215              		.global	StartDefaultTask
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv4-sp-d16
 221              	StartDefaultTask:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 16


 222              	.LFB146:
 639:Src/main.c    ****   //take your GPIO pins here
 640:Src/main.c    ****   int i;
 641:Src/main.c    ****   for ( ;; ){
 642:Src/main.c    ****     i = i+1;
 643:Src/main.c    ****   }
 644:Src/main.c    **** }
 645:Src/main.c    **** /* USER CODE END 4 */
 646:Src/main.c    **** 
 647:Src/main.c    **** /* StartDefaultTask function */
 648:Src/main.c    **** void StartDefaultTask(void const * argument)
 649:Src/main.c    **** {
 223              		.loc 1 649 0
 224              		.cfi_startproc
 225              		@ Volatile: function does not return.
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              	.LVL6:
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI3:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 650:Src/main.c    ****   /* init code for USB_DEVICE */
 651:Src/main.c    ****   MX_USB_DEVICE_Init();
 234              		.loc 1 651 0
 235 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 236              	.LVL7:
 652:Src/main.c    **** 
 653:Src/main.c    ****   /* init code for FATFS */
 654:Src/main.c    ****   MX_FATFS_Init();
 237              		.loc 1 654 0
 238 0006 FFF7FEFF 		bl	MX_FATFS_Init
 239              	.LVL8:
 240              	.L16:
 655:Src/main.c    **** 
 656:Src/main.c    ****   /* USER CODE BEGIN 5 */
 657:Src/main.c    ****   /* Infinite loop */
 658:Src/main.c    ****   for(;;)
 659:Src/main.c    ****   {
 660:Src/main.c    ****     osDelay(1);
 241              		.loc 1 660 0 discriminator 1
 242 000a 0120     		movs	r0, #1
 243 000c FFF7FEFF 		bl	osDelay
 244              	.LVL9:
 245 0010 FBE7     		b	.L16
 246              		.cfi_endproc
 247              	.LFE146:
 249              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 250              		.align	1
 251              		.global	HAL_TIM_PeriodElapsedCallback
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	HAL_TIM_PeriodElapsedCallback:
 258              	.LFB147:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 17


 661:Src/main.c    ****   }
 662:Src/main.c    ****   /* USER CODE END 5 */
 663:Src/main.c    **** }
 664:Src/main.c    **** 
 665:Src/main.c    **** /**
 666:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 667:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 668:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 669:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 670:Src/main.c    ****   * @param  htim : TIM handle
 671:Src/main.c    ****   * @retval None
 672:Src/main.c    ****   */
 673:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 674:Src/main.c    **** {
 259              		.loc 1 674 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              	.LVL10:
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI4:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 675:Src/main.c    **** /* USER CODE BEGIN Callback 0 */
 676:Src/main.c    **** 
 677:Src/main.c    **** /* USER CODE END Callback 0 */
 678:Src/main.c    ****   if (htim->Instance == TIM1) {
 269              		.loc 1 678 0
 270 0002 0268     		ldr	r2, [r0]
 271 0004 034B     		ldr	r3, .L22
 272 0006 9A42     		cmp	r2, r3
 273 0008 00D0     		beq	.L21
 274              	.LVL11:
 275              	.L18:
 276 000a 08BD     		pop	{r3, pc}
 277              	.LVL12:
 278              	.L21:
 679:Src/main.c    ****     HAL_IncTick();
 279              		.loc 1 679 0
 280 000c FFF7FEFF 		bl	HAL_IncTick
 281              	.LVL13:
 680:Src/main.c    ****   }
 681:Src/main.c    **** /* USER CODE BEGIN Callback 1 */
 682:Src/main.c    **** 
 683:Src/main.c    **** /* USER CODE END Callback 1 */
 684:Src/main.c    **** }
 282              		.loc 1 684 0
 283 0010 FBE7     		b	.L18
 284              	.L23:
 285 0012 00BF     		.align	2
 286              	.L22:
 287 0014 00000140 		.word	1073807360
 288              		.cfi_endproc
 289              	.LFE147:
 291              		.section	.text._Error_Handler,"ax",%progbits
 292              		.align	1
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 18


 293              		.global	_Error_Handler
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 297              		.fpu fpv4-sp-d16
 299              	_Error_Handler:
 300              	.LFB148:
 685:Src/main.c    **** 
 686:Src/main.c    **** /**
 687:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 688:Src/main.c    ****   * @param  None
 689:Src/main.c    ****   * @retval None
 690:Src/main.c    ****   */
 691:Src/main.c    **** void _Error_Handler(char * file, int line)
 692:Src/main.c    **** {
 301              		.loc 1 692 0
 302              		.cfi_startproc
 303              		@ Volatile: function does not return.
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 307              	.LVL14:
 308              	.L25:
 309 0000 FEE7     		b	.L25
 310              		.cfi_endproc
 311              	.LFE148:
 313              		.section	.text.MX_TIM5_Init,"ax",%progbits
 314              		.align	1
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	MX_TIM5_Init:
 321              	.LFB139:
 474:Src/main.c    **** 
 322              		.loc 1 474 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 40
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 474:Src/main.c    **** 
 326              		.loc 1 474 0
 327 0000 00B5     		push	{lr}
 328              	.LCFI5:
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 14, -4
 331 0002 8BB0     		sub	sp, sp, #44
 332              	.LCFI6:
 333              		.cfi_def_cfa_offset 48
 479:Src/main.c    ****   htim5.Init.Prescaler = 0;
 334              		.loc 1 479 0
 335 0004 2A48     		ldr	r0, .L40
 336 0006 2B4B     		ldr	r3, .L40+4
 337 0008 0360     		str	r3, [r0]
 480:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 338              		.loc 1 480 0
 339 000a 0023     		movs	r3, #0
 340 000c 4360     		str	r3, [r0, #4]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 19


 481:Src/main.c    ****   htim5.Init.Period = 0;
 341              		.loc 1 481 0
 342 000e 8360     		str	r3, [r0, #8]
 482:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 343              		.loc 1 482 0
 344 0010 C360     		str	r3, [r0, #12]
 483:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 345              		.loc 1 483 0
 346 0012 0361     		str	r3, [r0, #16]
 484:Src/main.c    ****   {
 347              		.loc 1 484 0
 348 0014 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 349              	.LVL15:
 350 0018 58BB     		cbnz	r0, .L34
 489:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 351              		.loc 1 489 0
 352 001a 0023     		movs	r3, #0
 353 001c 0893     		str	r3, [sp, #32]
 490:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 354              		.loc 1 490 0
 355 001e 0993     		str	r3, [sp, #36]
 491:Src/main.c    ****   {
 356              		.loc 1 491 0
 357 0020 08A9     		add	r1, sp, #32
 358 0022 2348     		ldr	r0, .L40
 359 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 360              	.LVL16:
 361 0028 40BB     		cbnz	r0, .L35
 496:Src/main.c    ****   sConfigOC.Pulse = 0;
 362              		.loc 1 496 0
 363 002a 6023     		movs	r3, #96
 364 002c 0193     		str	r3, [sp, #4]
 497:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 365              		.loc 1 497 0
 366 002e 0022     		movs	r2, #0
 367 0030 0292     		str	r2, [sp, #8]
 498:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 368              		.loc 1 498 0
 369 0032 0392     		str	r2, [sp, #12]
 499:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 370              		.loc 1 499 0
 371 0034 0592     		str	r2, [sp, #20]
 500:Src/main.c    ****   {
 372              		.loc 1 500 0
 373 0036 01A9     		add	r1, sp, #4
 374 0038 1D48     		ldr	r0, .L40
 375 003a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 376              	.LVL17:
 377 003e 10BB     		cbnz	r0, .L36
 505:Src/main.c    ****   {
 378              		.loc 1 505 0
 379 0040 0422     		movs	r2, #4
 380 0042 0DEB0201 		add	r1, sp, r2
 381 0046 1A48     		ldr	r0, .L40
 382 0048 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 383              	.LVL18:
 384 004c 00BB     		cbnz	r0, .L37
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 20


 510:Src/main.c    ****   {
 385              		.loc 1 510 0
 386 004e 0822     		movs	r2, #8
 387 0050 01A9     		add	r1, sp, #4
 388 0052 1748     		ldr	r0, .L40
 389 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 390              	.LVL19:
 391 0058 F8B9     		cbnz	r0, .L38
 515:Src/main.c    ****   {
 392              		.loc 1 515 0
 393 005a 0C22     		movs	r2, #12
 394 005c 01A9     		add	r1, sp, #4
 395 005e 1448     		ldr	r0, .L40
 396 0060 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 397              	.LVL20:
 398 0064 F0B9     		cbnz	r0, .L39
 520:Src/main.c    **** 
 399              		.loc 1 520 0
 400 0066 1248     		ldr	r0, .L40
 401 0068 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 402              	.LVL21:
 522:Src/main.c    **** 
 403              		.loc 1 522 0
 404 006c 0BB0     		add	sp, sp, #44
 405              	.LCFI7:
 406              		.cfi_remember_state
 407              		.cfi_def_cfa_offset 4
 408              		@ sp needed
 409 006e 5DF804FB 		ldr	pc, [sp], #4
 410              	.L34:
 411              	.LCFI8:
 412              		.cfi_restore_state
 486:Src/main.c    ****   }
 413              		.loc 1 486 0
 414 0072 4FF4F371 		mov	r1, #486
 415 0076 1048     		ldr	r0, .L40+8
 416 0078 FFF7FEFF 		bl	_Error_Handler
 417              	.LVL22:
 418              	.L35:
 493:Src/main.c    ****   }
 419              		.loc 1 493 0
 420 007c 40F2ED11 		movw	r1, #493
 421 0080 0D48     		ldr	r0, .L40+8
 422 0082 FFF7FEFF 		bl	_Error_Handler
 423              	.LVL23:
 424              	.L36:
 502:Src/main.c    ****   }
 425              		.loc 1 502 0
 426 0086 4FF4FB71 		mov	r1, #502
 427 008a 0B48     		ldr	r0, .L40+8
 428 008c FFF7FEFF 		bl	_Error_Handler
 429              	.LVL24:
 430              	.L37:
 507:Src/main.c    ****   }
 431              		.loc 1 507 0
 432 0090 40F2FB11 		movw	r1, #507
 433 0094 0848     		ldr	r0, .L40+8
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 21


 434 0096 FFF7FEFF 		bl	_Error_Handler
 435              	.LVL25:
 436              	.L38:
 512:Src/main.c    ****   }
 437              		.loc 1 512 0
 438 009a 4FF40071 		mov	r1, #512
 439 009e 0648     		ldr	r0, .L40+8
 440 00a0 FFF7FEFF 		bl	_Error_Handler
 441              	.LVL26:
 442              	.L39:
 517:Src/main.c    ****   }
 443              		.loc 1 517 0
 444 00a4 40F20521 		movw	r1, #517
 445 00a8 0348     		ldr	r0, .L40+8
 446 00aa FFF7FEFF 		bl	_Error_Handler
 447              	.LVL27:
 448              	.L41:
 449 00ae 00BF     		.align	2
 450              	.L40:
 451 00b0 00000000 		.word	htim5
 452 00b4 000C0040 		.word	1073744896
 453 00b8 00000000 		.word	.LC2
 454              		.cfi_endproc
 455              	.LFE139:
 457              		.section	.text.MX_TIM3_Init,"ax",%progbits
 458              		.align	1
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu fpv4-sp-d16
 464              	MX_TIM3_Init:
 465              	.LFB138:
 432:Src/main.c    **** 
 466              		.loc 1 432 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 40
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470 0000 00B5     		push	{lr}
 471              	.LCFI9:
 472              		.cfi_def_cfa_offset 4
 473              		.cfi_offset 14, -4
 474 0002 8BB0     		sub	sp, sp, #44
 475              	.LCFI10:
 476              		.cfi_def_cfa_offset 48
 437:Src/main.c    ****   htim3.Init.Prescaler = 0;
 477              		.loc 1 437 0
 478 0004 1F48     		ldr	r0, .L52
 479 0006 204B     		ldr	r3, .L52+4
 480 0008 0360     		str	r3, [r0]
 438:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 481              		.loc 1 438 0
 482 000a 0023     		movs	r3, #0
 483 000c 4360     		str	r3, [r0, #4]
 439:Src/main.c    ****   htim3.Init.Period = 0;
 484              		.loc 1 439 0
 485 000e 8360     		str	r3, [r0, #8]
 440:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 22


 486              		.loc 1 440 0
 487 0010 C360     		str	r3, [r0, #12]
 441:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 488              		.loc 1 441 0
 489 0012 0361     		str	r3, [r0, #16]
 442:Src/main.c    ****   {
 490              		.loc 1 442 0
 491 0014 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 492              	.LVL28:
 493 0018 F8B9     		cbnz	r0, .L48
 447:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 494              		.loc 1 447 0
 495 001a 0023     		movs	r3, #0
 496 001c 0893     		str	r3, [sp, #32]
 448:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 497              		.loc 1 448 0
 498 001e 0993     		str	r3, [sp, #36]
 449:Src/main.c    ****   {
 499              		.loc 1 449 0
 500 0020 08A9     		add	r1, sp, #32
 501 0022 1848     		ldr	r0, .L52
 502 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 503              	.LVL29:
 504 0028 E0B9     		cbnz	r0, .L49
 454:Src/main.c    ****   sConfigOC.Pulse = 0;
 505              		.loc 1 454 0
 506 002a 6023     		movs	r3, #96
 507 002c 0193     		str	r3, [sp, #4]
 455:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 508              		.loc 1 455 0
 509 002e 0023     		movs	r3, #0
 510 0030 0293     		str	r3, [sp, #8]
 456:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 511              		.loc 1 456 0
 512 0032 0393     		str	r3, [sp, #12]
 457:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 513              		.loc 1 457 0
 514 0034 0593     		str	r3, [sp, #20]
 458:Src/main.c    ****   {
 515              		.loc 1 458 0
 516 0036 0822     		movs	r2, #8
 517 0038 01A9     		add	r1, sp, #4
 518 003a 1248     		ldr	r0, .L52
 519 003c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 520              	.LVL30:
 521 0040 A8B9     		cbnz	r0, .L50
 463:Src/main.c    ****   {
 522              		.loc 1 463 0
 523 0042 0C22     		movs	r2, #12
 524 0044 01A9     		add	r1, sp, #4
 525 0046 0F48     		ldr	r0, .L52
 526 0048 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 527              	.LVL31:
 528 004c A0B9     		cbnz	r0, .L51
 468:Src/main.c    **** 
 529              		.loc 1 468 0
 530 004e 0D48     		ldr	r0, .L52
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 23


 531 0050 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 532              	.LVL32:
 470:Src/main.c    **** 
 533              		.loc 1 470 0
 534 0054 0BB0     		add	sp, sp, #44
 535              	.LCFI11:
 536              		.cfi_remember_state
 537              		.cfi_def_cfa_offset 4
 538              		@ sp needed
 539 0056 5DF804FB 		ldr	pc, [sp], #4
 540              	.L48:
 541              	.LCFI12:
 542              		.cfi_restore_state
 444:Src/main.c    ****   }
 543              		.loc 1 444 0
 544 005a 4FF4DE71 		mov	r1, #444
 545 005e 0B48     		ldr	r0, .L52+8
 546 0060 FFF7FEFF 		bl	_Error_Handler
 547              	.LVL33:
 548              	.L49:
 451:Src/main.c    ****   }
 549              		.loc 1 451 0
 550 0064 40F2C311 		movw	r1, #451
 551 0068 0848     		ldr	r0, .L52+8
 552 006a FFF7FEFF 		bl	_Error_Handler
 553              	.LVL34:
 554              	.L50:
 460:Src/main.c    ****   }
 555              		.loc 1 460 0
 556 006e 4FF4E671 		mov	r1, #460
 557 0072 0648     		ldr	r0, .L52+8
 558 0074 FFF7FEFF 		bl	_Error_Handler
 559              	.LVL35:
 560              	.L51:
 465:Src/main.c    ****   }
 561              		.loc 1 465 0
 562 0078 40F2D111 		movw	r1, #465
 563 007c 0348     		ldr	r0, .L52+8
 564 007e FFF7FEFF 		bl	_Error_Handler
 565              	.LVL36:
 566              	.L53:
 567 0082 00BF     		.align	2
 568              	.L52:
 569 0084 00000000 		.word	htim3
 570 0088 00040040 		.word	1073742848
 571 008c 00000000 		.word	.LC2
 572              		.cfi_endproc
 573              	.LFE138:
 575              		.section	.text.MX_TIM2_Init,"ax",%progbits
 576              		.align	1
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu fpv4-sp-d16
 582              	MX_TIM2_Init:
 583              	.LFB137:
 390:Src/main.c    **** 
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 24


 584              		.loc 1 390 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 40
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588 0000 00B5     		push	{lr}
 589              	.LCFI13:
 590              		.cfi_def_cfa_offset 4
 591              		.cfi_offset 14, -4
 592 0002 8BB0     		sub	sp, sp, #44
 593              	.LCFI14:
 594              		.cfi_def_cfa_offset 48
 395:Src/main.c    ****   htim2.Init.Prescaler = 0;
 595              		.loc 1 395 0
 596 0004 1F48     		ldr	r0, .L64
 597 0006 4FF08043 		mov	r3, #1073741824
 598 000a 0360     		str	r3, [r0]
 396:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 599              		.loc 1 396 0
 600 000c 0023     		movs	r3, #0
 601 000e 4360     		str	r3, [r0, #4]
 397:Src/main.c    ****   htim2.Init.Period = 0;
 602              		.loc 1 397 0
 603 0010 8360     		str	r3, [r0, #8]
 398:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 604              		.loc 1 398 0
 605 0012 C360     		str	r3, [r0, #12]
 399:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 606              		.loc 1 399 0
 607 0014 0361     		str	r3, [r0, #16]
 400:Src/main.c    ****   {
 608              		.loc 1 400 0
 609 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 610              	.LVL37:
 611 001a F8B9     		cbnz	r0, .L60
 405:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 612              		.loc 1 405 0
 613 001c 0023     		movs	r3, #0
 614 001e 0893     		str	r3, [sp, #32]
 406:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 615              		.loc 1 406 0
 616 0020 0993     		str	r3, [sp, #36]
 407:Src/main.c    ****   {
 617              		.loc 1 407 0
 618 0022 08A9     		add	r1, sp, #32
 619 0024 1748     		ldr	r0, .L64
 620 0026 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 621              	.LVL38:
 622 002a E0B9     		cbnz	r0, .L61
 412:Src/main.c    ****   sConfigOC.Pulse = 0;
 623              		.loc 1 412 0
 624 002c 6023     		movs	r3, #96
 625 002e 0193     		str	r3, [sp, #4]
 413:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 626              		.loc 1 413 0
 627 0030 0023     		movs	r3, #0
 628 0032 0293     		str	r3, [sp, #8]
 414:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 25


 629              		.loc 1 414 0
 630 0034 0393     		str	r3, [sp, #12]
 415:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 631              		.loc 1 415 0
 632 0036 0593     		str	r3, [sp, #20]
 416:Src/main.c    ****   {
 633              		.loc 1 416 0
 634 0038 0822     		movs	r2, #8
 635 003a 01A9     		add	r1, sp, #4
 636 003c 1148     		ldr	r0, .L64
 637 003e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 638              	.LVL39:
 639 0042 A8B9     		cbnz	r0, .L62
 421:Src/main.c    ****   {
 640              		.loc 1 421 0
 641 0044 0C22     		movs	r2, #12
 642 0046 01A9     		add	r1, sp, #4
 643 0048 0E48     		ldr	r0, .L64
 644 004a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 645              	.LVL40:
 646 004e A0B9     		cbnz	r0, .L63
 426:Src/main.c    **** 
 647              		.loc 1 426 0
 648 0050 0C48     		ldr	r0, .L64
 649 0052 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 650              	.LVL41:
 428:Src/main.c    **** 
 651              		.loc 1 428 0
 652 0056 0BB0     		add	sp, sp, #44
 653              	.LCFI15:
 654              		.cfi_remember_state
 655              		.cfi_def_cfa_offset 4
 656              		@ sp needed
 657 0058 5DF804FB 		ldr	pc, [sp], #4
 658              	.L60:
 659              	.LCFI16:
 660              		.cfi_restore_state
 402:Src/main.c    ****   }
 661              		.loc 1 402 0
 662 005c 4FF4C971 		mov	r1, #402
 663 0060 0948     		ldr	r0, .L64+4
 664 0062 FFF7FEFF 		bl	_Error_Handler
 665              	.LVL42:
 666              	.L61:
 409:Src/main.c    ****   }
 667              		.loc 1 409 0
 668 0066 40F29911 		movw	r1, #409
 669 006a 0748     		ldr	r0, .L64+4
 670 006c FFF7FEFF 		bl	_Error_Handler
 671              	.LVL43:
 672              	.L62:
 418:Src/main.c    ****   }
 673              		.loc 1 418 0
 674 0070 4FF4D171 		mov	r1, #418
 675 0074 0448     		ldr	r0, .L64+4
 676 0076 FFF7FEFF 		bl	_Error_Handler
 677              	.LVL44:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 26


 678              	.L63:
 423:Src/main.c    ****   }
 679              		.loc 1 423 0
 680 007a 40F2A711 		movw	r1, #423
 681 007e 0248     		ldr	r0, .L64+4
 682 0080 FFF7FEFF 		bl	_Error_Handler
 683              	.LVL45:
 684              	.L65:
 685              		.align	2
 686              	.L64:
 687 0084 00000000 		.word	htim2
 688 0088 00000000 		.word	.LC2
 689              		.cfi_endproc
 690              	.LFE137:
 692              		.section	.text.MX_TIM13_Init,"ax",%progbits
 693              		.align	1
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu fpv4-sp-d16
 699              	MX_TIM13_Init:
 700              	.LFB140:
 526:Src/main.c    **** 
 701              		.loc 1 526 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 32
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705 0000 00B5     		push	{lr}
 706              	.LCFI17:
 707              		.cfi_def_cfa_offset 4
 708              		.cfi_offset 14, -4
 709 0002 89B0     		sub	sp, sp, #36
 710              	.LCFI18:
 711              		.cfi_def_cfa_offset 40
 530:Src/main.c    ****   htim13.Init.Prescaler = 0;
 712              		.loc 1 530 0
 713 0004 1748     		ldr	r0, .L74
 714 0006 184B     		ldr	r3, .L74+4
 715 0008 0360     		str	r3, [r0]
 531:Src/main.c    ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 716              		.loc 1 531 0
 717 000a 0023     		movs	r3, #0
 718 000c 4360     		str	r3, [r0, #4]
 532:Src/main.c    ****   htim13.Init.Period = 0;
 719              		.loc 1 532 0
 720 000e 8360     		str	r3, [r0, #8]
 533:Src/main.c    ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 721              		.loc 1 533 0
 722 0010 C360     		str	r3, [r0, #12]
 534:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 723              		.loc 1 534 0
 724 0012 0361     		str	r3, [r0, #16]
 535:Src/main.c    ****   {
 725              		.loc 1 535 0
 726 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 727              	.LVL46:
 728 0018 A0B9     		cbnz	r0, .L71
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 27


 540:Src/main.c    ****   {
 729              		.loc 1 540 0
 730 001a 1248     		ldr	r0, .L74
 731 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 732              	.LVL47:
 733 0020 A8B9     		cbnz	r0, .L72
 545:Src/main.c    ****   sConfigOC.Pulse = 0;
 734              		.loc 1 545 0
 735 0022 6023     		movs	r3, #96
 736 0024 0193     		str	r3, [sp, #4]
 546:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 737              		.loc 1 546 0
 738 0026 0022     		movs	r2, #0
 739 0028 0292     		str	r2, [sp, #8]
 547:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 740              		.loc 1 547 0
 741 002a 0392     		str	r2, [sp, #12]
 548:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 742              		.loc 1 548 0
 743 002c 0592     		str	r2, [sp, #20]
 549:Src/main.c    ****   {
 744              		.loc 1 549 0
 745 002e 01A9     		add	r1, sp, #4
 746 0030 0C48     		ldr	r0, .L74
 747 0032 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 748              	.LVL48:
 749 0036 78B9     		cbnz	r0, .L73
 554:Src/main.c    **** 
 750              		.loc 1 554 0
 751 0038 0A48     		ldr	r0, .L74
 752 003a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 753              	.LVL49:
 556:Src/main.c    **** 
 754              		.loc 1 556 0
 755 003e 09B0     		add	sp, sp, #36
 756              	.LCFI19:
 757              		.cfi_remember_state
 758              		.cfi_def_cfa_offset 4
 759              		@ sp needed
 760 0040 5DF804FB 		ldr	pc, [sp], #4
 761              	.L71:
 762              	.LCFI20:
 763              		.cfi_restore_state
 537:Src/main.c    ****   }
 764              		.loc 1 537 0
 765 0044 40F21921 		movw	r1, #537
 766 0048 0848     		ldr	r0, .L74+8
 767 004a FFF7FEFF 		bl	_Error_Handler
 768              	.LVL50:
 769              	.L72:
 542:Src/main.c    ****   }
 770              		.loc 1 542 0
 771 004e 40F21E21 		movw	r1, #542
 772 0052 0648     		ldr	r0, .L74+8
 773 0054 FFF7FEFF 		bl	_Error_Handler
 774              	.LVL51:
 775              	.L73:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 28


 551:Src/main.c    ****   }
 776              		.loc 1 551 0
 777 0058 40F22721 		movw	r1, #551
 778 005c 0348     		ldr	r0, .L74+8
 779 005e FFF7FEFF 		bl	_Error_Handler
 780              	.LVL52:
 781              	.L75:
 782 0062 00BF     		.align	2
 783              	.L74:
 784 0064 00000000 		.word	htim13
 785 0068 001C0040 		.word	1073748992
 786 006c 00000000 		.word	.LC2
 787              		.cfi_endproc
 788              	.LFE140:
 790              		.section	.text.MX_TIM14_Init,"ax",%progbits
 791              		.align	1
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu fpv4-sp-d16
 797              	MX_TIM14_Init:
 798              	.LFB141:
 560:Src/main.c    **** 
 799              		.loc 1 560 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 32
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803 0000 00B5     		push	{lr}
 804              	.LCFI21:
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 14, -4
 807 0002 89B0     		sub	sp, sp, #36
 808              	.LCFI22:
 809              		.cfi_def_cfa_offset 40
 564:Src/main.c    ****   htim14.Init.Prescaler = 0;
 810              		.loc 1 564 0
 811 0004 1748     		ldr	r0, .L84
 812 0006 184B     		ldr	r3, .L84+4
 813 0008 0360     		str	r3, [r0]
 565:Src/main.c    ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 814              		.loc 1 565 0
 815 000a 0023     		movs	r3, #0
 816 000c 4360     		str	r3, [r0, #4]
 566:Src/main.c    ****   htim14.Init.Period = 0;
 817              		.loc 1 566 0
 818 000e 8360     		str	r3, [r0, #8]
 567:Src/main.c    ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 819              		.loc 1 567 0
 820 0010 C360     		str	r3, [r0, #12]
 568:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 821              		.loc 1 568 0
 822 0012 0361     		str	r3, [r0, #16]
 569:Src/main.c    ****   {
 823              		.loc 1 569 0
 824 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 825              	.LVL53:
 826 0018 A0B9     		cbnz	r0, .L81
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 29


 574:Src/main.c    ****   {
 827              		.loc 1 574 0
 828 001a 1248     		ldr	r0, .L84
 829 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 830              	.LVL54:
 831 0020 A8B9     		cbnz	r0, .L82
 579:Src/main.c    ****   sConfigOC.Pulse = 0;
 832              		.loc 1 579 0
 833 0022 6023     		movs	r3, #96
 834 0024 0193     		str	r3, [sp, #4]
 580:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 835              		.loc 1 580 0
 836 0026 0022     		movs	r2, #0
 837 0028 0292     		str	r2, [sp, #8]
 581:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 838              		.loc 1 581 0
 839 002a 0392     		str	r2, [sp, #12]
 582:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 840              		.loc 1 582 0
 841 002c 0592     		str	r2, [sp, #20]
 583:Src/main.c    ****   {
 842              		.loc 1 583 0
 843 002e 01A9     		add	r1, sp, #4
 844 0030 0C48     		ldr	r0, .L84
 845 0032 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 846              	.LVL55:
 847 0036 78B9     		cbnz	r0, .L83
 588:Src/main.c    **** 
 848              		.loc 1 588 0
 849 0038 0A48     		ldr	r0, .L84
 850 003a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 851              	.LVL56:
 590:Src/main.c    **** 
 852              		.loc 1 590 0
 853 003e 09B0     		add	sp, sp, #36
 854              	.LCFI23:
 855              		.cfi_remember_state
 856              		.cfi_def_cfa_offset 4
 857              		@ sp needed
 858 0040 5DF804FB 		ldr	pc, [sp], #4
 859              	.L81:
 860              	.LCFI24:
 861              		.cfi_restore_state
 571:Src/main.c    ****   }
 862              		.loc 1 571 0
 863 0044 40F23B21 		movw	r1, #571
 864 0048 0848     		ldr	r0, .L84+8
 865 004a FFF7FEFF 		bl	_Error_Handler
 866              	.LVL57:
 867              	.L82:
 576:Src/main.c    ****   }
 868              		.loc 1 576 0
 869 004e 4FF41071 		mov	r1, #576
 870 0052 0648     		ldr	r0, .L84+8
 871 0054 FFF7FEFF 		bl	_Error_Handler
 872              	.LVL58:
 873              	.L83:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 30


 585:Src/main.c    ****   }
 874              		.loc 1 585 0
 875 0058 40F24921 		movw	r1, #585
 876 005c 0348     		ldr	r0, .L84+8
 877 005e FFF7FEFF 		bl	_Error_Handler
 878              	.LVL59:
 879              	.L85:
 880 0062 00BF     		.align	2
 881              	.L84:
 882 0064 00000000 		.word	htim14
 883 0068 00200040 		.word	1073750016
 884 006c 00000000 		.word	.LC2
 885              		.cfi_endproc
 886              	.LFE141:
 888              		.section	.text.MX_CAN1_Init,"ax",%progbits
 889              		.align	1
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 893              		.fpu fpv4-sp-d16
 895              	MX_CAN1_Init:
 896              	.LFB132:
 307:Src/main.c    **** 
 897              		.loc 1 307 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901 0000 08B5     		push	{r3, lr}
 902              	.LCFI25:
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 3, -8
 905              		.cfi_offset 14, -4
 309:Src/main.c    ****   hcan1.Init.Prescaler = 16;
 906              		.loc 1 309 0
 907 0002 0C48     		ldr	r0, .L90
 908 0004 0C4B     		ldr	r3, .L90+4
 909 0006 0360     		str	r3, [r0]
 310:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 910              		.loc 1 310 0
 911 0008 1023     		movs	r3, #16
 912 000a 4360     		str	r3, [r0, #4]
 311:Src/main.c    ****   hcan1.Init.SJW = CAN_SJW_1TQ;
 913              		.loc 1 311 0
 914 000c 0023     		movs	r3, #0
 915 000e 8360     		str	r3, [r0, #8]
 312:Src/main.c    ****   hcan1.Init.BS1 = CAN_BS1_1TQ;
 916              		.loc 1 312 0
 917 0010 C360     		str	r3, [r0, #12]
 313:Src/main.c    ****   hcan1.Init.BS2 = CAN_BS2_1TQ;
 918              		.loc 1 313 0
 919 0012 0361     		str	r3, [r0, #16]
 314:Src/main.c    ****   hcan1.Init.TTCM = DISABLE;
 920              		.loc 1 314 0
 921 0014 4361     		str	r3, [r0, #20]
 315:Src/main.c    ****   hcan1.Init.ABOM = DISABLE;
 922              		.loc 1 315 0
 923 0016 8361     		str	r3, [r0, #24]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 31


 316:Src/main.c    ****   hcan1.Init.AWUM = DISABLE;
 924              		.loc 1 316 0
 925 0018 C361     		str	r3, [r0, #28]
 317:Src/main.c    ****   hcan1.Init.NART = DISABLE;
 926              		.loc 1 317 0
 927 001a 0362     		str	r3, [r0, #32]
 318:Src/main.c    ****   hcan1.Init.RFLM = DISABLE;
 928              		.loc 1 318 0
 929 001c 4362     		str	r3, [r0, #36]
 319:Src/main.c    ****   hcan1.Init.TXFP = DISABLE;
 930              		.loc 1 319 0
 931 001e 8362     		str	r3, [r0, #40]
 320:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 932              		.loc 1 320 0
 933 0020 C362     		str	r3, [r0, #44]
 321:Src/main.c    ****   {
 934              		.loc 1 321 0
 935 0022 FFF7FEFF 		bl	HAL_CAN_Init
 936              	.LVL60:
 937 0026 00B9     		cbnz	r0, .L89
 938 0028 08BD     		pop	{r3, pc}
 939              	.L89:
 323:Src/main.c    ****   }
 940              		.loc 1 323 0
 941 002a 40F24311 		movw	r1, #323
 942 002e 0348     		ldr	r0, .L90+8
 943 0030 FFF7FEFF 		bl	_Error_Handler
 944              	.LVL61:
 945              	.L91:
 946              		.align	2
 947              	.L90:
 948 0034 00000000 		.word	hcan1
 949 0038 00640040 		.word	1073767424
 950 003c 00000000 		.word	.LC2
 951              		.cfi_endproc
 952              	.LFE132:
 954              		.section	.text.MX_I2C1_Init,"ax",%progbits
 955              		.align	1
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 959              		.fpu fpv4-sp-d16
 961              	MX_I2C1_Init:
 962              	.LFB133:
 330:Src/main.c    **** 
 963              		.loc 1 330 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967 0000 08B5     		push	{r3, lr}
 968              	.LCFI26:
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 3, -8
 971              		.cfi_offset 14, -4
 332:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 972              		.loc 1 332 0
 973 0002 0C48     		ldr	r0, .L96
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 32


 974 0004 0C4B     		ldr	r3, .L96+4
 975 0006 0360     		str	r3, [r0]
 333:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 976              		.loc 1 333 0
 977 0008 0C4B     		ldr	r3, .L96+8
 978 000a 4360     		str	r3, [r0, #4]
 334:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 979              		.loc 1 334 0
 980 000c 0023     		movs	r3, #0
 981 000e 8360     		str	r3, [r0, #8]
 335:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 982              		.loc 1 335 0
 983 0010 C360     		str	r3, [r0, #12]
 336:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 984              		.loc 1 336 0
 985 0012 4FF48042 		mov	r2, #16384
 986 0016 0261     		str	r2, [r0, #16]
 337:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 987              		.loc 1 337 0
 988 0018 4361     		str	r3, [r0, #20]
 338:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 989              		.loc 1 338 0
 990 001a 8361     		str	r3, [r0, #24]
 339:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 991              		.loc 1 339 0
 992 001c C361     		str	r3, [r0, #28]
 340:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 993              		.loc 1 340 0
 994 001e 0362     		str	r3, [r0, #32]
 341:Src/main.c    ****   {
 995              		.loc 1 341 0
 996 0020 FFF7FEFF 		bl	HAL_I2C_Init
 997              	.LVL62:
 998 0024 00B9     		cbnz	r0, .L95
 999 0026 08BD     		pop	{r3, pc}
 1000              	.L95:
 343:Src/main.c    ****   }
 1001              		.loc 1 343 0
 1002 0028 40F25711 		movw	r1, #343
 1003 002c 0448     		ldr	r0, .L96+12
 1004 002e FFF7FEFF 		bl	_Error_Handler
 1005              	.LVL63:
 1006              	.L97:
 1007 0032 00BF     		.align	2
 1008              	.L96:
 1009 0034 00000000 		.word	hi2c1
 1010 0038 00540040 		.word	1073763328
 1011 003c A0860100 		.word	100000
 1012 0040 00000000 		.word	.LC2
 1013              		.cfi_endproc
 1014              	.LFE133:
 1016              		.section	.text.MX_WWDG_Init,"ax",%progbits
 1017              		.align	1
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1021              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 33


 1023              	MX_WWDG_Init:
 1024              	.LFB142:
 594:Src/main.c    **** 
 1025              		.loc 1 594 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029 0000 08B5     		push	{r3, lr}
 1030              	.LCFI27:
 1031              		.cfi_def_cfa_offset 8
 1032              		.cfi_offset 3, -8
 1033              		.cfi_offset 14, -4
 596:Src/main.c    ****   hwwdg.Init.Prescaler = WWDG_PRESCALER_1;
 1034              		.loc 1 596 0
 1035 0002 0948     		ldr	r0, .L102
 1036 0004 094B     		ldr	r3, .L102+4
 1037 0006 0360     		str	r3, [r0]
 597:Src/main.c    ****   hwwdg.Init.Window = 64;
 1038              		.loc 1 597 0
 1039 0008 0023     		movs	r3, #0
 1040 000a 4360     		str	r3, [r0, #4]
 598:Src/main.c    ****   hwwdg.Init.Counter = 64;
 1041              		.loc 1 598 0
 1042 000c 4022     		movs	r2, #64
 1043 000e 8260     		str	r2, [r0, #8]
 599:Src/main.c    ****   hwwdg.Init.EWIMode = WWDG_EWI_DISABLE;
 1044              		.loc 1 599 0
 1045 0010 C260     		str	r2, [r0, #12]
 600:Src/main.c    ****   if (HAL_WWDG_Init(&hwwdg) != HAL_OK)
 1046              		.loc 1 600 0
 1047 0012 0361     		str	r3, [r0, #16]
 601:Src/main.c    ****   {
 1048              		.loc 1 601 0
 1049 0014 FFF7FEFF 		bl	HAL_WWDG_Init
 1050              	.LVL64:
 1051 0018 00B9     		cbnz	r0, .L101
 1052 001a 08BD     		pop	{r3, pc}
 1053              	.L101:
 603:Src/main.c    ****   }
 1054              		.loc 1 603 0
 1055 001c 40F25B21 		movw	r1, #603
 1056 0020 0348     		ldr	r0, .L102+8
 1057 0022 FFF7FEFF 		bl	_Error_Handler
 1058              	.LVL65:
 1059              	.L103:
 1060 0026 00BF     		.align	2
 1061              	.L102:
 1062 0028 00000000 		.word	hwwdg
 1063 002c 002C0040 		.word	1073753088
 1064 0030 00000000 		.word	.LC2
 1065              		.cfi_endproc
 1066              	.LFE142:
 1068              		.section	.text.MX_IWDG_Init,"ax",%progbits
 1069              		.align	1
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 34


 1073              		.fpu fpv4-sp-d16
 1075              	MX_IWDG_Init:
 1076              	.LFB134:
 350:Src/main.c    **** 
 1077              		.loc 1 350 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081 0000 08B5     		push	{r3, lr}
 1082              	.LCFI28:
 1083              		.cfi_def_cfa_offset 8
 1084              		.cfi_offset 3, -8
 1085              		.cfi_offset 14, -4
 352:Src/main.c    ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 1086              		.loc 1 352 0
 1087 0002 0848     		ldr	r0, .L108
 1088 0004 084B     		ldr	r3, .L108+4
 1089 0006 0360     		str	r3, [r0]
 353:Src/main.c    ****   hiwdg.Init.Reload = 4095;
 1090              		.loc 1 353 0
 1091 0008 0023     		movs	r3, #0
 1092 000a 4360     		str	r3, [r0, #4]
 354:Src/main.c    ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 1093              		.loc 1 354 0
 1094 000c 40F6FF73 		movw	r3, #4095
 1095 0010 8360     		str	r3, [r0, #8]
 355:Src/main.c    ****   {
 1096              		.loc 1 355 0
 1097 0012 FFF7FEFF 		bl	HAL_IWDG_Init
 1098              	.LVL66:
 1099 0016 00B9     		cbnz	r0, .L107
 1100 0018 08BD     		pop	{r3, pc}
 1101              	.L107:
 357:Src/main.c    ****   }
 1102              		.loc 1 357 0
 1103 001a 40F26511 		movw	r1, #357
 1104 001e 0348     		ldr	r0, .L108+8
 1105 0020 FFF7FEFF 		bl	_Error_Handler
 1106              	.LVL67:
 1107              	.L109:
 1108              		.align	2
 1109              	.L108:
 1110 0024 00000000 		.word	hiwdg
 1111 0028 00300040 		.word	1073754112
 1112 002c 00000000 		.word	.LC2
 1113              		.cfi_endproc
 1114              	.LFE134:
 1116              		.section	.text.MX_RNG_Init,"ax",%progbits
 1117              		.align	1
 1118              		.syntax unified
 1119              		.thumb
 1120              		.thumb_func
 1121              		.fpu fpv4-sp-d16
 1123              	MX_RNG_Init:
 1124              	.LFB135:
 364:Src/main.c    **** 
 1125              		.loc 1 364 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 35


 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 0
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129 0000 08B5     		push	{r3, lr}
 1130              	.LCFI29:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 3, -8
 1133              		.cfi_offset 14, -4
 366:Src/main.c    ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 1134              		.loc 1 366 0
 1135 0002 0648     		ldr	r0, .L114
 1136 0004 064B     		ldr	r3, .L114+4
 1137 0006 0360     		str	r3, [r0]
 367:Src/main.c    ****   {
 1138              		.loc 1 367 0
 1139 0008 FFF7FEFF 		bl	HAL_RNG_Init
 1140              	.LVL68:
 1141 000c 00B9     		cbnz	r0, .L113
 1142 000e 08BD     		pop	{r3, pc}
 1143              	.L113:
 369:Src/main.c    ****   }
 1144              		.loc 1 369 0
 1145 0010 40F27111 		movw	r1, #369
 1146 0014 0348     		ldr	r0, .L114+8
 1147 0016 FFF7FEFF 		bl	_Error_Handler
 1148              	.LVL69:
 1149              	.L115:
 1150 001a 00BF     		.align	2
 1151              	.L114:
 1152 001c 00000000 		.word	hrng
 1153 0020 00080650 		.word	1342572544
 1154 0024 00000000 		.word	.LC2
 1155              		.cfi_endproc
 1156              	.LFE135:
 1158              		.section	.text.MX_ADC3_Init,"ax",%progbits
 1159              		.align	1
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1163              		.fpu fpv4-sp-d16
 1165              	MX_ADC3_Init:
 1166              	.LFB131:
 270:Src/main.c    **** 
 1167              		.loc 1 270 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 16
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171 0000 00B5     		push	{lr}
 1172              	.LCFI30:
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 14, -4
 1175 0002 85B0     		sub	sp, sp, #20
 1176              	.LCFI31:
 1177              		.cfi_def_cfa_offset 24
 276:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 1178              		.loc 1 276 0
 1179 0004 1548     		ldr	r0, .L122
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 36


 1180 0006 164B     		ldr	r3, .L122+4
 1181 0008 0360     		str	r3, [r0]
 277:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 1182              		.loc 1 277 0
 1183 000a 0023     		movs	r3, #0
 1184 000c 4360     		str	r3, [r0, #4]
 278:Src/main.c    ****   hadc3.Init.ScanConvMode = DISABLE;
 1185              		.loc 1 278 0
 1186 000e 8360     		str	r3, [r0, #8]
 279:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 1187              		.loc 1 279 0
 1188 0010 0361     		str	r3, [r0, #16]
 280:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 1189              		.loc 1 280 0
 1190 0012 8361     		str	r3, [r0, #24]
 281:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1191              		.loc 1 281 0
 1192 0014 0362     		str	r3, [r0, #32]
 282:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1193              		.loc 1 282 0
 1194 0016 C362     		str	r3, [r0, #44]
 283:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1195              		.loc 1 283 0
 1196 0018 124A     		ldr	r2, .L122+8
 1197 001a 8262     		str	r2, [r0, #40]
 284:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 1198              		.loc 1 284 0
 1199 001c C360     		str	r3, [r0, #12]
 285:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 1200              		.loc 1 285 0
 1201 001e 0122     		movs	r2, #1
 1202 0020 C261     		str	r2, [r0, #28]
 286:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1203              		.loc 1 286 0
 1204 0022 0363     		str	r3, [r0, #48]
 287:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 1205              		.loc 1 287 0
 1206 0024 4261     		str	r2, [r0, #20]
 288:Src/main.c    ****   {
 1207              		.loc 1 288 0
 1208 0026 FFF7FEFF 		bl	HAL_ADC_Init
 1209              	.LVL70:
 1210 002a 68B9     		cbnz	r0, .L120
 295:Src/main.c    ****   sConfig.Rank = 1;
 1211              		.loc 1 295 0
 1212 002c 0A23     		movs	r3, #10
 1213 002e 0093     		str	r3, [sp]
 296:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1214              		.loc 1 296 0
 1215 0030 0123     		movs	r3, #1
 1216 0032 0193     		str	r3, [sp, #4]
 297:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 1217              		.loc 1 297 0
 1218 0034 0023     		movs	r3, #0
 1219 0036 0293     		str	r3, [sp, #8]
 298:Src/main.c    ****   {
 1220              		.loc 1 298 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 37


 1221 0038 6946     		mov	r1, sp
 1222 003a 0848     		ldr	r0, .L122
 1223 003c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1224              	.LVL71:
 1225 0040 38B9     		cbnz	r0, .L121
 303:Src/main.c    **** 
 1226              		.loc 1 303 0
 1227 0042 05B0     		add	sp, sp, #20
 1228              	.LCFI32:
 1229              		.cfi_remember_state
 1230              		.cfi_def_cfa_offset 4
 1231              		@ sp needed
 1232 0044 5DF804FB 		ldr	pc, [sp], #4
 1233              	.L120:
 1234              	.LCFI33:
 1235              		.cfi_restore_state
 290:Src/main.c    ****   }
 1236              		.loc 1 290 0
 1237 0048 4FF49171 		mov	r1, #290
 1238 004c 0648     		ldr	r0, .L122+12
 1239 004e FFF7FEFF 		bl	_Error_Handler
 1240              	.LVL72:
 1241              	.L121:
 300:Src/main.c    ****   }
 1242              		.loc 1 300 0
 1243 0052 4FF49671 		mov	r1, #300
 1244 0056 0448     		ldr	r0, .L122+12
 1245 0058 FFF7FEFF 		bl	_Error_Handler
 1246              	.LVL73:
 1247              	.L123:
 1248              		.align	2
 1249              	.L122:
 1250 005c 00000000 		.word	hadc3
 1251 0060 00220140 		.word	1073816064
 1252 0064 0100000F 		.word	251658241
 1253 0068 00000000 		.word	.LC2
 1254              		.cfi_endproc
 1255              	.LFE131:
 1257              		.section	.text.SystemClock_Config,"ax",%progbits
 1258              		.align	1
 1259              		.global	SystemClock_Config
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1263              		.fpu fpv4-sp-d16
 1265              	SystemClock_Config:
 1266              	.LFB130:
 215:Src/main.c    **** 
 1267              		.loc 1 215 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 80
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271 0000 00B5     		push	{lr}
 1272              	.LCFI34:
 1273              		.cfi_def_cfa_offset 4
 1274              		.cfi_offset 14, -4
 1275 0002 95B0     		sub	sp, sp, #84
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 38


 1276              	.LCFI35:
 1277              		.cfi_def_cfa_offset 88
 1278              	.LBB7:
 222:Src/main.c    **** 
 1279              		.loc 1 222 0
 1280 0004 0021     		movs	r1, #0
 1281 0006 0191     		str	r1, [sp, #4]
 1282 0008 2C4B     		ldr	r3, .L130
 1283 000a 1A6C     		ldr	r2, [r3, #64]
 1284 000c 42F08052 		orr	r2, r2, #268435456
 1285 0010 1A64     		str	r2, [r3, #64]
 1286 0012 1B6C     		ldr	r3, [r3, #64]
 1287 0014 03F08053 		and	r3, r3, #268435456
 1288 0018 0193     		str	r3, [sp, #4]
 1289 001a 019B     		ldr	r3, [sp, #4]
 1290              	.LBE7:
 1291              	.LBB8:
 224:Src/main.c    **** 
 1292              		.loc 1 224 0
 1293 001c 0291     		str	r1, [sp, #8]
 1294 001e 284B     		ldr	r3, .L130+4
 1295 0020 1A68     		ldr	r2, [r3]
 1296 0022 42F48042 		orr	r2, r2, #16384
 1297 0026 1A60     		str	r2, [r3]
 1298 0028 1B68     		ldr	r3, [r3]
 1299 002a 03F48043 		and	r3, r3, #16384
 1300 002e 0293     		str	r3, [sp, #8]
 1301 0030 029B     		ldr	r3, [sp, #8]
 1302              	.LBE8:
 228:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1303              		.loc 1 228 0
 1304 0032 0923     		movs	r3, #9
 1305 0034 0893     		str	r3, [sp, #32]
 229:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1306              		.loc 1 229 0
 1307 0036 4FF48033 		mov	r3, #65536
 1308 003a 0993     		str	r3, [sp, #36]
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1309              		.loc 1 230 0
 1310 003c 0123     		movs	r3, #1
 1311 003e 0D93     		str	r3, [sp, #52]
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1312              		.loc 1 231 0
 1313 0040 0223     		movs	r3, #2
 1314 0042 0E93     		str	r3, [sp, #56]
 232:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1315              		.loc 1 232 0
 1316 0044 4FF48002 		mov	r2, #4194304
 1317 0048 0F92     		str	r2, [sp, #60]
 233:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1318              		.loc 1 233 0
 1319 004a 0F22     		movs	r2, #15
 1320 004c 1092     		str	r2, [sp, #64]
 234:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1321              		.loc 1 234 0
 1322 004e 9022     		movs	r2, #144
 1323 0050 1192     		str	r2, [sp, #68]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 39


 235:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 5;
 1324              		.loc 1 235 0
 1325 0052 1293     		str	r3, [sp, #72]
 236:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1326              		.loc 1 236 0
 1327 0054 0523     		movs	r3, #5
 1328 0056 1393     		str	r3, [sp, #76]
 237:Src/main.c    ****   {
 1329              		.loc 1 237 0
 1330 0058 08A8     		add	r0, sp, #32
 1331 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1332              	.LVL74:
 1333 005e 20BB     		cbnz	r0, .L128
 244:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1334              		.loc 1 244 0
 1335 0060 0F23     		movs	r3, #15
 1336 0062 0393     		str	r3, [sp, #12]
 246:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1337              		.loc 1 246 0
 1338 0064 0223     		movs	r3, #2
 1339 0066 0493     		str	r3, [sp, #16]
 247:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1340              		.loc 1 247 0
 1341 0068 0023     		movs	r3, #0
 1342 006a 0593     		str	r3, [sp, #20]
 248:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1343              		.loc 1 248 0
 1344 006c 4FF4A053 		mov	r3, #5120
 1345 0070 0693     		str	r3, [sp, #24]
 249:Src/main.c    **** 
 1346              		.loc 1 249 0
 1347 0072 4FF48053 		mov	r3, #4096
 1348 0076 0793     		str	r3, [sp, #28]
 251:Src/main.c    ****   {
 1349              		.loc 1 251 0
 1350 0078 0321     		movs	r1, #3
 1351 007a 03A8     		add	r0, sp, #12
 1352 007c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1353              	.LVL75:
 1354 0080 B8B9     		cbnz	r0, .L129
 258:Src/main.c    **** 
 1355              		.loc 1 258 0
 1356 0082 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1357              	.LVL76:
 1358 0086 0F4B     		ldr	r3, .L130+8
 1359 0088 A3FB0030 		umull	r3, r0, r3, r0
 1360 008c 8009     		lsrs	r0, r0, #6
 1361 008e FFF7FEFF 		bl	HAL_SYSTICK_Config
 1362              	.LVL77:
 262:Src/main.c    **** 
 1363              		.loc 1 262 0
 1364 0092 0420     		movs	r0, #4
 1365 0094 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 1366              	.LVL78:
 265:Src/main.c    **** }
 1367              		.loc 1 265 0
 1368 0098 0022     		movs	r2, #0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 40


 1369 009a 0F21     		movs	r1, #15
 1370 009c 4FF0FF30 		mov	r0, #-1
 1371 00a0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1372              	.LVL79:
 266:Src/main.c    **** 
 1373              		.loc 1 266 0
 1374 00a4 15B0     		add	sp, sp, #84
 1375              	.LCFI36:
 1376              		.cfi_remember_state
 1377              		.cfi_def_cfa_offset 4
 1378              		@ sp needed
 1379 00a6 5DF804FB 		ldr	pc, [sp], #4
 1380              	.L128:
 1381              	.LCFI37:
 1382              		.cfi_restore_state
 239:Src/main.c    ****   }
 1383              		.loc 1 239 0
 1384 00aa EF21     		movs	r1, #239
 1385 00ac 0648     		ldr	r0, .L130+12
 1386 00ae FFF7FEFF 		bl	_Error_Handler
 1387              	.LVL80:
 1388              	.L129:
 253:Src/main.c    ****   }
 1389              		.loc 1 253 0
 1390 00b2 FD21     		movs	r1, #253
 1391 00b4 0448     		ldr	r0, .L130+12
 1392 00b6 FFF7FEFF 		bl	_Error_Handler
 1393              	.LVL81:
 1394              	.L131:
 1395 00ba 00BF     		.align	2
 1396              	.L130:
 1397 00bc 00380240 		.word	1073887232
 1398 00c0 00700040 		.word	1073770496
 1399 00c4 D34D6210 		.word	274877907
 1400 00c8 00000000 		.word	.LC2
 1401              		.cfi_endproc
 1402              	.LFE130:
 1404              		.section	.text.main,"ax",%progbits
 1405              		.align	1
 1406              		.global	main
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
 1410              		.fpu fpv4-sp-d16
 1412              	main:
 1413              	.LFB129:
 124:Src/main.c    **** 
 1414              		.loc 1 124 0
 1415              		.cfi_startproc
 1416              		@ Volatile: function does not return.
 1417              		@ args = 0, pretend = 0, frame = 24
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419 0000 00B5     		push	{lr}
 1420              	.LCFI38:
 1421              		.cfi_def_cfa_offset 4
 1422              		.cfi_offset 14, -4
 1423 0002 89B0     		sub	sp, sp, #36
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 41


 1424              	.LCFI39:
 1425              		.cfi_def_cfa_offset 40
 133:Src/main.c    **** 
 1426              		.loc 1 133 0
 1427 0004 FFF7FEFF 		bl	HAL_Init
 1428              	.LVL82:
 142:Src/main.c    **** 
 1429              		.loc 1 142 0
 1430 0008 FFF7FEFF 		bl	SystemClock_Config
 1431              	.LVL83:
 149:Src/main.c    ****   MX_TIM5_Init();
 1432              		.loc 1 149 0
 1433 000c FFF7FEFF 		bl	MX_GPIO_Init
 1434              	.LVL84:
 150:Src/main.c    ****   MX_TIM3_Init();
 1435              		.loc 1 150 0
 1436 0010 FFF7FEFF 		bl	MX_TIM5_Init
 1437              	.LVL85:
 151:Src/main.c    ****   MX_TIM2_Init();
 1438              		.loc 1 151 0
 1439 0014 FFF7FEFF 		bl	MX_TIM3_Init
 1440              	.LVL86:
 152:Src/main.c    ****   MX_TIM13_Init();
 1441              		.loc 1 152 0
 1442 0018 FFF7FEFF 		bl	MX_TIM2_Init
 1443              	.LVL87:
 153:Src/main.c    ****   MX_TIM14_Init();
 1444              		.loc 1 153 0
 1445 001c FFF7FEFF 		bl	MX_TIM13_Init
 1446              	.LVL88:
 154:Src/main.c    ****   MX_CAN1_Init();
 1447              		.loc 1 154 0
 1448 0020 FFF7FEFF 		bl	MX_TIM14_Init
 1449              	.LVL89:
 155:Src/main.c    ****   MX_SDIO_SD_Init();
 1450              		.loc 1 155 0
 1451 0024 FFF7FEFF 		bl	MX_CAN1_Init
 1452              	.LVL90:
 156:Src/main.c    ****   MX_I2C1_Init();
 1453              		.loc 1 156 0
 1454 0028 FFF7FEFF 		bl	MX_SDIO_SD_Init
 1455              	.LVL91:
 157:Src/main.c    ****   MX_WWDG_Init();
 1456              		.loc 1 157 0
 1457 002c FFF7FEFF 		bl	MX_I2C1_Init
 1458              	.LVL92:
 158:Src/main.c    ****   MX_IWDG_Init();
 1459              		.loc 1 158 0
 1460 0030 FFF7FEFF 		bl	MX_WWDG_Init
 1461              	.LVL93:
 159:Src/main.c    ****   MX_RNG_Init();
 1462              		.loc 1 159 0
 1463 0034 FFF7FEFF 		bl	MX_IWDG_Init
 1464              	.LVL94:
 160:Src/main.c    ****   MX_ADC3_Init();
 1465              		.loc 1 160 0
 1466 0038 FFF7FEFF 		bl	MX_RNG_Init
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 42


 1467              	.LVL95:
 161:Src/main.c    **** 
 1468              		.loc 1 161 0
 1469 003c FFF7FEFF 		bl	MX_ADC3_Init
 1470              	.LVL96:
 164:Src/main.c    ****   xTaskCreate( vKillStatus, "KillStatus", configMINIMAL_STACK_SIZE, NULL, 0, ( TaskHandle_t * ) NUL
 1471              		.loc 1 164 0
 1472 0040 0024     		movs	r4, #0
 1473 0042 0194     		str	r4, [sp, #4]
 1474 0044 0094     		str	r4, [sp]
 1475 0046 2346     		mov	r3, r4
 1476 0048 8022     		movs	r2, #128
 1477 004a 0D49     		ldr	r1, .L135
 1478 004c 0D48     		ldr	r0, .L135+4
 1479 004e FFF7FEFF 		bl	xTaskCreate
 1480              	.LVL97:
 165:Src/main.c    ****   /* USER CODE END 2 */
 1481              		.loc 1 165 0
 1482 0052 0194     		str	r4, [sp, #4]
 1483 0054 0094     		str	r4, [sp]
 1484 0056 2346     		mov	r3, r4
 1485 0058 8022     		movs	r2, #128
 1486 005a 0B49     		ldr	r1, .L135+8
 1487 005c 0B48     		ldr	r0, .L135+12
 1488 005e FFF7FEFF 		bl	xTaskCreate
 1489              	.LVL98:
 182:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 1490              		.loc 1 182 0
 1491 0062 03AD     		add	r5, sp, #12
 1492 0064 0A4E     		ldr	r6, .L135+16
 1493 0066 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1494 0068 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1495 006a 3368     		ldr	r3, [r6]
 1496 006c 2B60     		str	r3, [r5]
 183:Src/main.c    **** 
 1497              		.loc 1 183 0
 1498 006e 2146     		mov	r1, r4
 1499 0070 03A8     		add	r0, sp, #12
 1500 0072 FFF7FEFF 		bl	osThreadCreate
 1501              	.LVL99:
 1502 0076 074B     		ldr	r3, .L135+20
 1503 0078 1860     		str	r0, [r3]
 195:Src/main.c    **** 
 1504              		.loc 1 195 0
 1505 007a FFF7FEFF 		bl	osKernelStart
 1506              	.LVL100:
 1507              	.L133:
 1508 007e FEE7     		b	.L133
 1509              	.L136:
 1510              		.align	2
 1511              	.L135:
 1512 0080 00000000 		.word	.LC3
 1513 0084 00000000 		.word	vHeartbeat
 1514 0088 0C000000 		.word	.LC4
 1515 008c 00000000 		.word	vKillStatus
 1516 0090 00000000 		.word	.LANCHOR0
 1517 0094 00000000 		.word	defaultTaskHandle
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 43


 1518              		.cfi_endproc
 1519              	.LFE129:
 1521              		.comm	defaultTaskHandle,4,4
 1522              		.comm	hwwdg,20,4
 1523              		.comm	htim14,60,4
 1524              		.comm	htim13,60,4
 1525              		.comm	htim5,60,4
 1526              		.comm	htim3,60,4
 1527              		.comm	htim2,60,4
 1528              		.comm	hsd,132,4
 1529              		.comm	hrng,12,4
 1530              		.comm	hiwdg,12,4
 1531              		.comm	hi2c1,84,4
 1532              		.comm	hcan1,68,4
 1533              		.comm	hadc3,72,4
 1534              		.section	.rodata
 1535              		.align	2
 1536              		.set	.LANCHOR0,. + 0
 1537              	.LC5:
 1538 0000 00000000 		.word	.LC0
 1539 0004 00000000 		.word	StartDefaultTask
 1540 0008 0000     		.short	0
 1541 000a 0000     		.space	2
 1542 000c 00000000 		.word	0
 1543 0010 80000000 		.word	128
 1544              		.section	.rodata.MX_TIM5_Init.str1.4,"aMS",%progbits,1
 1545              		.align	2
 1546              	.LC2:
 1547 0000 5372632F 		.ascii	"Src/main.c\000"
 1547      6D61696E 
 1547      2E6300
 1548              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1549              		.align	2
 1550              	.LC3:
 1551 0000 48656172 		.ascii	"Heartbeat\000"
 1551      74626561 
 1551      7400
 1552 000a 0000     		.space	2
 1553              	.LC4:
 1554 000c 4B696C6C 		.ascii	"KillStatus\000"
 1554      53746174 
 1554      757300
 1555              		.section	.rodata.str1.4,"aMS",%progbits,1
 1556              		.align	2
 1557              	.LC0:
 1558 0000 64656661 		.ascii	"defaultTask\000"
 1558      756C7454 
 1558      61736B00 
 1559              		.text
 1560              	.Letext0:
 1561              		.file 2 "/Users/augustmason/Documents/GitHub/riptide_firmware/STMTest/gcc-arm-none-eabi-6-2017-q2-
 1562              		.file 3 "/Users/augustmason/Documents/GitHub/riptide_firmware/STMTest/gcc-arm-none-eabi-6-2017-q2-
 1563              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1564              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1565              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1566              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1567              		.file 8 "/Users/augustmason/Documents/GitHub/riptide_firmware/STMTest/gcc-arm-none-eabi-6-2017-q2-
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 44


 1568              		.file 9 "/Users/augustmason/Documents/GitHub/riptide_firmware/STMTest/gcc-arm-none-eabi-6-2017-q2-
 1569              		.file 10 "/Users/augustmason/Documents/GitHub/riptide_firmware/STMTest/gcc-arm-none-eabi-6-2017-q2
 1570              		.file 11 "/Users/augustmason/Documents/GitHub/riptide_firmware/STMTest/gcc-arm-none-eabi-6-2017-q2
 1571              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1572              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1573              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1574              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1575              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1576              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1577              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1578              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_iwdg.h"
 1579              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rng.h"
 1580              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 1581              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 1582              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1583              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1584              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_wwdg.h"
 1585              		.file 26 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1586              		.file 27 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1587              		.file 28 "Middlewares/Third_Party/FatFs/src/integer.h"
 1588              		.file 29 "Middlewares/Third_Party/FatFs/src/diskio.h"
 1589              		.file 30 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1590              		.file 31 "Middlewares/Third_Party/FatFs/src/drivers/sd_diskio.h"
 1591              		.file 32 "Inc/fatfs.h"
 1592              		.file 33 "/Users/augustmason/Documents/GitHub/riptide_firmware/STMTest/gcc-arm-none-eabi-6-2017-q2
 1593              		.file 34 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1594              		.file 35 "Inc/usb_device.h"
 1595              		.file 36 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1596              		.file 37 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1597              		.file 38 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:18     .text.MX_SDIO_SD_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:24     .text.MX_SDIO_SD_Init:0000000000000000 MX_SDIO_SD_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:53     .text.MX_SDIO_SD_Init:0000000000000018 $d
                            *COM*:0000000000000084 hsd
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:59     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:65     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:141    .text.MX_GPIO_Init:0000000000000070 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:146    .text.vKillStatus:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:153    .text.vKillStatus:0000000000000000 vKillStatus
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:167    .text.vHeartbeat:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:174    .text.vHeartbeat:0000000000000000 vHeartbeat
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:209    .text.vHeartbeat:0000000000000024 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:214    .text.StartDefaultTask:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:221    .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:250    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:257    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:287    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:292    .text._Error_Handler:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:299    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:314    .text.MX_TIM5_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:320    .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:451    .text.MX_TIM5_Init:00000000000000b0 $d
                            *COM*:000000000000003c htim5
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:458    .text.MX_TIM3_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:464    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:569    .text.MX_TIM3_Init:0000000000000084 $d
                            *COM*:000000000000003c htim3
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:576    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:582    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:687    .text.MX_TIM2_Init:0000000000000084 $d
                            *COM*:000000000000003c htim2
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:693    .text.MX_TIM13_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:699    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:784    .text.MX_TIM13_Init:0000000000000064 $d
                            *COM*:000000000000003c htim13
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:791    .text.MX_TIM14_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:797    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:882    .text.MX_TIM14_Init:0000000000000064 $d
                            *COM*:000000000000003c htim14
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:889    .text.MX_CAN1_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:895    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:948    .text.MX_CAN1_Init:0000000000000034 $d
                            *COM*:0000000000000044 hcan1
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:955    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:961    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1009   .text.MX_I2C1_Init:0000000000000034 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1017   .text.MX_WWDG_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1023   .text.MX_WWDG_Init:0000000000000000 MX_WWDG_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1062   .text.MX_WWDG_Init:0000000000000028 $d
                            *COM*:0000000000000014 hwwdg
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1069   .text.MX_IWDG_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1075   .text.MX_IWDG_Init:0000000000000000 MX_IWDG_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1110   .text.MX_IWDG_Init:0000000000000024 $d
                            *COM*:000000000000000c hiwdg
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s 			page 46


/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1117   .text.MX_RNG_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1123   .text.MX_RNG_Init:0000000000000000 MX_RNG_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1152   .text.MX_RNG_Init:000000000000001c $d
                            *COM*:000000000000000c hrng
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1159   .text.MX_ADC3_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1165   .text.MX_ADC3_Init:0000000000000000 MX_ADC3_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1250   .text.MX_ADC3_Init:000000000000005c $d
                            *COM*:0000000000000048 hadc3
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1258   .text.SystemClock_Config:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1265   .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1397   .text.SystemClock_Config:00000000000000bc $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1405   .text.main:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1412   .text.main:0000000000000000 main
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1512   .text.main:0000000000000080 $d
                            *COM*:0000000000000004 defaultTaskHandle
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1535   .rodata:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1545   .rodata.MX_TIM5_Init.str1.4:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1549   .rodata.main.str1.4:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cciuguTQ.s:1556   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
HAL_Delay
MX_USB_DEVICE_Init
MX_FATFS_Init
osDelay
HAL_IncTick
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_TIM_Base_Init
HAL_CAN_Init
HAL_I2C_Init
HAL_WWDG_Init
HAL_IWDG_Init
HAL_RNG_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
xTaskCreate
osThreadCreate
osKernelStart
