ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB131:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 2


  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f4xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN Includes */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  58:Src/main.c    **** osThreadId defaultTaskHandle;
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PV */
  61:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PV */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  66:Src/main.c    **** void SystemClock_Config(void);
  67:Src/main.c    **** static void MX_GPIO_Init(void);
  68:Src/main.c    **** void StartDefaultTask(void const * argument);
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE BEGIN PFP */
  71:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PFP */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN 0 */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END 0 */
  78:Src/main.c    **** 
  79:Src/main.c    **** int main(void)
  80:Src/main.c    **** {
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE BEGIN 1 */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE END 1 */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Src/main.c    ****   HAL_Init();
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN Init */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Configure the system clock */
  96:Src/main.c    ****   SystemClock_Config();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Initialize all configured peripherals */
 103:Src/main.c    ****   MX_GPIO_Init();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN 2 */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END 2 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 110:Src/main.c    ****   /* add mutexes, ... */
 111:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 114:Src/main.c    ****   /* add semaphores, ... */
 115:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 118:Src/main.c    ****   /* start timers, add new ones, ... */
 119:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Create the thread(s) */
 122:Src/main.c    ****   /* definition and creation of defaultTask */
 123:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 124:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 127:Src/main.c    ****   /* add threads, ... */
 128:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 131:Src/main.c    ****   /* add queues, ... */
 132:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 133:Src/main.c    ****  
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* Start scheduler */
 136:Src/main.c    ****   osKernelStart();
 137:Src/main.c    ****   
 138:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* Infinite loop */
 141:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 142:Src/main.c    ****   while (1)
 143:Src/main.c    ****   {
 144:Src/main.c    ****   /* USER CODE END WHILE */
 145:Src/main.c    **** 
 146:Src/main.c    ****   /* USER CODE BEGIN 3 */
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****   }
 149:Src/main.c    ****   /* USER CODE END 3 */
 150:Src/main.c    **** 
 151:Src/main.c    **** }
 152:Src/main.c    **** 
 153:Src/main.c    **** /** System Clock Configuration
 154:Src/main.c    **** */
 155:Src/main.c    **** void SystemClock_Config(void)
 156:Src/main.c    **** {
 157:Src/main.c    **** 
 158:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 159:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 160:Src/main.c    **** 
 161:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 162:Src/main.c    ****     */
 163:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 164:Src/main.c    **** 
 165:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 166:Src/main.c    **** 
 167:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 168:Src/main.c    ****     */
 169:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 170:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 171:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 172:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 173:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 174:Src/main.c    ****   {
 175:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 176:Src/main.c    ****   }
 177:Src/main.c    **** 
 178:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 179:Src/main.c    ****     */
 180:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 181:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 182:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 183:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 184:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 185:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 186:Src/main.c    **** 
 187:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 188:Src/main.c    ****   {
 189:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 190:Src/main.c    ****   }
 191:Src/main.c    **** 
 192:Src/main.c    ****     /**Configure the Systick interrupt time 
 193:Src/main.c    ****     */
 194:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 195:Src/main.c    **** 
 196:Src/main.c    ****     /**Configure the Systick 
 197:Src/main.c    ****     */
 198:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 199:Src/main.c    **** 
 200:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 201:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 202:Src/main.c    **** }
 203:Src/main.c    **** 
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 5


 204:Src/main.c    **** /** Configure pins as 
 205:Src/main.c    ****         * Analog 
 206:Src/main.c    ****         * Input 
 207:Src/main.c    ****         * Output
 208:Src/main.c    ****         * EVENT_OUT
 209:Src/main.c    ****         * EXTI
 210:Src/main.c    **** */
 211:Src/main.c    **** static void MX_GPIO_Init(void)
 212:Src/main.c    **** {
  27              		.loc 1 212 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
  40              	.LBB2:
 213:Src/main.c    **** 
 214:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* GPIO Ports Clock Enable */
 217:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  41              		.loc 1 217 0
  42 0004 0024     		movs	r4, #0
  43 0006 0194     		str	r4, [sp, #4]
  44 0008 1C4B     		ldr	r3, .L3
  45 000a 1A6B     		ldr	r2, [r3, #48]
  46 000c 42F08002 		orr	r2, r2, #128
  47 0010 1A63     		str	r2, [r3, #48]
  48 0012 1A6B     		ldr	r2, [r3, #48]
  49 0014 02F08002 		and	r2, r2, #128
  50 0018 0192     		str	r2, [sp, #4]
  51 001a 019A     		ldr	r2, [sp, #4]
  52              	.LBE2:
  53              	.LBB3:
 218:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 218 0
  55 001c 0294     		str	r4, [sp, #8]
  56 001e 1A6B     		ldr	r2, [r3, #48]
  57 0020 42F00402 		orr	r2, r2, #4
  58 0024 1A63     		str	r2, [r3, #48]
  59 0026 1A6B     		ldr	r2, [r3, #48]
  60 0028 02F00402 		and	r2, r2, #4
  61 002c 0292     		str	r2, [sp, #8]
  62 002e 029A     		ldr	r2, [sp, #8]
  63              	.LBE3:
  64              	.LBB4:
 219:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 219 0
  66 0030 0394     		str	r4, [sp, #12]
  67 0032 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 6


  68 0034 42F00102 		orr	r2, r2, #1
  69 0038 1A63     		str	r2, [r3, #48]
  70 003a 1A6B     		ldr	r2, [r3, #48]
  71 003c 02F00102 		and	r2, r2, #1
  72 0040 0392     		str	r2, [sp, #12]
  73 0042 039A     		ldr	r2, [sp, #12]
  74              	.LBE4:
  75              	.LBB5:
 220:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  76              		.loc 1 220 0
  77 0044 0494     		str	r4, [sp, #16]
  78 0046 1A6B     		ldr	r2, [r3, #48]
  79 0048 42F00202 		orr	r2, r2, #2
  80 004c 1A63     		str	r2, [r3, #48]
  81 004e 1B6B     		ldr	r3, [r3, #48]
  82 0050 03F00203 		and	r3, r3, #2
  83 0054 0493     		str	r3, [sp, #16]
  84 0056 049B     		ldr	r3, [sp, #16]
  85              	.LBE5:
 221:Src/main.c    **** 
 222:Src/main.c    ****   /*Configure GPIO pin Output Level */
 223:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
  86              		.loc 1 223 0
  87 0058 094D     		ldr	r5, .L3+4
  88 005a 2246     		mov	r2, r4
  89 005c C021     		movs	r1, #192
  90 005e 2846     		mov	r0, r5
  91 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL0:
 224:Src/main.c    **** 
 225:Src/main.c    ****   /*Configure GPIO pins : PC6 PC7 */
 226:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
  93              		.loc 1 226 0
  94 0064 C023     		movs	r3, #192
  95 0066 0593     		str	r3, [sp, #20]
 227:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  96              		.loc 1 227 0
  97 0068 0123     		movs	r3, #1
  98 006a 0693     		str	r3, [sp, #24]
 228:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  99              		.loc 1 228 0
 100 006c 0794     		str	r4, [sp, #28]
 229:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 101              		.loc 1 229 0
 102 006e 0894     		str	r4, [sp, #32]
 230:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 103              		.loc 1 230 0
 104 0070 05A9     		add	r1, sp, #20
 105 0072 2846     		mov	r0, r5
 106 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 231:Src/main.c    **** 
 232:Src/main.c    **** }
 108              		.loc 1 232 0
 109 0078 0BB0     		add	sp, sp, #44
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 7


 112              		@ sp needed
 113 007a 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115              		.align	2
 116              	.L3:
 117 007c 00380240 		.word	1073887232
 118 0080 00080240 		.word	1073874944
 119              		.cfi_endproc
 120              	.LFE131:
 122              		.section	.text.StartDefaultTask,"ax",%progbits
 123              		.align	1
 124              		.global	StartDefaultTask
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	StartDefaultTask:
 131              	.LFB132:
 233:Src/main.c    **** 
 234:Src/main.c    **** /* USER CODE BEGIN 4 */
 235:Src/main.c    **** 
 236:Src/main.c    **** /* USER CODE END 4 */
 237:Src/main.c    **** 
 238:Src/main.c    **** /* StartDefaultTask function */
 239:Src/main.c    **** void StartDefaultTask(void const * argument)
 240:Src/main.c    **** {
 132              		.loc 1 240 0
 133              		.cfi_startproc
 134              		@ Volatile: function does not return.
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              	.LVL2:
 138 0000 08B5     		push	{r3, lr}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 3, -8
 142              		.cfi_offset 14, -4
 241:Src/main.c    ****   printf("hitting main");
 143              		.loc 1 241 0
 144 0002 0A48     		ldr	r0, .L8
 145              	.LVL3:
 146 0004 FFF7FEFF 		bl	printf
 147              	.LVL4:
 148              	.L6:
 242:Src/main.c    ****   /* USER CODE BEGIN 5 */
 243:Src/main.c    ****   /* Infinite loop */
 244:Src/main.c    ****   for(;;)
 245:Src/main.c    ****   {
 246:Src/main.c    ****     printf("inside loop");
 149              		.loc 1 246 0 discriminator 1
 150 0008 0948     		ldr	r0, .L8+4
 151 000a FFF7FEFF 		bl	printf
 152              	.LVL5:
 247:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_7);
 153              		.loc 1 247 0 discriminator 1
 154 000e 094C     		ldr	r4, .L8+8
 155 0010 8021     		movs	r1, #128
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 8


 156 0012 2046     		mov	r0, r4
 157 0014 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 158              	.LVL6:
 248:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_6);
 159              		.loc 1 248 0 discriminator 1
 160 0018 4021     		movs	r1, #64
 161 001a 2046     		mov	r0, r4
 162 001c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 163              	.LVL7:
 249:Src/main.c    ****     HAL_Delay(1000);
 164              		.loc 1 249 0 discriminator 1
 165 0020 4FF47A70 		mov	r0, #1000
 166 0024 FFF7FEFF 		bl	HAL_Delay
 167              	.LVL8:
 168 0028 EEE7     		b	.L6
 169              	.L9:
 170 002a 00BF     		.align	2
 171              	.L8:
 172 002c 00000000 		.word	.LC2
 173 0030 10000000 		.word	.LC3
 174 0034 00080240 		.word	1073874944
 175              		.cfi_endproc
 176              	.LFE132:
 178              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 179              		.align	1
 180              		.global	HAL_TIM_PeriodElapsedCallback
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	HAL_TIM_PeriodElapsedCallback:
 187              	.LFB133:
 250:Src/main.c    **** 
 251:Src/main.c    ****   }
 252:Src/main.c    ****   /* USER CODE END 5 */ 
 253:Src/main.c    **** }
 254:Src/main.c    **** 
 255:Src/main.c    **** /**
 256:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 257:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 258:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 259:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 260:Src/main.c    ****   * @param  htim : TIM handle
 261:Src/main.c    ****   * @retval None
 262:Src/main.c    ****   */
 263:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 264:Src/main.c    **** {
 188              		.loc 1 264 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              	.LVL9:
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 9


 265:Src/main.c    **** /* USER CODE BEGIN Callback 0 */
 266:Src/main.c    **** 
 267:Src/main.c    **** /* USER CODE END Callback 0 */
 268:Src/main.c    ****   if (htim->Instance == TIM1) {
 198              		.loc 1 268 0
 199 0002 0268     		ldr	r2, [r0]
 200 0004 034B     		ldr	r3, .L14
 201 0006 9A42     		cmp	r2, r3
 202 0008 00D0     		beq	.L13
 203              	.LVL10:
 204              	.L10:
 205 000a 08BD     		pop	{r3, pc}
 206              	.LVL11:
 207              	.L13:
 269:Src/main.c    ****     HAL_IncTick();
 208              		.loc 1 269 0
 209 000c FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL12:
 270:Src/main.c    ****   }
 271:Src/main.c    **** /* USER CODE BEGIN Callback 1 */
 272:Src/main.c    **** 
 273:Src/main.c    **** /* USER CODE END Callback 1 */
 274:Src/main.c    **** }
 211              		.loc 1 274 0
 212 0010 FBE7     		b	.L10
 213              	.L15:
 214 0012 00BF     		.align	2
 215              	.L14:
 216 0014 00000140 		.word	1073807360
 217              		.cfi_endproc
 218              	.LFE133:
 220              		.section	.text._Error_Handler,"ax",%progbits
 221              		.align	1
 222              		.global	_Error_Handler
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	_Error_Handler:
 229              	.LFB134:
 275:Src/main.c    **** 
 276:Src/main.c    **** /**
 277:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 278:Src/main.c    ****   * @param  None
 279:Src/main.c    ****   * @retval None
 280:Src/main.c    ****   */
 281:Src/main.c    **** void _Error_Handler(char * file, int line)
 282:Src/main.c    **** {
 230              		.loc 1 282 0
 231              		.cfi_startproc
 232              		@ Volatile: function does not return.
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL13:
 237              	.L17:
 238 0000 FEE7     		b	.L17
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 10


 239              		.cfi_endproc
 240              	.LFE134:
 242              		.section	.text.SystemClock_Config,"ax",%progbits
 243              		.align	1
 244              		.global	SystemClock_Config
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv4-sp-d16
 250              	SystemClock_Config:
 251              	.LFB130:
 156:Src/main.c    **** 
 252              		.loc 1 156 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 80
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 156:Src/main.c    **** 
 256              		.loc 1 156 0
 257 0000 00B5     		push	{lr}
 258              	.LCFI5:
 259              		.cfi_def_cfa_offset 4
 260              		.cfi_offset 14, -4
 261 0002 95B0     		sub	sp, sp, #84
 262              	.LCFI6:
 263              		.cfi_def_cfa_offset 88
 264              	.LBB6:
 163:Src/main.c    **** 
 265              		.loc 1 163 0
 266 0004 0023     		movs	r3, #0
 267 0006 0193     		str	r3, [sp, #4]
 268 0008 234A     		ldr	r2, .L24
 269 000a 116C     		ldr	r1, [r2, #64]
 270 000c 41F08051 		orr	r1, r1, #268435456
 271 0010 1164     		str	r1, [r2, #64]
 272 0012 126C     		ldr	r2, [r2, #64]
 273 0014 02F08052 		and	r2, r2, #268435456
 274 0018 0192     		str	r2, [sp, #4]
 275 001a 019A     		ldr	r2, [sp, #4]
 276              	.LBE6:
 277              	.LBB7:
 165:Src/main.c    **** 
 278              		.loc 1 165 0
 279 001c 0293     		str	r3, [sp, #8]
 280 001e 1F4A     		ldr	r2, .L24+4
 281 0020 1168     		ldr	r1, [r2]
 282 0022 41F48041 		orr	r1, r1, #16384
 283 0026 1160     		str	r1, [r2]
 284 0028 1268     		ldr	r2, [r2]
 285 002a 02F48042 		and	r2, r2, #16384
 286 002e 0292     		str	r2, [sp, #8]
 287 0030 029A     		ldr	r2, [sp, #8]
 288              	.LBE7:
 169:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 289              		.loc 1 169 0
 290 0032 0222     		movs	r2, #2
 291 0034 0892     		str	r2, [sp, #32]
 170:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 11


 292              		.loc 1 170 0
 293 0036 0122     		movs	r2, #1
 294 0038 0B92     		str	r2, [sp, #44]
 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 295              		.loc 1 171 0
 296 003a 1022     		movs	r2, #16
 297 003c 0C92     		str	r2, [sp, #48]
 172:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 298              		.loc 1 172 0
 299 003e 0E93     		str	r3, [sp, #56]
 173:Src/main.c    ****   {
 300              		.loc 1 173 0
 301 0040 08A8     		add	r0, sp, #32
 302 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 303              	.LVL14:
 304 0046 F0B9     		cbnz	r0, .L22
 180:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 305              		.loc 1 180 0
 306 0048 0F23     		movs	r3, #15
 307 004a 0393     		str	r3, [sp, #12]
 182:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 308              		.loc 1 182 0
 309 004c 0021     		movs	r1, #0
 310 004e 0491     		str	r1, [sp, #16]
 183:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 311              		.loc 1 183 0
 312 0050 0591     		str	r1, [sp, #20]
 184:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 313              		.loc 1 184 0
 314 0052 0691     		str	r1, [sp, #24]
 185:Src/main.c    **** 
 315              		.loc 1 185 0
 316 0054 0791     		str	r1, [sp, #28]
 187:Src/main.c    ****   {
 317              		.loc 1 187 0
 318 0056 03A8     		add	r0, sp, #12
 319 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 320              	.LVL15:
 321 005c B8B9     		cbnz	r0, .L23
 194:Src/main.c    **** 
 322              		.loc 1 194 0
 323 005e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 324              	.LVL16:
 325 0062 0F4B     		ldr	r3, .L24+8
 326 0064 A3FB0030 		umull	r3, r0, r3, r0
 327 0068 8009     		lsrs	r0, r0, #6
 328 006a FFF7FEFF 		bl	HAL_SYSTICK_Config
 329              	.LVL17:
 198:Src/main.c    **** 
 330              		.loc 1 198 0
 331 006e 0420     		movs	r0, #4
 332 0070 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 333              	.LVL18:
 201:Src/main.c    **** }
 334              		.loc 1 201 0
 335 0074 0022     		movs	r2, #0
 336 0076 0F21     		movs	r1, #15
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 12


 337 0078 4FF0FF30 		mov	r0, #-1
 338 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 339              	.LVL19:
 202:Src/main.c    **** 
 340              		.loc 1 202 0
 341 0080 15B0     		add	sp, sp, #84
 342              	.LCFI7:
 343              		.cfi_remember_state
 344              		.cfi_def_cfa_offset 4
 345              		@ sp needed
 346 0082 5DF804FB 		ldr	pc, [sp], #4
 347              	.L22:
 348              	.LCFI8:
 349              		.cfi_restore_state
 175:Src/main.c    ****   }
 350              		.loc 1 175 0
 351 0086 AF21     		movs	r1, #175
 352 0088 0648     		ldr	r0, .L24+12
 353 008a FFF7FEFF 		bl	_Error_Handler
 354              	.LVL20:
 355              	.L23:
 189:Src/main.c    ****   }
 356              		.loc 1 189 0
 357 008e BD21     		movs	r1, #189
 358 0090 0448     		ldr	r0, .L24+12
 359 0092 FFF7FEFF 		bl	_Error_Handler
 360              	.LVL21:
 361              	.L25:
 362 0096 00BF     		.align	2
 363              	.L24:
 364 0098 00380240 		.word	1073887232
 365 009c 00700040 		.word	1073770496
 366 00a0 D34D6210 		.word	274877907
 367 00a4 00000000 		.word	.LC4
 368              		.cfi_endproc
 369              	.LFE130:
 371              		.section	.text.main,"ax",%progbits
 372              		.align	1
 373              		.global	main
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu fpv4-sp-d16
 379              	main:
 380              	.LFB129:
  80:Src/main.c    **** 
 381              		.loc 1 80 0
 382              		.cfi_startproc
 383              		@ Volatile: function does not return.
 384              		@ args = 0, pretend = 0, frame = 24
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386 0000 00B5     		push	{lr}
 387              	.LCFI9:
 388              		.cfi_def_cfa_offset 4
 389              		.cfi_offset 14, -4
 390 0002 87B0     		sub	sp, sp, #28
 391              	.LCFI10:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 13


 392              		.cfi_def_cfa_offset 32
  89:Src/main.c    **** 
 393              		.loc 1 89 0
 394 0004 FFF7FEFF 		bl	HAL_Init
 395              	.LVL22:
  96:Src/main.c    **** 
 396              		.loc 1 96 0
 397 0008 FFF7FEFF 		bl	SystemClock_Config
 398              	.LVL23:
 103:Src/main.c    **** 
 399              		.loc 1 103 0
 400 000c FFF7FEFF 		bl	MX_GPIO_Init
 401              	.LVL24:
 123:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 402              		.loc 1 123 0
 403 0010 01AC     		add	r4, sp, #4
 404 0012 074D     		ldr	r5, .L29
 405 0014 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 406 0016 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 407 0018 2B68     		ldr	r3, [r5]
 408 001a 2360     		str	r3, [r4]
 124:Src/main.c    **** 
 409              		.loc 1 124 0
 410 001c 0021     		movs	r1, #0
 411 001e 01A8     		add	r0, sp, #4
 412 0020 FFF7FEFF 		bl	osThreadCreate
 413              	.LVL25:
 414 0024 034B     		ldr	r3, .L29+4
 415 0026 1860     		str	r0, [r3]
 136:Src/main.c    ****   
 416              		.loc 1 136 0
 417 0028 FFF7FEFF 		bl	osKernelStart
 418              	.LVL26:
 419              	.L27:
 420 002c FEE7     		b	.L27
 421              	.L30:
 422 002e 00BF     		.align	2
 423              	.L29:
 424 0030 00000000 		.word	.LANCHOR0
 425 0034 00000000 		.word	defaultTaskHandle
 426              		.cfi_endproc
 427              	.LFE129:
 429              		.comm	defaultTaskHandle,4,4
 430              		.section	.rodata
 431              		.align	2
 432              		.set	.LANCHOR0,. + 0
 433              	.LC5:
 434 0000 00000000 		.word	.LC0
 435 0004 00000000 		.word	StartDefaultTask
 436 0008 0000     		.short	0
 437 000a 0000     		.space	2
 438 000c 00000000 		.word	0
 439 0010 80000000 		.word	128
 440              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 441              		.align	2
 442              	.LC2:
 443 0000 68697474 		.ascii	"hitting main\000"
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 14


 443      696E6720 
 443      6D61696E 
 443      00
 444 000d 000000   		.space	3
 445              	.LC3:
 446 0010 696E7369 		.ascii	"inside loop\000"
 446      6465206C 
 446      6F6F7000 
 447              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 448              		.align	2
 449              	.LC4:
 450 0000 5372632F 		.ascii	"Src/main.c\000"
 450      6D61696E 
 450      2E6300
 451              		.section	.rodata.str1.4,"aMS",%progbits,1
 452              		.align	2
 453              	.LC0:
 454 0000 64656661 		.ascii	"defaultTask\000"
 454      756C7454 
 454      61736B00 
 455              		.text
 456              	.Letext0:
 457              		.file 2 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 458              		.file 3 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 459              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 460              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 461              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 462              		.file 7 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 463              		.file 8 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 464              		.file 9 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 465              		.file 10 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-u
 466              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 467              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 468              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 469              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 470              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 471              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 472              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 473              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 474              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 475              		.file 20 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-u
 476              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:18     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:117    .text.MX_GPIO_Init:000000000000007c $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:123    .text.StartDefaultTask:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:130    .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:172    .text.StartDefaultTask:000000000000002c $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:179    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:186    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:216    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:221    .text._Error_Handler:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:228    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:243    .text.SystemClock_Config:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:250    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:364    .text.SystemClock_Config:0000000000000098 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:372    .text.main:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:379    .text.main:0000000000000000 main
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:424    .text.main:0000000000000030 $d
                            *COM*:0000000000000004 defaultTaskHandle
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:431    .rodata:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:441    .rodata.StartDefaultTask.str1.4:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:448    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc2VDz5i.s:452    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
printf
HAL_GPIO_TogglePin
HAL_Delay
HAL_IncTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
osThreadCreate
osKernelStart
