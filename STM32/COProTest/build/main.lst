ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB132:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 2


  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f4xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** #include "teamThreads.h"
  53:Src/main.c    **** /* USER CODE BEGIN Includes */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  58:Src/main.c    **** 
  59:Src/main.c    **** 
  60:Src/main.c    **** TIM_HandleTypeDef htim2;
  61:Src/main.c    **** 
  62:Src/main.c    **** osThreadId defaultTaskHandle;
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN PV */
  65:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PV */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** void SystemClock_Config(void);
  71:Src/main.c    **** static void MX_GPIO_Init(void);
  72:Src/main.c    **** 
  73:Src/main.c    **** static void MX_TIM2_Init(void);
  74:Src/main.c    **** void StartDefaultTask(void const * argument);
  75:Src/main.c    ****                                     
  76:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  77:Src/main.c    ****                                 
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE BEGIN PFP */
  80:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE END PFP */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE BEGIN 0 */
  85:Src/main.c    **** 
  86:Src/main.c    **** /* USER CODE END 0 */
  87:Src/main.c    **** 
  88:Src/main.c    **** int main(void)
  89:Src/main.c    **** {
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END 1 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Src/main.c    ****   HAL_Init();
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE BEGIN Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END Init */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Configure the system clock */
 105:Src/main.c    ****   SystemClock_Config();
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END SysInit */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* Initialize all configured peripherals */
 112:Src/main.c    ****   MX_GPIO_Init();
 113:Src/main.c    **** 
 114:Src/main.c    ****   MX_TIM2_Init();
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN 2 */
 117:Src/main.c    ****   xTaskHandle xHeartbeatStatus;
 118:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 119:Src/main.c    ****   /* USER CODE END 2 */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 122:Src/main.c    ****   /* add mutexes, ... */
 123:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 126:Src/main.c    ****   /* add semaphores, ... */
 127:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 130:Src/main.c    ****   /* start timers, add new ones, ... */
 131:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* Create the thread(s) */
 134:Src/main.c    ****   /* definition and creation of defaultTask */
 135:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 136:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 139:Src/main.c    ****    xTaskCreate( vHeartbeat, "Heartbeat", configMINIMAL_STACK_SIZE, NULL, 1, &xHeartbeatStatus);
 140:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 143:Src/main.c    ****   /* add queues, ... */
 144:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 145:Src/main.c    ****  
 146:Src/main.c    **** 
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 4


 147:Src/main.c    ****   /* Start scheduler */
 148:Src/main.c    ****   osKernelStart();
 149:Src/main.c    ****   
 150:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 151:Src/main.c    **** 
 152:Src/main.c    ****   /* Infinite loop */
 153:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 154:Src/main.c    ****   while (1)
 155:Src/main.c    ****   {
 156:Src/main.c    ****   /* USER CODE END WHILE */
 157:Src/main.c    **** 
 158:Src/main.c    ****   /* USER CODE BEGIN 3 */
 159:Src/main.c    **** 
 160:Src/main.c    ****   }
 161:Src/main.c    ****   /* USER CODE END 3 */
 162:Src/main.c    **** 
 163:Src/main.c    **** }
 164:Src/main.c    **** 
 165:Src/main.c    **** /** System Clock Configuration
 166:Src/main.c    **** */
 167:Src/main.c    **** void SystemClock_Config(void)
 168:Src/main.c    **** {
 169:Src/main.c    **** 
 170:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 171:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 172:Src/main.c    **** 
 173:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 174:Src/main.c    ****     */
 175:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 176:Src/main.c    **** 
 177:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 178:Src/main.c    **** 
 179:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 180:Src/main.c    ****     */
 181:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 182:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 183:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 185:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 186:Src/main.c    ****   {
 187:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 188:Src/main.c    ****   }
 189:Src/main.c    **** 
 190:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 191:Src/main.c    ****     */
 192:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 193:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 194:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 195:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 196:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 197:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 198:Src/main.c    **** 
 199:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 200:Src/main.c    ****   {
 201:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 202:Src/main.c    ****   }
 203:Src/main.c    **** 
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 5


 204:Src/main.c    ****     /**Configure the Systick interrupt time 
 205:Src/main.c    ****     */
 206:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 207:Src/main.c    **** 
 208:Src/main.c    ****     /**Configure the Systick 
 209:Src/main.c    ****     */
 210:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 211:Src/main.c    **** 
 212:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 213:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 214:Src/main.c    **** }
 215:Src/main.c    **** 
 216:Src/main.c    **** 
 217:Src/main.c    **** /* TIM2 init function */
 218:Src/main.c    **** static void MX_TIM2_Init(void)
 219:Src/main.c    **** {
 220:Src/main.c    **** 
 221:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 222:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 223:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 224:Src/main.c    **** 
 225:Src/main.c    ****   htim2.Instance = TIM2;
 226:Src/main.c    ****   htim2.Init.Prescaler = 1600;
 227:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 228:Src/main.c    ****   htim2.Init.Period = 100;
 229:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 230:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 231:Src/main.c    ****   {
 232:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 233:Src/main.c    ****   }
 234:Src/main.c    **** 
 235:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 236:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 237:Src/main.c    ****   {
 238:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 239:Src/main.c    ****   }
 240:Src/main.c    **** 
 241:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 242:Src/main.c    ****   {
 243:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 244:Src/main.c    ****   }
 245:Src/main.c    **** 
 246:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 247:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 248:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 249:Src/main.c    ****   {
 250:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 251:Src/main.c    ****   }
 252:Src/main.c    **** 
 253:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 254:Src/main.c    ****   sConfigOC.Pulse = 10;
 255:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 256:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 257:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 258:Src/main.c    ****   {
 259:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 260:Src/main.c    ****   }
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 6


 261:Src/main.c    **** 
 262:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 263:Src/main.c    **** 
 264:Src/main.c    **** }
 265:Src/main.c    **** 
 266:Src/main.c    **** /** Configure pins as 
 267:Src/main.c    ****         * Analog 
 268:Src/main.c    ****         * Input 
 269:Src/main.c    ****         * Output
 270:Src/main.c    ****         * EVENT_OUT
 271:Src/main.c    ****         * EXTI
 272:Src/main.c    **** */
 273:Src/main.c    **** static void MX_GPIO_Init(void)
 274:Src/main.c    **** {
  27              		.loc 1 274 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
  40              	.LBB2:
 275:Src/main.c    **** 
 276:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* GPIO Ports Clock Enable */
 279:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  41              		.loc 1 279 0
  42 0004 0024     		movs	r4, #0
  43 0006 0094     		str	r4, [sp]
  44 0008 174B     		ldr	r3, .L3
  45 000a 1A6B     		ldr	r2, [r3, #48]
  46 000c 42F00102 		orr	r2, r2, #1
  47 0010 1A63     		str	r2, [r3, #48]
  48 0012 1A6B     		ldr	r2, [r3, #48]
  49 0014 02F00102 		and	r2, r2, #1
  50 0018 0092     		str	r2, [sp]
  51 001a 009A     		ldr	r2, [sp]
  52              	.LBE2:
  53              	.LBB3:
 280:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 280 0
  55 001c 0194     		str	r4, [sp, #4]
  56 001e 1A6B     		ldr	r2, [r3, #48]
  57 0020 42F00402 		orr	r2, r2, #4
  58 0024 1A63     		str	r2, [r3, #48]
  59 0026 1A6B     		ldr	r2, [r3, #48]
  60 0028 02F00402 		and	r2, r2, #4
  61 002c 0192     		str	r2, [sp, #4]
  62 002e 019A     		ldr	r2, [sp, #4]
  63              	.LBE3:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 7


  64              	.LBB4:
 281:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 281 0
  66 0030 0294     		str	r4, [sp, #8]
  67 0032 1A6B     		ldr	r2, [r3, #48]
  68 0034 42F00202 		orr	r2, r2, #2
  69 0038 1A63     		str	r2, [r3, #48]
  70 003a 1B6B     		ldr	r3, [r3, #48]
  71 003c 03F00203 		and	r3, r3, #2
  72 0040 0293     		str	r3, [sp, #8]
  73 0042 029B     		ldr	r3, [sp, #8]
  74              	.LBE4:
 282:Src/main.c    **** 
 283:Src/main.c    ****   /*Configure GPIO pin Output Level */
 284:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
  75              		.loc 1 284 0
  76 0044 094D     		ldr	r5, .L3+4
  77 0046 2246     		mov	r2, r4
  78 0048 C021     		movs	r1, #192
  79 004a 2846     		mov	r0, r5
  80 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
  81              	.LVL0:
 285:Src/main.c    **** 
 286:Src/main.c    ****   /*Configure GPIO pins : PC6 PC7 */
 287:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
  82              		.loc 1 287 0
  83 0050 C023     		movs	r3, #192
  84 0052 0393     		str	r3, [sp, #12]
 288:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  85              		.loc 1 288 0
  86 0054 0123     		movs	r3, #1
  87 0056 0493     		str	r3, [sp, #16]
 289:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  88              		.loc 1 289 0
  89 0058 0594     		str	r4, [sp, #20]
 290:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  90              		.loc 1 290 0
  91 005a 0694     		str	r4, [sp, #24]
 291:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  92              		.loc 1 291 0
  93 005c 03A9     		add	r1, sp, #12
  94 005e 2846     		mov	r0, r5
  95 0060 FFF7FEFF 		bl	HAL_GPIO_Init
  96              	.LVL1:
 292:Src/main.c    **** 
 293:Src/main.c    **** }
  97              		.loc 1 293 0
  98 0064 09B0     		add	sp, sp, #36
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 12
 101              		@ sp needed
 102 0066 30BD     		pop	{r4, r5, pc}
 103              	.L4:
 104              		.align	2
 105              	.L3:
 106 0068 00380240 		.word	1073887232
 107 006c 00080240 		.word	1073874944
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 8


 108              		.cfi_endproc
 109              	.LFE132:
 111              		.section	.text.StartDefaultTask,"ax",%progbits
 112              		.align	1
 113              		.global	StartDefaultTask
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	StartDefaultTask:
 120              	.LFB133:
 294:Src/main.c    **** 
 295:Src/main.c    **** /* USER CODE BEGIN 4 */
 296:Src/main.c    **** 
 297:Src/main.c    **** /* USER CODE END 4 */
 298:Src/main.c    **** 
 299:Src/main.c    **** /* StartDefaultTask function */
 300:Src/main.c    **** void StartDefaultTask(void const * argument)
 301:Src/main.c    **** {
 121              		.loc 1 301 0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL2:
 127 0000 08B5     		push	{r3, lr}
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
 132              	.LVL3:
 133              	.L6:
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* USER CODE BEGIN 5 */
 304:Src/main.c    ****   /* Infinite loop */
 305:Src/main.c    ****   for(;;)
 306:Src/main.c    ****   {
 307:Src/main.c    **** 
 308:Src/main.c    ****     osDelay(1);
 134              		.loc 1 308 0 discriminator 1
 135 0002 0120     		movs	r0, #1
 136 0004 FFF7FEFF 		bl	osDelay
 137              	.LVL4:
 138 0008 FBE7     		b	.L6
 139              		.cfi_endproc
 140              	.LFE133:
 142              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 143              		.align	1
 144              		.global	HAL_TIM_PeriodElapsedCallback
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	HAL_TIM_PeriodElapsedCallback:
 151              	.LFB134:
 309:Src/main.c    ****   }
 310:Src/main.c    ****   /* USER CODE END 5 */ 
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 9


 311:Src/main.c    **** }
 312:Src/main.c    **** 
 313:Src/main.c    **** /**
 314:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 315:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 316:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 317:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 318:Src/main.c    ****   * @param  htim : TIM handle
 319:Src/main.c    ****   * @retval None
 320:Src/main.c    ****   */
 321:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 322:Src/main.c    **** {
 152              		.loc 1 322 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              	.LVL5:
 157 0000 08B5     		push	{r3, lr}
 158              	.LCFI4:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 3, -8
 161              		.cfi_offset 14, -4
 323:Src/main.c    **** /* USER CODE BEGIN Callback 0 */
 324:Src/main.c    **** 
 325:Src/main.c    **** /* USER CODE END Callback 0 */
 326:Src/main.c    ****   if (htim->Instance == TIM1) {
 162              		.loc 1 326 0
 163 0002 0268     		ldr	r2, [r0]
 164 0004 034B     		ldr	r3, .L12
 165 0006 9A42     		cmp	r2, r3
 166 0008 00D0     		beq	.L11
 167              	.LVL6:
 168              	.L8:
 169 000a 08BD     		pop	{r3, pc}
 170              	.LVL7:
 171              	.L11:
 327:Src/main.c    ****     HAL_IncTick();
 172              		.loc 1 327 0
 173 000c FFF7FEFF 		bl	HAL_IncTick
 174              	.LVL8:
 328:Src/main.c    ****   }
 329:Src/main.c    **** /* USER CODE BEGIN Callback 1 */
 330:Src/main.c    **** 
 331:Src/main.c    **** /* USER CODE END Callback 1 */
 332:Src/main.c    **** }
 175              		.loc 1 332 0
 176 0010 FBE7     		b	.L8
 177              	.L13:
 178 0012 00BF     		.align	2
 179              	.L12:
 180 0014 00000140 		.word	1073807360
 181              		.cfi_endproc
 182              	.LFE134:
 184              		.section	.text._Error_Handler,"ax",%progbits
 185              		.align	1
 186              		.global	_Error_Handler
 187              		.syntax unified
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 10


 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	_Error_Handler:
 193              	.LFB135:
 333:Src/main.c    **** 
 334:Src/main.c    **** /**
 335:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 336:Src/main.c    ****   * @param  None
 337:Src/main.c    ****   * @retval None
 338:Src/main.c    ****   */
 339:Src/main.c    **** void _Error_Handler(char * file, int line)
 340:Src/main.c    **** {
 194              		.loc 1 340 0
 195              		.cfi_startproc
 196              		@ Volatile: function does not return.
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              	.LVL9:
 201              	.L15:
 202 0000 FEE7     		b	.L15
 203              		.cfi_endproc
 204              	.LFE135:
 206              		.section	.text.MX_TIM2_Init,"ax",%progbits
 207              		.align	1
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv4-sp-d16
 213              	MX_TIM2_Init:
 214              	.LFB131:
 219:Src/main.c    **** 
 215              		.loc 1 219 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 56
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219:Src/main.c    **** 
 219              		.loc 1 219 0
 220 0000 00B5     		push	{lr}
 221              	.LCFI5:
 222              		.cfi_def_cfa_offset 4
 223              		.cfi_offset 14, -4
 224 0002 8FB0     		sub	sp, sp, #60
 225              	.LCFI6:
 226              		.cfi_def_cfa_offset 64
 225:Src/main.c    ****   htim2.Init.Prescaler = 1600;
 227              		.loc 1 225 0
 228 0004 2548     		ldr	r0, .L28
 229 0006 4FF08043 		mov	r3, #1073741824
 230 000a 0360     		str	r3, [r0]
 226:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 231              		.loc 1 226 0
 232 000c 4FF4C863 		mov	r3, #1600
 233 0010 4360     		str	r3, [r0, #4]
 227:Src/main.c    ****   htim2.Init.Period = 100;
 234              		.loc 1 227 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 11


 235 0012 0023     		movs	r3, #0
 236 0014 8360     		str	r3, [r0, #8]
 228:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 237              		.loc 1 228 0
 238 0016 6422     		movs	r2, #100
 239 0018 C260     		str	r2, [r0, #12]
 229:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 240              		.loc 1 229 0
 241 001a 0361     		str	r3, [r0, #16]
 230:Src/main.c    ****   {
 242              		.loc 1 230 0
 243 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 244              	.LVL10:
 245 0020 30BB     		cbnz	r0, .L23
 235:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 246              		.loc 1 235 0
 247 0022 0EA9     		add	r1, sp, #56
 248 0024 4FF48053 		mov	r3, #4096
 249 0028 41F8103D 		str	r3, [r1, #-16]!
 236:Src/main.c    ****   {
 250              		.loc 1 236 0
 251 002c 1B48     		ldr	r0, .L28
 252 002e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 253              	.LVL11:
 254 0032 08BB     		cbnz	r0, .L24
 241:Src/main.c    ****   {
 255              		.loc 1 241 0
 256 0034 1948     		ldr	r0, .L28
 257 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 258              	.LVL12:
 259 003a 08BB     		cbnz	r0, .L25
 246:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 260              		.loc 1 246 0
 261 003c 0023     		movs	r3, #0
 262 003e 0893     		str	r3, [sp, #32]
 247:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 263              		.loc 1 247 0
 264 0040 0993     		str	r3, [sp, #36]
 248:Src/main.c    ****   {
 265              		.loc 1 248 0
 266 0042 08A9     		add	r1, sp, #32
 267 0044 1548     		ldr	r0, .L28
 268 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 269              	.LVL13:
 270 004a E8B9     		cbnz	r0, .L26
 253:Src/main.c    ****   sConfigOC.Pulse = 10;
 271              		.loc 1 253 0
 272 004c 6023     		movs	r3, #96
 273 004e 0193     		str	r3, [sp, #4]
 254:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 274              		.loc 1 254 0
 275 0050 0A23     		movs	r3, #10
 276 0052 0293     		str	r3, [sp, #8]
 255:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 277              		.loc 1 255 0
 278 0054 0022     		movs	r2, #0
 279 0056 0392     		str	r2, [sp, #12]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 12


 256:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 280              		.loc 1 256 0
 281 0058 0592     		str	r2, [sp, #20]
 257:Src/main.c    ****   {
 282              		.loc 1 257 0
 283 005a 01A9     		add	r1, sp, #4
 284 005c 0F48     		ldr	r0, .L28
 285 005e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 286              	.LVL14:
 287 0062 A8B9     		cbnz	r0, .L27
 262:Src/main.c    **** 
 288              		.loc 1 262 0
 289 0064 0D48     		ldr	r0, .L28
 290 0066 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 291              	.LVL15:
 264:Src/main.c    **** 
 292              		.loc 1 264 0
 293 006a 0FB0     		add	sp, sp, #60
 294              	.LCFI7:
 295              		.cfi_remember_state
 296              		.cfi_def_cfa_offset 4
 297              		@ sp needed
 298 006c 5DF804FB 		ldr	pc, [sp], #4
 299              	.L23:
 300              	.LCFI8:
 301              		.cfi_restore_state
 232:Src/main.c    ****   }
 302              		.loc 1 232 0
 303 0070 E821     		movs	r1, #232
 304 0072 0B48     		ldr	r0, .L28+4
 305 0074 FFF7FEFF 		bl	_Error_Handler
 306              	.LVL16:
 307              	.L24:
 238:Src/main.c    ****   }
 308              		.loc 1 238 0
 309 0078 EE21     		movs	r1, #238
 310 007a 0948     		ldr	r0, .L28+4
 311 007c FFF7FEFF 		bl	_Error_Handler
 312              	.LVL17:
 313              	.L25:
 243:Src/main.c    ****   }
 314              		.loc 1 243 0
 315 0080 F321     		movs	r1, #243
 316 0082 0748     		ldr	r0, .L28+4
 317 0084 FFF7FEFF 		bl	_Error_Handler
 318              	.LVL18:
 319              	.L26:
 250:Src/main.c    ****   }
 320              		.loc 1 250 0
 321 0088 FA21     		movs	r1, #250
 322 008a 0548     		ldr	r0, .L28+4
 323 008c FFF7FEFF 		bl	_Error_Handler
 324              	.LVL19:
 325              	.L27:
 259:Src/main.c    ****   }
 326              		.loc 1 259 0
 327 0090 40F20311 		movw	r1, #259
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 13


 328 0094 0248     		ldr	r0, .L28+4
 329 0096 FFF7FEFF 		bl	_Error_Handler
 330              	.LVL20:
 331              	.L29:
 332 009a 00BF     		.align	2
 333              	.L28:
 334 009c 00000000 		.word	htim2
 335 00a0 00000000 		.word	.LC2
 336              		.cfi_endproc
 337              	.LFE131:
 339              		.section	.text.SystemClock_Config,"ax",%progbits
 340              		.align	1
 341              		.global	SystemClock_Config
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	SystemClock_Config:
 348              	.LFB130:
 168:Src/main.c    **** 
 349              		.loc 1 168 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 80
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 00B5     		push	{lr}
 354              	.LCFI9:
 355              		.cfi_def_cfa_offset 4
 356              		.cfi_offset 14, -4
 357 0002 95B0     		sub	sp, sp, #84
 358              	.LCFI10:
 359              		.cfi_def_cfa_offset 88
 360              	.LBB5:
 175:Src/main.c    **** 
 361              		.loc 1 175 0
 362 0004 0023     		movs	r3, #0
 363 0006 0193     		str	r3, [sp, #4]
 364 0008 234A     		ldr	r2, .L36
 365 000a 116C     		ldr	r1, [r2, #64]
 366 000c 41F08051 		orr	r1, r1, #268435456
 367 0010 1164     		str	r1, [r2, #64]
 368 0012 126C     		ldr	r2, [r2, #64]
 369 0014 02F08052 		and	r2, r2, #268435456
 370 0018 0192     		str	r2, [sp, #4]
 371 001a 019A     		ldr	r2, [sp, #4]
 372              	.LBE5:
 373              	.LBB6:
 177:Src/main.c    **** 
 374              		.loc 1 177 0
 375 001c 0293     		str	r3, [sp, #8]
 376 001e 1F4A     		ldr	r2, .L36+4
 377 0020 1168     		ldr	r1, [r2]
 378 0022 41F48041 		orr	r1, r1, #16384
 379 0026 1160     		str	r1, [r2]
 380 0028 1268     		ldr	r2, [r2]
 381 002a 02F48042 		and	r2, r2, #16384
 382 002e 0292     		str	r2, [sp, #8]
 383 0030 029A     		ldr	r2, [sp, #8]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 14


 384              	.LBE6:
 181:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 385              		.loc 1 181 0
 386 0032 0222     		movs	r2, #2
 387 0034 0892     		str	r2, [sp, #32]
 182:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 388              		.loc 1 182 0
 389 0036 0122     		movs	r2, #1
 390 0038 0B92     		str	r2, [sp, #44]
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 391              		.loc 1 183 0
 392 003a 1022     		movs	r2, #16
 393 003c 0C92     		str	r2, [sp, #48]
 184:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 394              		.loc 1 184 0
 395 003e 0E93     		str	r3, [sp, #56]
 185:Src/main.c    ****   {
 396              		.loc 1 185 0
 397 0040 08A8     		add	r0, sp, #32
 398 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 399              	.LVL21:
 400 0046 F0B9     		cbnz	r0, .L34
 192:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 401              		.loc 1 192 0
 402 0048 0F23     		movs	r3, #15
 403 004a 0393     		str	r3, [sp, #12]
 194:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 404              		.loc 1 194 0
 405 004c 0021     		movs	r1, #0
 406 004e 0491     		str	r1, [sp, #16]
 195:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 407              		.loc 1 195 0
 408 0050 0591     		str	r1, [sp, #20]
 196:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 409              		.loc 1 196 0
 410 0052 0691     		str	r1, [sp, #24]
 197:Src/main.c    **** 
 411              		.loc 1 197 0
 412 0054 0791     		str	r1, [sp, #28]
 199:Src/main.c    ****   {
 413              		.loc 1 199 0
 414 0056 03A8     		add	r0, sp, #12
 415 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 416              	.LVL22:
 417 005c B8B9     		cbnz	r0, .L35
 206:Src/main.c    **** 
 418              		.loc 1 206 0
 419 005e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 420              	.LVL23:
 421 0062 0F4B     		ldr	r3, .L36+8
 422 0064 A3FB0030 		umull	r3, r0, r3, r0
 423 0068 8009     		lsrs	r0, r0, #6
 424 006a FFF7FEFF 		bl	HAL_SYSTICK_Config
 425              	.LVL24:
 210:Src/main.c    **** 
 426              		.loc 1 210 0
 427 006e 0420     		movs	r0, #4
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 15


 428 0070 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 429              	.LVL25:
 213:Src/main.c    **** }
 430              		.loc 1 213 0
 431 0074 0022     		movs	r2, #0
 432 0076 0F21     		movs	r1, #15
 433 0078 4FF0FF30 		mov	r0, #-1
 434 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 435              	.LVL26:
 214:Src/main.c    **** 
 436              		.loc 1 214 0
 437 0080 15B0     		add	sp, sp, #84
 438              	.LCFI11:
 439              		.cfi_remember_state
 440              		.cfi_def_cfa_offset 4
 441              		@ sp needed
 442 0082 5DF804FB 		ldr	pc, [sp], #4
 443              	.L34:
 444              	.LCFI12:
 445              		.cfi_restore_state
 187:Src/main.c    ****   }
 446              		.loc 1 187 0
 447 0086 BB21     		movs	r1, #187
 448 0088 0648     		ldr	r0, .L36+12
 449 008a FFF7FEFF 		bl	_Error_Handler
 450              	.LVL27:
 451              	.L35:
 201:Src/main.c    ****   }
 452              		.loc 1 201 0
 453 008e C921     		movs	r1, #201
 454 0090 0448     		ldr	r0, .L36+12
 455 0092 FFF7FEFF 		bl	_Error_Handler
 456              	.LVL28:
 457              	.L37:
 458 0096 00BF     		.align	2
 459              	.L36:
 460 0098 00380240 		.word	1073887232
 461 009c 00700040 		.word	1073770496
 462 00a0 D34D6210 		.word	274877907
 463 00a4 00000000 		.word	.LC2
 464              		.cfi_endproc
 465              	.LFE130:
 467              		.section	.text.main,"ax",%progbits
 468              		.align	1
 469              		.global	main
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 473              		.fpu fpv4-sp-d16
 475              	main:
 476              	.LFB129:
  89:Src/main.c    **** 
 477              		.loc 1 89 0
 478              		.cfi_startproc
 479              		@ Volatile: function does not return.
 480              		@ args = 0, pretend = 0, frame = 24
 481              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 16


 482 0000 00B5     		push	{lr}
 483              	.LCFI13:
 484              		.cfi_def_cfa_offset 4
 485              		.cfi_offset 14, -4
 486 0002 89B0     		sub	sp, sp, #36
 487              	.LCFI14:
 488              		.cfi_def_cfa_offset 40
  98:Src/main.c    **** 
 489              		.loc 1 98 0
 490 0004 FFF7FEFF 		bl	HAL_Init
 491              	.LVL29:
 105:Src/main.c    **** 
 492              		.loc 1 105 0
 493 0008 FFF7FEFF 		bl	SystemClock_Config
 494              	.LVL30:
 112:Src/main.c    **** 
 495              		.loc 1 112 0
 496 000c FFF7FEFF 		bl	MX_GPIO_Init
 497              	.LVL31:
 114:Src/main.c    **** 
 498              		.loc 1 114 0
 499 0010 FFF7FEFF 		bl	MX_TIM2_Init
 500              	.LVL32:
 118:Src/main.c    ****   /* USER CODE END 2 */
 501              		.loc 1 118 0
 502 0014 0021     		movs	r1, #0
 503 0016 0E48     		ldr	r0, .L41
 504 0018 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 505              	.LVL33:
 135:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 506              		.loc 1 135 0
 507 001c 02AC     		add	r4, sp, #8
 508 001e 0D4D     		ldr	r5, .L41+4
 509 0020 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 510 0022 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 511 0024 2B68     		ldr	r3, [r5]
 512 0026 2360     		str	r3, [r4]
 136:Src/main.c    **** 
 513              		.loc 1 136 0
 514 0028 0021     		movs	r1, #0
 515 002a 02A8     		add	r0, sp, #8
 516 002c FFF7FEFF 		bl	osThreadCreate
 517              	.LVL34:
 518 0030 094B     		ldr	r3, .L41+8
 519 0032 1860     		str	r0, [r3]
 139:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 520              		.loc 1 139 0
 521 0034 07AB     		add	r3, sp, #28
 522 0036 0193     		str	r3, [sp, #4]
 523 0038 0123     		movs	r3, #1
 524 003a 0093     		str	r3, [sp]
 525 003c 0023     		movs	r3, #0
 526 003e 8022     		movs	r2, #128
 527 0040 0649     		ldr	r1, .L41+12
 528 0042 0748     		ldr	r0, .L41+16
 529 0044 FFF7FEFF 		bl	xTaskCreate
 530              	.LVL35:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 17


 148:Src/main.c    ****   
 531              		.loc 1 148 0
 532 0048 FFF7FEFF 		bl	osKernelStart
 533              	.LVL36:
 534              	.L39:
 535 004c FEE7     		b	.L39
 536              	.L42:
 537 004e 00BF     		.align	2
 538              	.L41:
 539 0050 00000000 		.word	htim2
 540 0054 00000000 		.word	.LANCHOR0
 541 0058 00000000 		.word	defaultTaskHandle
 542 005c 00000000 		.word	.LC4
 543 0060 00000000 		.word	vHeartbeat
 544              		.cfi_endproc
 545              	.LFE129:
 547              		.comm	defaultTaskHandle,4,4
 548              		.comm	htim2,60,4
 549              		.section	.rodata
 550              		.align	2
 551              		.set	.LANCHOR0,. + 0
 552              	.LC3:
 553 0000 00000000 		.word	.LC0
 554 0004 00000000 		.word	StartDefaultTask
 555 0008 0000     		.short	0
 556 000a 0000     		.space	2
 557 000c 00000000 		.word	0
 558 0010 80000000 		.word	128
 559              		.section	.rodata.MX_TIM2_Init.str1.4,"aMS",%progbits,1
 560              		.align	2
 561              	.LC2:
 562 0000 5372632F 		.ascii	"Src/main.c\000"
 562      6D61696E 
 562      2E6300
 563              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 564              		.align	2
 565              	.LC4:
 566 0000 48656172 		.ascii	"Heartbeat\000"
 566      74626561 
 566      7400
 567              		.section	.rodata.str1.4,"aMS",%progbits,1
 568              		.align	2
 569              	.LC0:
 570 0000 64656661 		.ascii	"defaultTask\000"
 570      756C7454 
 570      61736B00 
 571              		.text
 572              	.Letext0:
 573              		.file 2 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 574              		.file 3 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 575              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 576              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 577              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 578              		.file 7 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 579              		.file 8 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 580              		.file 9 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 581              		.file 10 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-u
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 18


 582              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 583              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 584              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 585              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 586              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 587              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 588              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 589              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 590              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 591              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 592              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:18     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:106    .text.MX_GPIO_Init:0000000000000068 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:112    .text.StartDefaultTask:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:119    .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:143    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:150    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:180    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:185    .text._Error_Handler:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:192    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:207    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:213    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:334    .text.MX_TIM2_Init:000000000000009c $d
                            *COM*:000000000000003c htim2
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:340    .text.SystemClock_Config:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:347    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:460    .text.SystemClock_Config:0000000000000098 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:468    .text.main:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:475    .text.main:0000000000000000 main
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:539    .text.main:0000000000000050 $d
                            *COM*:0000000000000004 defaultTaskHandle
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:550    .rodata:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:560    .rodata.MX_TIM2_Init.str1.4:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:564    .rodata.main.str1.4:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1a6PSv.s:568    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
HAL_IncTick
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_TIM_PWM_Start
osThreadCreate
xTaskCreate
osKernelStart
vHeartbeat
