ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB140:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 2


  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f4xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** #include "usb_device.h"
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN Includes */
  55:Src/main.c    **** #include "riptideMain.h"
  56:Src/main.c    **** /* USER CODE END Includes */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** CAN_HandleTypeDef hcan1;
  60:Src/main.c    **** 
  61:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  62:Src/main.c    **** I2C_HandleTypeDef hi2c3;
  63:Src/main.c    **** 
  64:Src/main.c    **** SD_HandleTypeDef hsd;
  65:Src/main.c    **** 
  66:Src/main.c    **** TIM_HandleTypeDef htim2;
  67:Src/main.c    **** TIM_HandleTypeDef htim3;
  68:Src/main.c    **** TIM_HandleTypeDef htim5;
  69:Src/main.c    **** TIM_HandleTypeDef htim13;
  70:Src/main.c    **** TIM_HandleTypeDef htim14;
  71:Src/main.c    **** 
  72:Src/main.c    **** osThreadId defaultTaskHandle;
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE BEGIN PV */
  75:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PV */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  80:Src/main.c    **** void SystemClock_Config(void);
  81:Src/main.c    **** static void MX_GPIO_Init(void);
  82:Src/main.c    **** static void MX_CAN1_Init(void);
  83:Src/main.c    **** static void MX_I2C1_Init(void);
  84:Src/main.c    **** static void MX_SDIO_SD_Init(void);
  85:Src/main.c    **** static void MX_TIM2_Init(void);
  86:Src/main.c    **** static void MX_TIM3_Init(void);
  87:Src/main.c    **** static void MX_TIM5_Init(void);
  88:Src/main.c    **** static void MX_TIM13_Init(void);
  89:Src/main.c    **** static void MX_TIM14_Init(void);
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 3


  90:Src/main.c    **** static void MX_I2C3_Init(void);
  91:Src/main.c    **** void StartDefaultTask(void const * argument);
  92:Src/main.c    **** 
  93:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  94:Src/main.c    ****                                 
  95:Src/main.c    ****                                 
  96:Src/main.c    ****                                 
  97:Src/main.c    ****                                 
  98:Src/main.c    ****                                 
  99:Src/main.c    **** 
 100:Src/main.c    **** /* USER CODE BEGIN PFP */
 101:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 102:Src/main.c    **** 
 103:Src/main.c    **** /* USER CODE END PFP */
 104:Src/main.c    **** 
 105:Src/main.c    **** /* USER CODE BEGIN 0 */
 106:Src/main.c    **** 
 107:Src/main.c    **** /* USER CODE END 0 */
 108:Src/main.c    **** 
 109:Src/main.c    **** int main(void)
 110:Src/main.c    **** {
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE BEGIN 1 */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END 1 */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 119:Src/main.c    ****   HAL_Init();
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE BEGIN Init */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* USER CODE END Init */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* Configure the system clock */
 126:Src/main.c    ****   SystemClock_Config();
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE END SysInit */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* Initialize all configured peripherals */
 133:Src/main.c    ****   MX_GPIO_Init();
 134:Src/main.c    ****   MX_CAN1_Init();
 135:Src/main.c    ****   MX_I2C1_Init();
 136:Src/main.c    ****   MX_SDIO_SD_Init();
 137:Src/main.c    ****   MX_TIM2_Init();
 138:Src/main.c    ****   MX_TIM3_Init();
 139:Src/main.c    ****   MX_TIM5_Init();
 140:Src/main.c    ****   MX_TIM13_Init();
 141:Src/main.c    ****   MX_TIM14_Init();
 142:Src/main.c    ****   MX_I2C3_Init();
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* USER CODE BEGIN 2 */
 145:Src/main.c    ****     riptideMain();
 146:Src/main.c    ****   /* USER CODE END 2 */
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 149:Src/main.c    ****   /* add mutexes, ... */
 150:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 151:Src/main.c    **** 
 152:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 153:Src/main.c    ****   /* add semaphores, ... */
 154:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 155:Src/main.c    **** 
 156:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 157:Src/main.c    ****   /* start timers, add new ones, ... */
 158:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 159:Src/main.c    **** 
 160:Src/main.c    ****   /* Create the thread(s) */
 161:Src/main.c    ****   /* definition and creation of defaultTask */
 162:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 163:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 164:Src/main.c    **** 
 165:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 166:Src/main.c    ****   /* add threads, ... */
 167:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 168:Src/main.c    **** 
 169:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 170:Src/main.c    ****   /* add queues, ... */
 171:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 172:Src/main.c    ****  
 173:Src/main.c    **** 
 174:Src/main.c    ****   /* Start scheduler */
 175:Src/main.c    ****   osKernelStart();
 176:Src/main.c    ****   
 177:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 178:Src/main.c    **** 
 179:Src/main.c    ****   /* Infinite loop */
 180:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 181:Src/main.c    ****   while (1)
 182:Src/main.c    ****   {
 183:Src/main.c    ****   /* USER CODE END WHILE */
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* USER CODE BEGIN 3 */
 186:Src/main.c    **** 
 187:Src/main.c    ****   }
 188:Src/main.c    ****   /* USER CODE END 3 */
 189:Src/main.c    **** 
 190:Src/main.c    **** }
 191:Src/main.c    **** 
 192:Src/main.c    **** /** System Clock Configuration
 193:Src/main.c    **** */
 194:Src/main.c    **** void SystemClock_Config(void)
 195:Src/main.c    **** {
 196:Src/main.c    **** 
 197:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 198:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 199:Src/main.c    **** 
 200:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 201:Src/main.c    ****     */
 202:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 203:Src/main.c    **** 
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 5


 204:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 205:Src/main.c    **** 
 206:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 207:Src/main.c    ****     */
 208:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 209:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 211:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 216:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 217:Src/main.c    ****   {
 218:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 219:Src/main.c    ****   }
 220:Src/main.c    **** 
 221:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 222:Src/main.c    ****     */
 223:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 224:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 225:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 226:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 227:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 228:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 229:Src/main.c    **** 
 230:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 231:Src/main.c    ****   {
 232:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 233:Src/main.c    ****   }
 234:Src/main.c    **** 
 235:Src/main.c    ****     /**Configure the Systick interrupt time 
 236:Src/main.c    ****     */
 237:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 238:Src/main.c    **** 
 239:Src/main.c    ****     /**Configure the Systick 
 240:Src/main.c    ****     */
 241:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 242:Src/main.c    **** 
 243:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 244:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 245:Src/main.c    **** }
 246:Src/main.c    **** 
 247:Src/main.c    **** /* CAN1 init function */
 248:Src/main.c    **** static void MX_CAN1_Init(void)
 249:Src/main.c    **** {
 250:Src/main.c    **** 
 251:Src/main.c    ****   hcan1.Instance = CAN1;
 252:Src/main.c    ****   hcan1.Init.Prescaler = 16;
 253:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 254:Src/main.c    ****   hcan1.Init.SJW = CAN_SJW_1TQ;
 255:Src/main.c    ****   hcan1.Init.BS1 = CAN_BS1_1TQ;
 256:Src/main.c    ****   hcan1.Init.BS2 = CAN_BS2_1TQ;
 257:Src/main.c    ****   hcan1.Init.TTCM = DISABLE;
 258:Src/main.c    ****   hcan1.Init.ABOM = DISABLE;
 259:Src/main.c    ****   hcan1.Init.AWUM = DISABLE;
 260:Src/main.c    ****   hcan1.Init.NART = DISABLE;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 6


 261:Src/main.c    ****   hcan1.Init.RFLM = DISABLE;
 262:Src/main.c    ****   hcan1.Init.TXFP = DISABLE;
 263:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 264:Src/main.c    ****   {
 265:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 266:Src/main.c    ****   }
 267:Src/main.c    **** 
 268:Src/main.c    **** }
 269:Src/main.c    **** 
 270:Src/main.c    **** /* I2C1 init function */
 271:Src/main.c    **** static void MX_I2C1_Init(void)
 272:Src/main.c    **** {
 273:Src/main.c    **** 
 274:Src/main.c    ****   hi2c1.Instance = I2C1;
 275:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 276:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 277:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 278:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 279:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 280:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 281:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 282:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 283:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 284:Src/main.c    ****   {
 285:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 286:Src/main.c    ****   }
 287:Src/main.c    **** 
 288:Src/main.c    **** }
 289:Src/main.c    **** 
 290:Src/main.c    **** /* I2C3 init function */
 291:Src/main.c    **** static void MX_I2C3_Init(void)
 292:Src/main.c    **** {
 293:Src/main.c    **** 
 294:Src/main.c    ****   hi2c3.Instance = I2C3;
 295:Src/main.c    ****   hi2c3.Init.ClockSpeed = 100000;
 296:Src/main.c    ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 297:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 298:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 299:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 300:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 301:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 302:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 303:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 304:Src/main.c    ****   {
 305:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 306:Src/main.c    ****   }
 307:Src/main.c    **** 
 308:Src/main.c    **** }
 309:Src/main.c    **** 
 310:Src/main.c    **** /* SDIO init function */
 311:Src/main.c    **** static void MX_SDIO_SD_Init(void)
 312:Src/main.c    **** {
 313:Src/main.c    **** 
 314:Src/main.c    ****   hsd.Instance = SDIO;
 315:Src/main.c    ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 316:Src/main.c    ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 317:Src/main.c    ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 7


 318:Src/main.c    ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
 319:Src/main.c    ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 320:Src/main.c    ****   hsd.Init.ClockDiv = 0;
 321:Src/main.c    ****   if (HAL_SD_Init(&hsd) != HAL_OK)
 322:Src/main.c    ****   {
 323:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 324:Src/main.c    ****   }
 325:Src/main.c    **** 
 326:Src/main.c    **** }
 327:Src/main.c    **** 
 328:Src/main.c    **** /* TIM2 init function */
 329:Src/main.c    **** static void MX_TIM2_Init(void)
 330:Src/main.c    **** {
 331:Src/main.c    **** 
 332:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 333:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 334:Src/main.c    **** 
 335:Src/main.c    ****   htim2.Instance = TIM2;
 336:Src/main.c    ****   htim2.Init.Prescaler = 0;
 337:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 338:Src/main.c    ****   htim2.Init.Period = 0;
 339:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 340:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 341:Src/main.c    ****   {
 342:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 343:Src/main.c    ****   }
 344:Src/main.c    **** 
 345:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 346:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 347:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 348:Src/main.c    ****   {
 349:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 350:Src/main.c    ****   }
 351:Src/main.c    **** 
 352:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 353:Src/main.c    ****   sConfigOC.Pulse = 0;
 354:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 355:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 356:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 357:Src/main.c    ****   {
 358:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 359:Src/main.c    ****   }
 360:Src/main.c    **** 
 361:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 362:Src/main.c    ****   {
 363:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 364:Src/main.c    ****   }
 365:Src/main.c    **** 
 366:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 367:Src/main.c    **** 
 368:Src/main.c    **** }
 369:Src/main.c    **** 
 370:Src/main.c    **** /* TIM3 init function */
 371:Src/main.c    **** static void MX_TIM3_Init(void)
 372:Src/main.c    **** {
 373:Src/main.c    **** 
 374:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 8


 375:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 376:Src/main.c    **** 
 377:Src/main.c    ****   htim3.Instance = TIM3;
 378:Src/main.c    ****   htim3.Init.Prescaler = 0;
 379:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 380:Src/main.c    ****   htim3.Init.Period = 0;
 381:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 382:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 383:Src/main.c    ****   {
 384:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 385:Src/main.c    ****   }
 386:Src/main.c    **** 
 387:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 388:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 389:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 390:Src/main.c    ****   {
 391:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 392:Src/main.c    ****   }
 393:Src/main.c    **** 
 394:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 395:Src/main.c    ****   sConfigOC.Pulse = 0;
 396:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 397:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 398:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 399:Src/main.c    ****   {
 400:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 401:Src/main.c    ****   }
 402:Src/main.c    **** 
 403:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 404:Src/main.c    ****   {
 405:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 406:Src/main.c    ****   }
 407:Src/main.c    **** 
 408:Src/main.c    ****   HAL_TIM_MspPostInit(&htim3);
 409:Src/main.c    **** 
 410:Src/main.c    **** }
 411:Src/main.c    **** 
 412:Src/main.c    **** /* TIM5 init function */
 413:Src/main.c    **** static void MX_TIM5_Init(void)
 414:Src/main.c    **** {
 415:Src/main.c    **** 
 416:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 417:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 418:Src/main.c    **** 
 419:Src/main.c    ****   htim5.Instance = TIM5;
 420:Src/main.c    ****   htim5.Init.Prescaler = 0;
 421:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 422:Src/main.c    ****   htim5.Init.Period = 0;
 423:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 424:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 425:Src/main.c    ****   {
 426:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 427:Src/main.c    ****   }
 428:Src/main.c    **** 
 429:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 430:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 431:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 9


 432:Src/main.c    ****   {
 433:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 434:Src/main.c    ****   }
 435:Src/main.c    **** 
 436:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 437:Src/main.c    ****   sConfigOC.Pulse = 0;
 438:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 439:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 440:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 441:Src/main.c    ****   {
 442:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 443:Src/main.c    ****   }
 444:Src/main.c    **** 
 445:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 446:Src/main.c    ****   {
 447:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 448:Src/main.c    ****   }
 449:Src/main.c    **** 
 450:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 451:Src/main.c    ****   {
 452:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 453:Src/main.c    ****   }
 454:Src/main.c    **** 
 455:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 456:Src/main.c    ****   {
 457:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 458:Src/main.c    ****   }
 459:Src/main.c    **** 
 460:Src/main.c    ****   HAL_TIM_MspPostInit(&htim5);
 461:Src/main.c    **** 
 462:Src/main.c    **** }
 463:Src/main.c    **** 
 464:Src/main.c    **** /* TIM13 init function */
 465:Src/main.c    **** static void MX_TIM13_Init(void)
 466:Src/main.c    **** {
 467:Src/main.c    **** 
 468:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 469:Src/main.c    **** 
 470:Src/main.c    ****   htim13.Instance = TIM13;
 471:Src/main.c    ****   htim13.Init.Prescaler = 0;
 472:Src/main.c    ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 473:Src/main.c    ****   htim13.Init.Period = 0;
 474:Src/main.c    ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 475:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 476:Src/main.c    ****   {
 477:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 478:Src/main.c    ****   }
 479:Src/main.c    **** 
 480:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 481:Src/main.c    ****   {
 482:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 483:Src/main.c    ****   }
 484:Src/main.c    **** 
 485:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 486:Src/main.c    ****   sConfigOC.Pulse = 0;
 487:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 488:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 10


 489:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 490:Src/main.c    ****   {
 491:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 492:Src/main.c    ****   }
 493:Src/main.c    **** 
 494:Src/main.c    ****   HAL_TIM_MspPostInit(&htim13);
 495:Src/main.c    **** 
 496:Src/main.c    **** }
 497:Src/main.c    **** 
 498:Src/main.c    **** /* TIM14 init function */
 499:Src/main.c    **** static void MX_TIM14_Init(void)
 500:Src/main.c    **** {
 501:Src/main.c    **** 
 502:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 503:Src/main.c    **** 
 504:Src/main.c    ****   htim14.Instance = TIM14;
 505:Src/main.c    ****   htim14.Init.Prescaler = 0;
 506:Src/main.c    ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 507:Src/main.c    ****   htim14.Init.Period = 0;
 508:Src/main.c    ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 509:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 510:Src/main.c    ****   {
 511:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 512:Src/main.c    ****   }
 513:Src/main.c    **** 
 514:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 515:Src/main.c    ****   {
 516:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 517:Src/main.c    ****   }
 518:Src/main.c    **** 
 519:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 520:Src/main.c    ****   sConfigOC.Pulse = 0;
 521:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 522:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 523:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 524:Src/main.c    ****   {
 525:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 526:Src/main.c    ****   }
 527:Src/main.c    **** 
 528:Src/main.c    ****   HAL_TIM_MspPostInit(&htim14);
 529:Src/main.c    **** 
 530:Src/main.c    **** }
 531:Src/main.c    **** 
 532:Src/main.c    **** /** Configure pins as 
 533:Src/main.c    ****         * Analog 
 534:Src/main.c    ****         * Input 
 535:Src/main.c    ****         * Output
 536:Src/main.c    ****         * EVENT_OUT
 537:Src/main.c    ****         * EXTI
 538:Src/main.c    **** */
 539:Src/main.c    **** static void MX_GPIO_Init(void)
 540:Src/main.c    **** {
  27              		.loc 1 540 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 11


  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
  40              	.LBB2:
 541:Src/main.c    **** 
 542:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 543:Src/main.c    **** 
 544:Src/main.c    ****   /* GPIO Ports Clock Enable */
 545:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  41              		.loc 1 545 0
  42 0004 0024     		movs	r4, #0
  43 0006 0094     		str	r4, [sp]
  44 0008 264B     		ldr	r3, .L3
  45 000a 1A6B     		ldr	r2, [r3, #48]
  46 000c 42F00402 		orr	r2, r2, #4
  47 0010 1A63     		str	r2, [r3, #48]
  48 0012 1A6B     		ldr	r2, [r3, #48]
  49 0014 02F00402 		and	r2, r2, #4
  50 0018 0092     		str	r2, [sp]
  51 001a 009A     		ldr	r2, [sp]
  52              	.LBE2:
  53              	.LBB3:
 546:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  54              		.loc 1 546 0
  55 001c 0194     		str	r4, [sp, #4]
  56 001e 1A6B     		ldr	r2, [r3, #48]
  57 0020 42F08002 		orr	r2, r2, #128
  58 0024 1A63     		str	r2, [r3, #48]
  59 0026 1A6B     		ldr	r2, [r3, #48]
  60 0028 02F08002 		and	r2, r2, #128
  61 002c 0192     		str	r2, [sp, #4]
  62 002e 019A     		ldr	r2, [sp, #4]
  63              	.LBE3:
  64              	.LBB4:
 547:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 547 0
  66 0030 0294     		str	r4, [sp, #8]
  67 0032 1A6B     		ldr	r2, [r3, #48]
  68 0034 42F00102 		orr	r2, r2, #1
  69 0038 1A63     		str	r2, [r3, #48]
  70 003a 1A6B     		ldr	r2, [r3, #48]
  71 003c 02F00102 		and	r2, r2, #1
  72 0040 0292     		str	r2, [sp, #8]
  73 0042 029A     		ldr	r2, [sp, #8]
  74              	.LBE4:
  75              	.LBB5:
 548:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  76              		.loc 1 548 0
  77 0044 0394     		str	r4, [sp, #12]
  78 0046 1A6B     		ldr	r2, [r3, #48]
  79 0048 42F00202 		orr	r2, r2, #2
  80 004c 1A63     		str	r2, [r3, #48]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 12


  81 004e 1A6B     		ldr	r2, [r3, #48]
  82 0050 02F00202 		and	r2, r2, #2
  83 0054 0392     		str	r2, [sp, #12]
  84 0056 039A     		ldr	r2, [sp, #12]
  85              	.LBE5:
  86              	.LBB6:
 549:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  87              		.loc 1 549 0
  88 0058 0494     		str	r4, [sp, #16]
  89 005a 1A6B     		ldr	r2, [r3, #48]
  90 005c 42F00802 		orr	r2, r2, #8
  91 0060 1A63     		str	r2, [r3, #48]
  92 0062 1B6B     		ldr	r3, [r3, #48]
  93 0064 03F00803 		and	r3, r3, #8
  94 0068 0493     		str	r3, [sp, #16]
  95 006a 049B     		ldr	r3, [sp, #16]
  96              	.LBE6:
 550:Src/main.c    **** 
 551:Src/main.c    ****   /*Configure GPIO pin Output Level */
 552:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, HeartBeat1_Pin|Heartbeat2_Pin, GPIO_PIN_RESET);
  97              		.loc 1 552 0
  98 006c 0E4D     		ldr	r5, .L3+4
  99 006e 2246     		mov	r2, r4
 100 0070 C021     		movs	r1, #192
 101 0072 2846     		mov	r0, r5
 102 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL0:
 553:Src/main.c    **** 
 554:Src/main.c    ****   /*Configure GPIO pins : KillSwitch_Pin MissionStart_Pin Switch3_Pin Siwtch4_Pin 
 555:Src/main.c    ****                            Switch5_Pin */
 556:Src/main.c    ****   GPIO_InitStruct.Pin = KillSwitch_Pin|MissionStart_Pin|Switch3_Pin|Siwtch4_Pin 
 104              		.loc 1 556 0
 105 0078 48F20F03 		movw	r3, #32783
 106 007c 0593     		str	r3, [sp, #20]
 557:Src/main.c    ****                           |Switch5_Pin;
 558:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 107              		.loc 1 558 0
 108 007e 0694     		str	r4, [sp, #24]
 559:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 109              		.loc 1 559 0
 110 0080 0794     		str	r4, [sp, #28]
 560:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 111              		.loc 1 560 0
 112 0082 05A9     		add	r1, sp, #20
 113 0084 2846     		mov	r0, r5
 114 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 115              	.LVL1:
 561:Src/main.c    **** 
 562:Src/main.c    ****   /*Configure GPIO pins : HeartBeat1_Pin Heartbeat2_Pin */
 563:Src/main.c    ****   GPIO_InitStruct.Pin = HeartBeat1_Pin|Heartbeat2_Pin;
 116              		.loc 1 563 0
 117 008a C023     		movs	r3, #192
 118 008c 0593     		str	r3, [sp, #20]
 564:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 119              		.loc 1 564 0
 120 008e 0123     		movs	r3, #1
 121 0090 0693     		str	r3, [sp, #24]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 13


 565:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 565 0
 123 0092 0794     		str	r4, [sp, #28]
 566:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 566 0
 125 0094 0894     		str	r4, [sp, #32]
 567:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 126              		.loc 1 567 0
 127 0096 05A9     		add	r1, sp, #20
 128 0098 2846     		mov	r0, r5
 129 009a FFF7FEFF 		bl	HAL_GPIO_Init
 130              	.LVL2:
 568:Src/main.c    **** 
 569:Src/main.c    **** }
 131              		.loc 1 569 0
 132 009e 0BB0     		add	sp, sp, #44
 133              	.LCFI2:
 134              		.cfi_def_cfa_offset 12
 135              		@ sp needed
 136 00a0 30BD     		pop	{r4, r5, pc}
 137              	.L4:
 138 00a2 00BF     		.align	2
 139              	.L3:
 140 00a4 00380240 		.word	1073887232
 141 00a8 00080240 		.word	1073874944
 142              		.cfi_endproc
 143              	.LFE140:
 145              		.section	.text.StartDefaultTask,"ax",%progbits
 146              		.align	1
 147              		.global	StartDefaultTask
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv4-sp-d16
 153              	StartDefaultTask:
 154              	.LFB141:
 570:Src/main.c    **** 
 571:Src/main.c    **** /* USER CODE BEGIN 4 */
 572:Src/main.c    **** 
 573:Src/main.c    **** /* USER CODE END 4 */
 574:Src/main.c    **** 
 575:Src/main.c    **** /* StartDefaultTask function */
 576:Src/main.c    **** void StartDefaultTask(void const * argument)
 577:Src/main.c    **** {
 155              		.loc 1 577 0
 156              		.cfi_startproc
 157              		@ Volatile: function does not return.
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              	.LVL3:
 161 0000 08B5     		push	{r3, lr}
 162              	.LCFI3:
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 3, -8
 165              		.cfi_offset 14, -4
 578:Src/main.c    ****   /* init code for USB_DEVICE */
 579:Src/main.c    ****   MX_USB_DEVICE_Init();
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 14


 166              		.loc 1 579 0
 167 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 168              	.LVL4:
 169              	.L6:
 580:Src/main.c    **** 
 581:Src/main.c    ****   /* USER CODE BEGIN 5 */
 582:Src/main.c    ****   /* Infinite loop */
 583:Src/main.c    ****   for(;;)
 584:Src/main.c    ****   {
 585:Src/main.c    ****     osDelay(1);
 170              		.loc 1 585 0 discriminator 1
 171 0006 0120     		movs	r0, #1
 172 0008 FFF7FEFF 		bl	osDelay
 173              	.LVL5:
 174 000c FBE7     		b	.L6
 175              		.cfi_endproc
 176              	.LFE141:
 178              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 179              		.align	1
 180              		.global	HAL_TIM_PeriodElapsedCallback
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	HAL_TIM_PeriodElapsedCallback:
 187              	.LFB142:
 586:Src/main.c    ****   }
 587:Src/main.c    ****   /* USER CODE END 5 */ 
 588:Src/main.c    **** }
 589:Src/main.c    **** 
 590:Src/main.c    **** /**
 591:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 592:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 593:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 594:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 595:Src/main.c    ****   * @param  htim : TIM handle
 596:Src/main.c    ****   * @retval None
 597:Src/main.c    ****   */
 598:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 599:Src/main.c    **** {
 188              		.loc 1 599 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              	.LVL6:
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 600:Src/main.c    **** /* USER CODE BEGIN Callback 0 */
 601:Src/main.c    **** 
 602:Src/main.c    **** /* USER CODE END Callback 0 */
 603:Src/main.c    ****   if (htim->Instance == TIM1) {
 198              		.loc 1 603 0
 199 0002 0268     		ldr	r2, [r0]
 200 0004 034B     		ldr	r3, .L12
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 15


 201 0006 9A42     		cmp	r2, r3
 202 0008 00D0     		beq	.L11
 203              	.LVL7:
 204              	.L8:
 205 000a 08BD     		pop	{r3, pc}
 206              	.LVL8:
 207              	.L11:
 604:Src/main.c    ****     HAL_IncTick();
 208              		.loc 1 604 0
 209 000c FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL9:
 605:Src/main.c    ****   }
 606:Src/main.c    **** /* USER CODE BEGIN Callback 1 */
 607:Src/main.c    **** 
 608:Src/main.c    **** /* USER CODE END Callback 1 */
 609:Src/main.c    **** }
 211              		.loc 1 609 0
 212 0010 FBE7     		b	.L8
 213              	.L13:
 214 0012 00BF     		.align	2
 215              	.L12:
 216 0014 00000140 		.word	1073807360
 217              		.cfi_endproc
 218              	.LFE142:
 220              		.section	.text._Error_Handler,"ax",%progbits
 221              		.align	1
 222              		.global	_Error_Handler
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	_Error_Handler:
 229              	.LFB143:
 610:Src/main.c    **** 
 611:Src/main.c    **** /**
 612:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 613:Src/main.c    ****   * @param  None
 614:Src/main.c    ****   * @retval None
 615:Src/main.c    ****   */
 616:Src/main.c    **** void _Error_Handler(char * file, int line)
 617:Src/main.c    **** {
 230              		.loc 1 617 0
 231              		.cfi_startproc
 232              		@ Volatile: function does not return.
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL10:
 237              	.L15:
 238 0000 FEE7     		b	.L15
 239              		.cfi_endproc
 240              	.LFE143:
 242              		.section	.text.MX_CAN1_Init,"ax",%progbits
 243              		.align	1
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 16


 247              		.fpu fpv4-sp-d16
 249              	MX_CAN1_Init:
 250              	.LFB131:
 249:Src/main.c    **** 
 251              		.loc 1 249 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 249:Src/main.c    **** 
 255              		.loc 1 249 0
 256 0000 08B5     		push	{r3, lr}
 257              	.LCFI5:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 3, -8
 260              		.cfi_offset 14, -4
 251:Src/main.c    ****   hcan1.Init.Prescaler = 16;
 261              		.loc 1 251 0
 262 0002 0C48     		ldr	r0, .L20
 263 0004 0C4B     		ldr	r3, .L20+4
 264 0006 0360     		str	r3, [r0]
 252:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 265              		.loc 1 252 0
 266 0008 1023     		movs	r3, #16
 267 000a 4360     		str	r3, [r0, #4]
 253:Src/main.c    ****   hcan1.Init.SJW = CAN_SJW_1TQ;
 268              		.loc 1 253 0
 269 000c 0023     		movs	r3, #0
 270 000e 8360     		str	r3, [r0, #8]
 254:Src/main.c    ****   hcan1.Init.BS1 = CAN_BS1_1TQ;
 271              		.loc 1 254 0
 272 0010 C360     		str	r3, [r0, #12]
 255:Src/main.c    ****   hcan1.Init.BS2 = CAN_BS2_1TQ;
 273              		.loc 1 255 0
 274 0012 0361     		str	r3, [r0, #16]
 256:Src/main.c    ****   hcan1.Init.TTCM = DISABLE;
 275              		.loc 1 256 0
 276 0014 4361     		str	r3, [r0, #20]
 257:Src/main.c    ****   hcan1.Init.ABOM = DISABLE;
 277              		.loc 1 257 0
 278 0016 8361     		str	r3, [r0, #24]
 258:Src/main.c    ****   hcan1.Init.AWUM = DISABLE;
 279              		.loc 1 258 0
 280 0018 C361     		str	r3, [r0, #28]
 259:Src/main.c    ****   hcan1.Init.NART = DISABLE;
 281              		.loc 1 259 0
 282 001a 0362     		str	r3, [r0, #32]
 260:Src/main.c    ****   hcan1.Init.RFLM = DISABLE;
 283              		.loc 1 260 0
 284 001c 4362     		str	r3, [r0, #36]
 261:Src/main.c    ****   hcan1.Init.TXFP = DISABLE;
 285              		.loc 1 261 0
 286 001e 8362     		str	r3, [r0, #40]
 262:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 287              		.loc 1 262 0
 288 0020 C362     		str	r3, [r0, #44]
 263:Src/main.c    ****   {
 289              		.loc 1 263 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 17


 290 0022 FFF7FEFF 		bl	HAL_CAN_Init
 291              	.LVL11:
 292 0026 00B9     		cbnz	r0, .L19
 293 0028 08BD     		pop	{r3, pc}
 294              	.L19:
 265:Src/main.c    ****   }
 295              		.loc 1 265 0
 296 002a 40F20911 		movw	r1, #265
 297 002e 0348     		ldr	r0, .L20+8
 298 0030 FFF7FEFF 		bl	_Error_Handler
 299              	.LVL12:
 300              	.L21:
 301              		.align	2
 302              	.L20:
 303 0034 00000000 		.word	hcan1
 304 0038 00640040 		.word	1073767424
 305 003c 00000000 		.word	.LC2
 306              		.cfi_endproc
 307              	.LFE131:
 309              		.section	.text.MX_I2C1_Init,"ax",%progbits
 310              		.align	1
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu fpv4-sp-d16
 316              	MX_I2C1_Init:
 317              	.LFB132:
 272:Src/main.c    **** 
 318              		.loc 1 272 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 08B5     		push	{r3, lr}
 323              	.LCFI6:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
 274:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 327              		.loc 1 274 0
 328 0002 0C48     		ldr	r0, .L26
 329 0004 0C4B     		ldr	r3, .L26+4
 330 0006 0360     		str	r3, [r0]
 275:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 331              		.loc 1 275 0
 332 0008 0C4B     		ldr	r3, .L26+8
 333 000a 4360     		str	r3, [r0, #4]
 276:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 334              		.loc 1 276 0
 335 000c 0023     		movs	r3, #0
 336 000e 8360     		str	r3, [r0, #8]
 277:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 337              		.loc 1 277 0
 338 0010 C360     		str	r3, [r0, #12]
 278:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 339              		.loc 1 278 0
 340 0012 4FF48042 		mov	r2, #16384
 341 0016 0261     		str	r2, [r0, #16]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 18


 279:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 342              		.loc 1 279 0
 343 0018 4361     		str	r3, [r0, #20]
 280:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 344              		.loc 1 280 0
 345 001a 8361     		str	r3, [r0, #24]
 281:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 346              		.loc 1 281 0
 347 001c C361     		str	r3, [r0, #28]
 282:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 348              		.loc 1 282 0
 349 001e 0362     		str	r3, [r0, #32]
 283:Src/main.c    ****   {
 350              		.loc 1 283 0
 351 0020 FFF7FEFF 		bl	HAL_I2C_Init
 352              	.LVL13:
 353 0024 00B9     		cbnz	r0, .L25
 354 0026 08BD     		pop	{r3, pc}
 355              	.L25:
 285:Src/main.c    ****   }
 356              		.loc 1 285 0
 357 0028 40F21D11 		movw	r1, #285
 358 002c 0448     		ldr	r0, .L26+12
 359 002e FFF7FEFF 		bl	_Error_Handler
 360              	.LVL14:
 361              	.L27:
 362 0032 00BF     		.align	2
 363              	.L26:
 364 0034 00000000 		.word	hi2c1
 365 0038 00540040 		.word	1073763328
 366 003c A0860100 		.word	100000
 367 0040 00000000 		.word	.LC2
 368              		.cfi_endproc
 369              	.LFE132:
 371              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
 372              		.align	1
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	MX_SDIO_SD_Init:
 379              	.LFB134:
 312:Src/main.c    **** 
 380              		.loc 1 312 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              	.LCFI7:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 3, -8
 388              		.cfi_offset 14, -4
 314:Src/main.c    ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 389              		.loc 1 314 0
 390 0002 0948     		ldr	r0, .L32
 391 0004 094B     		ldr	r3, .L32+4
 392 0006 0360     		str	r3, [r0]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 19


 315:Src/main.c    ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 393              		.loc 1 315 0
 394 0008 0023     		movs	r3, #0
 395 000a 4360     		str	r3, [r0, #4]
 316:Src/main.c    ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 396              		.loc 1 316 0
 397 000c 8360     		str	r3, [r0, #8]
 317:Src/main.c    ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
 398              		.loc 1 317 0
 399 000e C360     		str	r3, [r0, #12]
 318:Src/main.c    ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 400              		.loc 1 318 0
 401 0010 0361     		str	r3, [r0, #16]
 319:Src/main.c    ****   hsd.Init.ClockDiv = 0;
 402              		.loc 1 319 0
 403 0012 4361     		str	r3, [r0, #20]
 320:Src/main.c    ****   if (HAL_SD_Init(&hsd) != HAL_OK)
 404              		.loc 1 320 0
 405 0014 8361     		str	r3, [r0, #24]
 321:Src/main.c    ****   {
 406              		.loc 1 321 0
 407 0016 FFF7FEFF 		bl	HAL_SD_Init
 408              	.LVL15:
 409 001a 00B9     		cbnz	r0, .L31
 410 001c 08BD     		pop	{r3, pc}
 411              	.L31:
 323:Src/main.c    ****   }
 412              		.loc 1 323 0
 413 001e 40F24311 		movw	r1, #323
 414 0022 0348     		ldr	r0, .L32+8
 415 0024 FFF7FEFF 		bl	_Error_Handler
 416              	.LVL16:
 417              	.L33:
 418              		.align	2
 419              	.L32:
 420 0028 00000000 		.word	hsd
 421 002c 002C0140 		.word	1073818624
 422 0030 00000000 		.word	.LC2
 423              		.cfi_endproc
 424              	.LFE134:
 426              		.section	.text.MX_TIM2_Init,"ax",%progbits
 427              		.align	1
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	MX_TIM2_Init:
 434              	.LFB135:
 330:Src/main.c    **** 
 435              		.loc 1 330 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 40
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439 0000 00B5     		push	{lr}
 440              	.LCFI8:
 441              		.cfi_def_cfa_offset 4
 442              		.cfi_offset 14, -4
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 20


 443 0002 8BB0     		sub	sp, sp, #44
 444              	.LCFI9:
 445              		.cfi_def_cfa_offset 48
 335:Src/main.c    ****   htim2.Init.Prescaler = 0;
 446              		.loc 1 335 0
 447 0004 1F48     		ldr	r0, .L44
 448 0006 4FF08043 		mov	r3, #1073741824
 449 000a 0360     		str	r3, [r0]
 336:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 450              		.loc 1 336 0
 451 000c 0023     		movs	r3, #0
 452 000e 4360     		str	r3, [r0, #4]
 337:Src/main.c    ****   htim2.Init.Period = 0;
 453              		.loc 1 337 0
 454 0010 8360     		str	r3, [r0, #8]
 338:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 455              		.loc 1 338 0
 456 0012 C360     		str	r3, [r0, #12]
 339:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 457              		.loc 1 339 0
 458 0014 0361     		str	r3, [r0, #16]
 340:Src/main.c    ****   {
 459              		.loc 1 340 0
 460 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 461              	.LVL17:
 462 001a F8B9     		cbnz	r0, .L40
 345:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 463              		.loc 1 345 0
 464 001c 0023     		movs	r3, #0
 465 001e 0893     		str	r3, [sp, #32]
 346:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 466              		.loc 1 346 0
 467 0020 0993     		str	r3, [sp, #36]
 347:Src/main.c    ****   {
 468              		.loc 1 347 0
 469 0022 08A9     		add	r1, sp, #32
 470 0024 1748     		ldr	r0, .L44
 471 0026 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 472              	.LVL18:
 473 002a E0B9     		cbnz	r0, .L41
 352:Src/main.c    ****   sConfigOC.Pulse = 0;
 474              		.loc 1 352 0
 475 002c 6023     		movs	r3, #96
 476 002e 0193     		str	r3, [sp, #4]
 353:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 477              		.loc 1 353 0
 478 0030 0023     		movs	r3, #0
 479 0032 0293     		str	r3, [sp, #8]
 354:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 480              		.loc 1 354 0
 481 0034 0393     		str	r3, [sp, #12]
 355:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 482              		.loc 1 355 0
 483 0036 0593     		str	r3, [sp, #20]
 356:Src/main.c    ****   {
 484              		.loc 1 356 0
 485 0038 0822     		movs	r2, #8
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 21


 486 003a 01A9     		add	r1, sp, #4
 487 003c 1148     		ldr	r0, .L44
 488 003e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 489              	.LVL19:
 490 0042 A8B9     		cbnz	r0, .L42
 361:Src/main.c    ****   {
 491              		.loc 1 361 0
 492 0044 0C22     		movs	r2, #12
 493 0046 01A9     		add	r1, sp, #4
 494 0048 0E48     		ldr	r0, .L44
 495 004a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 496              	.LVL20:
 497 004e A0B9     		cbnz	r0, .L43
 366:Src/main.c    **** 
 498              		.loc 1 366 0
 499 0050 0C48     		ldr	r0, .L44
 500 0052 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 501              	.LVL21:
 368:Src/main.c    **** 
 502              		.loc 1 368 0
 503 0056 0BB0     		add	sp, sp, #44
 504              	.LCFI10:
 505              		.cfi_remember_state
 506              		.cfi_def_cfa_offset 4
 507              		@ sp needed
 508 0058 5DF804FB 		ldr	pc, [sp], #4
 509              	.L40:
 510              	.LCFI11:
 511              		.cfi_restore_state
 342:Src/main.c    ****   }
 512              		.loc 1 342 0
 513 005c 4FF4AB71 		mov	r1, #342
 514 0060 0948     		ldr	r0, .L44+4
 515 0062 FFF7FEFF 		bl	_Error_Handler
 516              	.LVL22:
 517              	.L41:
 349:Src/main.c    ****   }
 518              		.loc 1 349 0
 519 0066 40F25D11 		movw	r1, #349
 520 006a 0748     		ldr	r0, .L44+4
 521 006c FFF7FEFF 		bl	_Error_Handler
 522              	.LVL23:
 523              	.L42:
 358:Src/main.c    ****   }
 524              		.loc 1 358 0
 525 0070 4FF4B371 		mov	r1, #358
 526 0074 0448     		ldr	r0, .L44+4
 527 0076 FFF7FEFF 		bl	_Error_Handler
 528              	.LVL24:
 529              	.L43:
 363:Src/main.c    ****   }
 530              		.loc 1 363 0
 531 007a 40F26B11 		movw	r1, #363
 532 007e 0248     		ldr	r0, .L44+4
 533 0080 FFF7FEFF 		bl	_Error_Handler
 534              	.LVL25:
 535              	.L45:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 22


 536              		.align	2
 537              	.L44:
 538 0084 00000000 		.word	htim2
 539 0088 00000000 		.word	.LC2
 540              		.cfi_endproc
 541              	.LFE135:
 543              		.section	.text.MX_TIM3_Init,"ax",%progbits
 544              		.align	1
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv4-sp-d16
 550              	MX_TIM3_Init:
 551              	.LFB136:
 372:Src/main.c    **** 
 552              		.loc 1 372 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 40
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 00B5     		push	{lr}
 557              	.LCFI12:
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 14, -4
 560 0002 8BB0     		sub	sp, sp, #44
 561              	.LCFI13:
 562              		.cfi_def_cfa_offset 48
 377:Src/main.c    ****   htim3.Init.Prescaler = 0;
 563              		.loc 1 377 0
 564 0004 1F48     		ldr	r0, .L56
 565 0006 204B     		ldr	r3, .L56+4
 566 0008 0360     		str	r3, [r0]
 378:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 567              		.loc 1 378 0
 568 000a 0023     		movs	r3, #0
 569 000c 4360     		str	r3, [r0, #4]
 379:Src/main.c    ****   htim3.Init.Period = 0;
 570              		.loc 1 379 0
 571 000e 8360     		str	r3, [r0, #8]
 380:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 572              		.loc 1 380 0
 573 0010 C360     		str	r3, [r0, #12]
 381:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 574              		.loc 1 381 0
 575 0012 0361     		str	r3, [r0, #16]
 382:Src/main.c    ****   {
 576              		.loc 1 382 0
 577 0014 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 578              	.LVL26:
 579 0018 F8B9     		cbnz	r0, .L52
 387:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 580              		.loc 1 387 0
 581 001a 0023     		movs	r3, #0
 582 001c 0893     		str	r3, [sp, #32]
 388:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 583              		.loc 1 388 0
 584 001e 0993     		str	r3, [sp, #36]
 389:Src/main.c    ****   {
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 23


 585              		.loc 1 389 0
 586 0020 08A9     		add	r1, sp, #32
 587 0022 1848     		ldr	r0, .L56
 588 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 589              	.LVL27:
 590 0028 E0B9     		cbnz	r0, .L53
 394:Src/main.c    ****   sConfigOC.Pulse = 0;
 591              		.loc 1 394 0
 592 002a 6023     		movs	r3, #96
 593 002c 0193     		str	r3, [sp, #4]
 395:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 594              		.loc 1 395 0
 595 002e 0023     		movs	r3, #0
 596 0030 0293     		str	r3, [sp, #8]
 396:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 597              		.loc 1 396 0
 598 0032 0393     		str	r3, [sp, #12]
 397:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 599              		.loc 1 397 0
 600 0034 0593     		str	r3, [sp, #20]
 398:Src/main.c    ****   {
 601              		.loc 1 398 0
 602 0036 0822     		movs	r2, #8
 603 0038 01A9     		add	r1, sp, #4
 604 003a 1248     		ldr	r0, .L56
 605 003c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 606              	.LVL28:
 607 0040 A8B9     		cbnz	r0, .L54
 403:Src/main.c    ****   {
 608              		.loc 1 403 0
 609 0042 0C22     		movs	r2, #12
 610 0044 01A9     		add	r1, sp, #4
 611 0046 0F48     		ldr	r0, .L56
 612 0048 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 613              	.LVL29:
 614 004c A0B9     		cbnz	r0, .L55
 408:Src/main.c    **** 
 615              		.loc 1 408 0
 616 004e 0D48     		ldr	r0, .L56
 617 0050 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 618              	.LVL30:
 410:Src/main.c    **** 
 619              		.loc 1 410 0
 620 0054 0BB0     		add	sp, sp, #44
 621              	.LCFI14:
 622              		.cfi_remember_state
 623              		.cfi_def_cfa_offset 4
 624              		@ sp needed
 625 0056 5DF804FB 		ldr	pc, [sp], #4
 626              	.L52:
 627              	.LCFI15:
 628              		.cfi_restore_state
 384:Src/main.c    ****   }
 629              		.loc 1 384 0
 630 005a 4FF4C071 		mov	r1, #384
 631 005e 0B48     		ldr	r0, .L56+8
 632 0060 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 24


 633              	.LVL31:
 634              	.L53:
 391:Src/main.c    ****   }
 635              		.loc 1 391 0
 636 0064 40F28711 		movw	r1, #391
 637 0068 0848     		ldr	r0, .L56+8
 638 006a FFF7FEFF 		bl	_Error_Handler
 639              	.LVL32:
 640              	.L54:
 400:Src/main.c    ****   }
 641              		.loc 1 400 0
 642 006e 4FF4C871 		mov	r1, #400
 643 0072 0648     		ldr	r0, .L56+8
 644 0074 FFF7FEFF 		bl	_Error_Handler
 645              	.LVL33:
 646              	.L55:
 405:Src/main.c    ****   }
 647              		.loc 1 405 0
 648 0078 40F29511 		movw	r1, #405
 649 007c 0348     		ldr	r0, .L56+8
 650 007e FFF7FEFF 		bl	_Error_Handler
 651              	.LVL34:
 652              	.L57:
 653 0082 00BF     		.align	2
 654              	.L56:
 655 0084 00000000 		.word	htim3
 656 0088 00040040 		.word	1073742848
 657 008c 00000000 		.word	.LC2
 658              		.cfi_endproc
 659              	.LFE136:
 661              		.section	.text.MX_TIM5_Init,"ax",%progbits
 662              		.align	1
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 666              		.fpu fpv4-sp-d16
 668              	MX_TIM5_Init:
 669              	.LFB137:
 414:Src/main.c    **** 
 670              		.loc 1 414 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 40
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674 0000 00B5     		push	{lr}
 675              	.LCFI16:
 676              		.cfi_def_cfa_offset 4
 677              		.cfi_offset 14, -4
 678 0002 8BB0     		sub	sp, sp, #44
 679              	.LCFI17:
 680              		.cfi_def_cfa_offset 48
 419:Src/main.c    ****   htim5.Init.Prescaler = 0;
 681              		.loc 1 419 0
 682 0004 2A48     		ldr	r0, .L72
 683 0006 2B4B     		ldr	r3, .L72+4
 684 0008 0360     		str	r3, [r0]
 420:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 685              		.loc 1 420 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 25


 686 000a 0023     		movs	r3, #0
 687 000c 4360     		str	r3, [r0, #4]
 421:Src/main.c    ****   htim5.Init.Period = 0;
 688              		.loc 1 421 0
 689 000e 8360     		str	r3, [r0, #8]
 422:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 690              		.loc 1 422 0
 691 0010 C360     		str	r3, [r0, #12]
 423:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 692              		.loc 1 423 0
 693 0012 0361     		str	r3, [r0, #16]
 424:Src/main.c    ****   {
 694              		.loc 1 424 0
 695 0014 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 696              	.LVL35:
 697 0018 58BB     		cbnz	r0, .L66
 429:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 698              		.loc 1 429 0
 699 001a 0023     		movs	r3, #0
 700 001c 0893     		str	r3, [sp, #32]
 430:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 701              		.loc 1 430 0
 702 001e 0993     		str	r3, [sp, #36]
 431:Src/main.c    ****   {
 703              		.loc 1 431 0
 704 0020 08A9     		add	r1, sp, #32
 705 0022 2348     		ldr	r0, .L72
 706 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 707              	.LVL36:
 708 0028 40BB     		cbnz	r0, .L67
 436:Src/main.c    ****   sConfigOC.Pulse = 0;
 709              		.loc 1 436 0
 710 002a 6023     		movs	r3, #96
 711 002c 0193     		str	r3, [sp, #4]
 437:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 712              		.loc 1 437 0
 713 002e 0022     		movs	r2, #0
 714 0030 0292     		str	r2, [sp, #8]
 438:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 715              		.loc 1 438 0
 716 0032 0392     		str	r2, [sp, #12]
 439:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 717              		.loc 1 439 0
 718 0034 0592     		str	r2, [sp, #20]
 440:Src/main.c    ****   {
 719              		.loc 1 440 0
 720 0036 01A9     		add	r1, sp, #4
 721 0038 1D48     		ldr	r0, .L72
 722 003a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 723              	.LVL37:
 724 003e 10BB     		cbnz	r0, .L68
 445:Src/main.c    ****   {
 725              		.loc 1 445 0
 726 0040 0422     		movs	r2, #4
 727 0042 0DEB0201 		add	r1, sp, r2
 728 0046 1A48     		ldr	r0, .L72
 729 0048 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 26


 730              	.LVL38:
 731 004c 00BB     		cbnz	r0, .L69
 450:Src/main.c    ****   {
 732              		.loc 1 450 0
 733 004e 0822     		movs	r2, #8
 734 0050 01A9     		add	r1, sp, #4
 735 0052 1748     		ldr	r0, .L72
 736 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 737              	.LVL39:
 738 0058 F8B9     		cbnz	r0, .L70
 455:Src/main.c    ****   {
 739              		.loc 1 455 0
 740 005a 0C22     		movs	r2, #12
 741 005c 01A9     		add	r1, sp, #4
 742 005e 1448     		ldr	r0, .L72
 743 0060 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 744              	.LVL40:
 745 0064 F0B9     		cbnz	r0, .L71
 460:Src/main.c    **** 
 746              		.loc 1 460 0
 747 0066 1248     		ldr	r0, .L72
 748 0068 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 749              	.LVL41:
 462:Src/main.c    **** 
 750              		.loc 1 462 0
 751 006c 0BB0     		add	sp, sp, #44
 752              	.LCFI18:
 753              		.cfi_remember_state
 754              		.cfi_def_cfa_offset 4
 755              		@ sp needed
 756 006e 5DF804FB 		ldr	pc, [sp], #4
 757              	.L66:
 758              	.LCFI19:
 759              		.cfi_restore_state
 426:Src/main.c    ****   }
 760              		.loc 1 426 0
 761 0072 4FF4D571 		mov	r1, #426
 762 0076 1048     		ldr	r0, .L72+8
 763 0078 FFF7FEFF 		bl	_Error_Handler
 764              	.LVL42:
 765              	.L67:
 433:Src/main.c    ****   }
 766              		.loc 1 433 0
 767 007c 40F2B111 		movw	r1, #433
 768 0080 0D48     		ldr	r0, .L72+8
 769 0082 FFF7FEFF 		bl	_Error_Handler
 770              	.LVL43:
 771              	.L68:
 442:Src/main.c    ****   }
 772              		.loc 1 442 0
 773 0086 4FF4DD71 		mov	r1, #442
 774 008a 0B48     		ldr	r0, .L72+8
 775 008c FFF7FEFF 		bl	_Error_Handler
 776              	.LVL44:
 777              	.L69:
 447:Src/main.c    ****   }
 778              		.loc 1 447 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 27


 779 0090 40F2BF11 		movw	r1, #447
 780 0094 0848     		ldr	r0, .L72+8
 781 0096 FFF7FEFF 		bl	_Error_Handler
 782              	.LVL45:
 783              	.L70:
 452:Src/main.c    ****   }
 784              		.loc 1 452 0
 785 009a 4FF4E271 		mov	r1, #452
 786 009e 0648     		ldr	r0, .L72+8
 787 00a0 FFF7FEFF 		bl	_Error_Handler
 788              	.LVL46:
 789              	.L71:
 457:Src/main.c    ****   }
 790              		.loc 1 457 0
 791 00a4 40F2C911 		movw	r1, #457
 792 00a8 0348     		ldr	r0, .L72+8
 793 00aa FFF7FEFF 		bl	_Error_Handler
 794              	.LVL47:
 795              	.L73:
 796 00ae 00BF     		.align	2
 797              	.L72:
 798 00b0 00000000 		.word	htim5
 799 00b4 000C0040 		.word	1073744896
 800 00b8 00000000 		.word	.LC2
 801              		.cfi_endproc
 802              	.LFE137:
 804              		.section	.text.MX_TIM13_Init,"ax",%progbits
 805              		.align	1
 806              		.syntax unified
 807              		.thumb
 808              		.thumb_func
 809              		.fpu fpv4-sp-d16
 811              	MX_TIM13_Init:
 812              	.LFB138:
 466:Src/main.c    **** 
 813              		.loc 1 466 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 32
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817 0000 00B5     		push	{lr}
 818              	.LCFI20:
 819              		.cfi_def_cfa_offset 4
 820              		.cfi_offset 14, -4
 821 0002 89B0     		sub	sp, sp, #36
 822              	.LCFI21:
 823              		.cfi_def_cfa_offset 40
 470:Src/main.c    ****   htim13.Init.Prescaler = 0;
 824              		.loc 1 470 0
 825 0004 1748     		ldr	r0, .L82
 826 0006 184B     		ldr	r3, .L82+4
 827 0008 0360     		str	r3, [r0]
 471:Src/main.c    ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 828              		.loc 1 471 0
 829 000a 0023     		movs	r3, #0
 830 000c 4360     		str	r3, [r0, #4]
 472:Src/main.c    ****   htim13.Init.Period = 0;
 831              		.loc 1 472 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 28


 832 000e 8360     		str	r3, [r0, #8]
 473:Src/main.c    ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 833              		.loc 1 473 0
 834 0010 C360     		str	r3, [r0, #12]
 474:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 835              		.loc 1 474 0
 836 0012 0361     		str	r3, [r0, #16]
 475:Src/main.c    ****   {
 837              		.loc 1 475 0
 838 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 839              	.LVL48:
 840 0018 A0B9     		cbnz	r0, .L79
 480:Src/main.c    ****   {
 841              		.loc 1 480 0
 842 001a 1248     		ldr	r0, .L82
 843 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 844              	.LVL49:
 845 0020 A8B9     		cbnz	r0, .L80
 485:Src/main.c    ****   sConfigOC.Pulse = 0;
 846              		.loc 1 485 0
 847 0022 6023     		movs	r3, #96
 848 0024 0193     		str	r3, [sp, #4]
 486:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 849              		.loc 1 486 0
 850 0026 0022     		movs	r2, #0
 851 0028 0292     		str	r2, [sp, #8]
 487:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 852              		.loc 1 487 0
 853 002a 0392     		str	r2, [sp, #12]
 488:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 854              		.loc 1 488 0
 855 002c 0592     		str	r2, [sp, #20]
 489:Src/main.c    ****   {
 856              		.loc 1 489 0
 857 002e 01A9     		add	r1, sp, #4
 858 0030 0C48     		ldr	r0, .L82
 859 0032 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 860              	.LVL50:
 861 0036 78B9     		cbnz	r0, .L81
 494:Src/main.c    **** 
 862              		.loc 1 494 0
 863 0038 0A48     		ldr	r0, .L82
 864 003a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 865              	.LVL51:
 496:Src/main.c    **** 
 866              		.loc 1 496 0
 867 003e 09B0     		add	sp, sp, #36
 868              	.LCFI22:
 869              		.cfi_remember_state
 870              		.cfi_def_cfa_offset 4
 871              		@ sp needed
 872 0040 5DF804FB 		ldr	pc, [sp], #4
 873              	.L79:
 874              	.LCFI23:
 875              		.cfi_restore_state
 477:Src/main.c    ****   }
 876              		.loc 1 477 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 29


 877 0044 40F2DD11 		movw	r1, #477
 878 0048 0848     		ldr	r0, .L82+8
 879 004a FFF7FEFF 		bl	_Error_Handler
 880              	.LVL52:
 881              	.L80:
 482:Src/main.c    ****   }
 882              		.loc 1 482 0
 883 004e 4FF4F171 		mov	r1, #482
 884 0052 0648     		ldr	r0, .L82+8
 885 0054 FFF7FEFF 		bl	_Error_Handler
 886              	.LVL53:
 887              	.L81:
 491:Src/main.c    ****   }
 888              		.loc 1 491 0
 889 0058 40F2EB11 		movw	r1, #491
 890 005c 0348     		ldr	r0, .L82+8
 891 005e FFF7FEFF 		bl	_Error_Handler
 892              	.LVL54:
 893              	.L83:
 894 0062 00BF     		.align	2
 895              	.L82:
 896 0064 00000000 		.word	htim13
 897 0068 001C0040 		.word	1073748992
 898 006c 00000000 		.word	.LC2
 899              		.cfi_endproc
 900              	.LFE138:
 902              		.section	.text.MX_TIM14_Init,"ax",%progbits
 903              		.align	1
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 907              		.fpu fpv4-sp-d16
 909              	MX_TIM14_Init:
 910              	.LFB139:
 500:Src/main.c    **** 
 911              		.loc 1 500 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 32
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915 0000 00B5     		push	{lr}
 916              	.LCFI24:
 917              		.cfi_def_cfa_offset 4
 918              		.cfi_offset 14, -4
 919 0002 89B0     		sub	sp, sp, #36
 920              	.LCFI25:
 921              		.cfi_def_cfa_offset 40
 504:Src/main.c    ****   htim14.Init.Prescaler = 0;
 922              		.loc 1 504 0
 923 0004 1748     		ldr	r0, .L92
 924 0006 184B     		ldr	r3, .L92+4
 925 0008 0360     		str	r3, [r0]
 505:Src/main.c    ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 926              		.loc 1 505 0
 927 000a 0023     		movs	r3, #0
 928 000c 4360     		str	r3, [r0, #4]
 506:Src/main.c    ****   htim14.Init.Period = 0;
 929              		.loc 1 506 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 30


 930 000e 8360     		str	r3, [r0, #8]
 507:Src/main.c    ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 931              		.loc 1 507 0
 932 0010 C360     		str	r3, [r0, #12]
 508:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 933              		.loc 1 508 0
 934 0012 0361     		str	r3, [r0, #16]
 509:Src/main.c    ****   {
 935              		.loc 1 509 0
 936 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 937              	.LVL55:
 938 0018 A0B9     		cbnz	r0, .L89
 514:Src/main.c    ****   {
 939              		.loc 1 514 0
 940 001a 1248     		ldr	r0, .L92
 941 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 942              	.LVL56:
 943 0020 A8B9     		cbnz	r0, .L90
 519:Src/main.c    ****   sConfigOC.Pulse = 0;
 944              		.loc 1 519 0
 945 0022 6023     		movs	r3, #96
 946 0024 0193     		str	r3, [sp, #4]
 520:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 947              		.loc 1 520 0
 948 0026 0022     		movs	r2, #0
 949 0028 0292     		str	r2, [sp, #8]
 521:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 950              		.loc 1 521 0
 951 002a 0392     		str	r2, [sp, #12]
 522:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 952              		.loc 1 522 0
 953 002c 0592     		str	r2, [sp, #20]
 523:Src/main.c    ****   {
 954              		.loc 1 523 0
 955 002e 01A9     		add	r1, sp, #4
 956 0030 0C48     		ldr	r0, .L92
 957 0032 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 958              	.LVL57:
 959 0036 78B9     		cbnz	r0, .L91
 528:Src/main.c    **** 
 960              		.loc 1 528 0
 961 0038 0A48     		ldr	r0, .L92
 962 003a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 963              	.LVL58:
 530:Src/main.c    **** 
 964              		.loc 1 530 0
 965 003e 09B0     		add	sp, sp, #36
 966              	.LCFI26:
 967              		.cfi_remember_state
 968              		.cfi_def_cfa_offset 4
 969              		@ sp needed
 970 0040 5DF804FB 		ldr	pc, [sp], #4
 971              	.L89:
 972              	.LCFI27:
 973              		.cfi_restore_state
 511:Src/main.c    ****   }
 974              		.loc 1 511 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 31


 975 0044 40F2FF11 		movw	r1, #511
 976 0048 0848     		ldr	r0, .L92+8
 977 004a FFF7FEFF 		bl	_Error_Handler
 978              	.LVL59:
 979              	.L90:
 516:Src/main.c    ****   }
 980              		.loc 1 516 0
 981 004e 4FF40171 		mov	r1, #516
 982 0052 0648     		ldr	r0, .L92+8
 983 0054 FFF7FEFF 		bl	_Error_Handler
 984              	.LVL60:
 985              	.L91:
 525:Src/main.c    ****   }
 986              		.loc 1 525 0
 987 0058 40F20D21 		movw	r1, #525
 988 005c 0348     		ldr	r0, .L92+8
 989 005e FFF7FEFF 		bl	_Error_Handler
 990              	.LVL61:
 991              	.L93:
 992 0062 00BF     		.align	2
 993              	.L92:
 994 0064 00000000 		.word	htim14
 995 0068 00200040 		.word	1073750016
 996 006c 00000000 		.word	.LC2
 997              		.cfi_endproc
 998              	.LFE139:
 1000              		.section	.text.MX_I2C3_Init,"ax",%progbits
 1001              		.align	1
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
 1005              		.fpu fpv4-sp-d16
 1007              	MX_I2C3_Init:
 1008              	.LFB133:
 292:Src/main.c    **** 
 1009              		.loc 1 292 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013 0000 08B5     		push	{r3, lr}
 1014              	.LCFI28:
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 3, -8
 1017              		.cfi_offset 14, -4
 294:Src/main.c    ****   hi2c3.Init.ClockSpeed = 100000;
 1018              		.loc 1 294 0
 1019 0002 0C48     		ldr	r0, .L98
 1020 0004 0C4B     		ldr	r3, .L98+4
 1021 0006 0360     		str	r3, [r0]
 295:Src/main.c    ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1022              		.loc 1 295 0
 1023 0008 0C4B     		ldr	r3, .L98+8
 1024 000a 4360     		str	r3, [r0, #4]
 296:Src/main.c    ****   hi2c3.Init.OwnAddress1 = 0;
 1025              		.loc 1 296 0
 1026 000c 0023     		movs	r3, #0
 1027 000e 8360     		str	r3, [r0, #8]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 32


 297:Src/main.c    ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1028              		.loc 1 297 0
 1029 0010 C360     		str	r3, [r0, #12]
 298:Src/main.c    ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1030              		.loc 1 298 0
 1031 0012 4FF48042 		mov	r2, #16384
 1032 0016 0261     		str	r2, [r0, #16]
 299:Src/main.c    ****   hi2c3.Init.OwnAddress2 = 0;
 1033              		.loc 1 299 0
 1034 0018 4361     		str	r3, [r0, #20]
 300:Src/main.c    ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1035              		.loc 1 300 0
 1036 001a 8361     		str	r3, [r0, #24]
 301:Src/main.c    ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1037              		.loc 1 301 0
 1038 001c C361     		str	r3, [r0, #28]
 302:Src/main.c    ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 1039              		.loc 1 302 0
 1040 001e 0362     		str	r3, [r0, #32]
 303:Src/main.c    ****   {
 1041              		.loc 1 303 0
 1042 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1043              	.LVL62:
 1044 0024 00B9     		cbnz	r0, .L97
 1045 0026 08BD     		pop	{r3, pc}
 1046              	.L97:
 305:Src/main.c    ****   }
 1047              		.loc 1 305 0
 1048 0028 40F23111 		movw	r1, #305
 1049 002c 0448     		ldr	r0, .L98+12
 1050 002e FFF7FEFF 		bl	_Error_Handler
 1051              	.LVL63:
 1052              	.L99:
 1053 0032 00BF     		.align	2
 1054              	.L98:
 1055 0034 00000000 		.word	hi2c3
 1056 0038 005C0040 		.word	1073765376
 1057 003c A0860100 		.word	100000
 1058 0040 00000000 		.word	.LC2
 1059              		.cfi_endproc
 1060              	.LFE133:
 1062              		.section	.text.SystemClock_Config,"ax",%progbits
 1063              		.align	1
 1064              		.global	SystemClock_Config
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1068              		.fpu fpv4-sp-d16
 1070              	SystemClock_Config:
 1071              	.LFB130:
 195:Src/main.c    **** 
 1072              		.loc 1 195 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 80
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076 0000 00B5     		push	{lr}
 1077              	.LCFI29:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 33


 1078              		.cfi_def_cfa_offset 4
 1079              		.cfi_offset 14, -4
 1080 0002 95B0     		sub	sp, sp, #84
 1081              	.LCFI30:
 1082              		.cfi_def_cfa_offset 88
 1083              	.LBB7:
 202:Src/main.c    **** 
 1084              		.loc 1 202 0
 1085 0004 0021     		movs	r1, #0
 1086 0006 0191     		str	r1, [sp, #4]
 1087 0008 294B     		ldr	r3, .L106
 1088 000a 1A6C     		ldr	r2, [r3, #64]
 1089 000c 42F08052 		orr	r2, r2, #268435456
 1090 0010 1A64     		str	r2, [r3, #64]
 1091 0012 1B6C     		ldr	r3, [r3, #64]
 1092 0014 03F08053 		and	r3, r3, #268435456
 1093 0018 0193     		str	r3, [sp, #4]
 1094 001a 019B     		ldr	r3, [sp, #4]
 1095              	.LBE7:
 1096              	.LBB8:
 204:Src/main.c    **** 
 1097              		.loc 1 204 0
 1098 001c 0291     		str	r1, [sp, #8]
 1099 001e 254B     		ldr	r3, .L106+4
 1100 0020 1A68     		ldr	r2, [r3]
 1101 0022 42F48042 		orr	r2, r2, #16384
 1102 0026 1A60     		str	r2, [r3]
 1103 0028 1B68     		ldr	r3, [r3]
 1104 002a 03F48043 		and	r3, r3, #16384
 1105 002e 0293     		str	r3, [sp, #8]
 1106 0030 029B     		ldr	r3, [sp, #8]
 1107              	.LBE8:
 208:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1108              		.loc 1 208 0
 1109 0032 0123     		movs	r3, #1
 1110 0034 0893     		str	r3, [sp, #32]
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1111              		.loc 1 209 0
 1112 0036 4FF48033 		mov	r3, #65536
 1113 003a 0993     		str	r3, [sp, #36]
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1114              		.loc 1 210 0
 1115 003c 0223     		movs	r3, #2
 1116 003e 0E93     		str	r3, [sp, #56]
 211:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1117              		.loc 1 211 0
 1118 0040 4FF48002 		mov	r2, #4194304
 1119 0044 0F92     		str	r2, [sp, #60]
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 1120              		.loc 1 212 0
 1121 0046 0822     		movs	r2, #8
 1122 0048 1092     		str	r2, [sp, #64]
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1123              		.loc 1 213 0
 1124 004a 4822     		movs	r2, #72
 1125 004c 1192     		str	r2, [sp, #68]
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 3;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 34


 1126              		.loc 1 214 0
 1127 004e 1293     		str	r3, [sp, #72]
 215:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1128              		.loc 1 215 0
 1129 0050 0323     		movs	r3, #3
 1130 0052 1393     		str	r3, [sp, #76]
 216:Src/main.c    ****   {
 1131              		.loc 1 216 0
 1132 0054 08A8     		add	r0, sp, #32
 1133 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1134              	.LVL64:
 1135 005a 08BB     		cbnz	r0, .L104
 223:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1136              		.loc 1 223 0
 1137 005c 0F23     		movs	r3, #15
 1138 005e 0393     		str	r3, [sp, #12]
 225:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1139              		.loc 1 225 0
 1140 0060 0221     		movs	r1, #2
 1141 0062 0491     		str	r1, [sp, #16]
 226:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1142              		.loc 1 226 0
 1143 0064 0023     		movs	r3, #0
 1144 0066 0593     		str	r3, [sp, #20]
 227:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1145              		.loc 1 227 0
 1146 0068 4FF48052 		mov	r2, #4096
 1147 006c 0692     		str	r2, [sp, #24]
 228:Src/main.c    **** 
 1148              		.loc 1 228 0
 1149 006e 0793     		str	r3, [sp, #28]
 230:Src/main.c    ****   {
 1150              		.loc 1 230 0
 1151 0070 03A8     		add	r0, sp, #12
 1152 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1153              	.LVL65:
 1154 0076 B8B9     		cbnz	r0, .L105
 237:Src/main.c    **** 
 1155              		.loc 1 237 0
 1156 0078 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1157              	.LVL66:
 1158 007c 0E4B     		ldr	r3, .L106+8
 1159 007e A3FB0030 		umull	r3, r0, r3, r0
 1160 0082 8009     		lsrs	r0, r0, #6
 1161 0084 FFF7FEFF 		bl	HAL_SYSTICK_Config
 1162              	.LVL67:
 241:Src/main.c    **** 
 1163              		.loc 1 241 0
 1164 0088 0420     		movs	r0, #4
 1165 008a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 1166              	.LVL68:
 244:Src/main.c    **** }
 1167              		.loc 1 244 0
 1168 008e 0022     		movs	r2, #0
 1169 0090 0F21     		movs	r1, #15
 1170 0092 4FF0FF30 		mov	r0, #-1
 1171 0096 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 35


 1172              	.LVL69:
 245:Src/main.c    **** 
 1173              		.loc 1 245 0
 1174 009a 15B0     		add	sp, sp, #84
 1175              	.LCFI31:
 1176              		.cfi_remember_state
 1177              		.cfi_def_cfa_offset 4
 1178              		@ sp needed
 1179 009c 5DF804FB 		ldr	pc, [sp], #4
 1180              	.L104:
 1181              	.LCFI32:
 1182              		.cfi_restore_state
 218:Src/main.c    ****   }
 1183              		.loc 1 218 0
 1184 00a0 DA21     		movs	r1, #218
 1185 00a2 0648     		ldr	r0, .L106+12
 1186 00a4 FFF7FEFF 		bl	_Error_Handler
 1187              	.LVL70:
 1188              	.L105:
 232:Src/main.c    ****   }
 1189              		.loc 1 232 0
 1190 00a8 E821     		movs	r1, #232
 1191 00aa 0448     		ldr	r0, .L106+12
 1192 00ac FFF7FEFF 		bl	_Error_Handler
 1193              	.LVL71:
 1194              	.L107:
 1195              		.align	2
 1196              	.L106:
 1197 00b0 00380240 		.word	1073887232
 1198 00b4 00700040 		.word	1073770496
 1199 00b8 D34D6210 		.word	274877907
 1200 00bc 00000000 		.word	.LC2
 1201              		.cfi_endproc
 1202              	.LFE130:
 1204              		.section	.text.main,"ax",%progbits
 1205              		.align	1
 1206              		.global	main
 1207              		.syntax unified
 1208              		.thumb
 1209              		.thumb_func
 1210              		.fpu fpv4-sp-d16
 1212              	main:
 1213              	.LFB129:
 110:Src/main.c    **** 
 1214              		.loc 1 110 0
 1215              		.cfi_startproc
 1216              		@ Volatile: function does not return.
 1217              		@ args = 0, pretend = 0, frame = 24
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219 0000 00B5     		push	{lr}
 1220              	.LCFI33:
 1221              		.cfi_def_cfa_offset 4
 1222              		.cfi_offset 14, -4
 1223 0002 87B0     		sub	sp, sp, #28
 1224              	.LCFI34:
 1225              		.cfi_def_cfa_offset 32
 119:Src/main.c    **** 
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 36


 1226              		.loc 1 119 0
 1227 0004 FFF7FEFF 		bl	HAL_Init
 1228              	.LVL72:
 126:Src/main.c    **** 
 1229              		.loc 1 126 0
 1230 0008 FFF7FEFF 		bl	SystemClock_Config
 1231              	.LVL73:
 133:Src/main.c    ****   MX_CAN1_Init();
 1232              		.loc 1 133 0
 1233 000c FFF7FEFF 		bl	MX_GPIO_Init
 1234              	.LVL74:
 134:Src/main.c    ****   MX_I2C1_Init();
 1235              		.loc 1 134 0
 1236 0010 FFF7FEFF 		bl	MX_CAN1_Init
 1237              	.LVL75:
 135:Src/main.c    ****   MX_SDIO_SD_Init();
 1238              		.loc 1 135 0
 1239 0014 FFF7FEFF 		bl	MX_I2C1_Init
 1240              	.LVL76:
 136:Src/main.c    ****   MX_TIM2_Init();
 1241              		.loc 1 136 0
 1242 0018 FFF7FEFF 		bl	MX_SDIO_SD_Init
 1243              	.LVL77:
 137:Src/main.c    ****   MX_TIM3_Init();
 1244              		.loc 1 137 0
 1245 001c FFF7FEFF 		bl	MX_TIM2_Init
 1246              	.LVL78:
 138:Src/main.c    ****   MX_TIM5_Init();
 1247              		.loc 1 138 0
 1248 0020 FFF7FEFF 		bl	MX_TIM3_Init
 1249              	.LVL79:
 139:Src/main.c    ****   MX_TIM13_Init();
 1250              		.loc 1 139 0
 1251 0024 FFF7FEFF 		bl	MX_TIM5_Init
 1252              	.LVL80:
 140:Src/main.c    ****   MX_TIM14_Init();
 1253              		.loc 1 140 0
 1254 0028 FFF7FEFF 		bl	MX_TIM13_Init
 1255              	.LVL81:
 141:Src/main.c    ****   MX_I2C3_Init();
 1256              		.loc 1 141 0
 1257 002c FFF7FEFF 		bl	MX_TIM14_Init
 1258              	.LVL82:
 142:Src/main.c    **** 
 1259              		.loc 1 142 0
 1260 0030 FFF7FEFF 		bl	MX_I2C3_Init
 1261              	.LVL83:
 145:Src/main.c    ****   /* USER CODE END 2 */
 1262              		.loc 1 145 0
 1263 0034 FFF7FEFF 		bl	riptideMain
 1264              	.LVL84:
 162:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 1265              		.loc 1 162 0
 1266 0038 01AC     		add	r4, sp, #4
 1267 003a 074D     		ldr	r5, .L111
 1268 003c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1269 003e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 37


 1270 0040 2B68     		ldr	r3, [r5]
 1271 0042 2360     		str	r3, [r4]
 163:Src/main.c    **** 
 1272              		.loc 1 163 0
 1273 0044 0021     		movs	r1, #0
 1274 0046 01A8     		add	r0, sp, #4
 1275 0048 FFF7FEFF 		bl	osThreadCreate
 1276              	.LVL85:
 1277 004c 034B     		ldr	r3, .L111+4
 1278 004e 1860     		str	r0, [r3]
 175:Src/main.c    ****   
 1279              		.loc 1 175 0
 1280 0050 FFF7FEFF 		bl	osKernelStart
 1281              	.LVL86:
 1282              	.L109:
 1283 0054 FEE7     		b	.L109
 1284              	.L112:
 1285 0056 00BF     		.align	2
 1286              	.L111:
 1287 0058 00000000 		.word	.LANCHOR0
 1288 005c 00000000 		.word	defaultTaskHandle
 1289              		.cfi_endproc
 1290              	.LFE129:
 1292              		.comm	defaultTaskHandle,4,4
 1293              		.comm	htim14,60,4
 1294              		.comm	htim13,60,4
 1295              		.comm	htim5,60,4
 1296              		.comm	htim3,60,4
 1297              		.comm	htim2,60,4
 1298              		.comm	hsd,132,4
 1299              		.comm	hi2c3,84,4
 1300              		.comm	hi2c1,84,4
 1301              		.comm	hcan1,68,4
 1302              		.section	.rodata
 1303              		.align	2
 1304              		.set	.LANCHOR0,. + 0
 1305              	.LC3:
 1306 0000 00000000 		.word	.LC0
 1307 0004 00000000 		.word	StartDefaultTask
 1308 0008 0000     		.short	0
 1309 000a 0000     		.space	2
 1310 000c 00000000 		.word	0
 1311 0010 80000000 		.word	128
 1312              		.section	.rodata.MX_CAN1_Init.str1.4,"aMS",%progbits,1
 1313              		.align	2
 1314              	.LC2:
 1315 0000 5372632F 		.ascii	"Src/main.c\000"
 1315      6D61696E 
 1315      2E6300
 1316              		.section	.rodata.str1.4,"aMS",%progbits,1
 1317              		.align	2
 1318              	.LC0:
 1319 0000 64656661 		.ascii	"defaultTask\000"
 1319      756C7454 
 1319      61736B00 
 1320              		.text
 1321              	.Letext0:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 38


 1322              		.file 2 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 1323              		.file 3 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 1324              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1325              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1326              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1327              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1328              		.file 8 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 1329              		.file 9 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 1330              		.file 10 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-u
 1331              		.file 11 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-u
 1332              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1333              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1334              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1335              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1336              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1337              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1338              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1339              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 1340              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 1341              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1342              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1343              		.file 23 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1344              		.file 24 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1345              		.file 25 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-u
 1346              		.file 26 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1347              		.file 27 "Inc/usb_device.h"
 1348              		.file 28 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1349              		.file 29 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1350              		.file 30 "riptideSTM/Inc/riptideMain.h"
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:18     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:140    .text.MX_GPIO_Init:00000000000000a4 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:146    .text.StartDefaultTask:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:153    .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:179    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:186    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:216    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:221    .text._Error_Handler:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:228    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:243    .text.MX_CAN1_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:249    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:303    .text.MX_CAN1_Init:0000000000000034 $d
                            *COM*:0000000000000044 hcan1
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:310    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:316    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:364    .text.MX_I2C1_Init:0000000000000034 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:372    .text.MX_SDIO_SD_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:378    .text.MX_SDIO_SD_Init:0000000000000000 MX_SDIO_SD_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:420    .text.MX_SDIO_SD_Init:0000000000000028 $d
                            *COM*:0000000000000084 hsd
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:427    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:433    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:538    .text.MX_TIM2_Init:0000000000000084 $d
                            *COM*:000000000000003c htim2
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:544    .text.MX_TIM3_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:550    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:655    .text.MX_TIM3_Init:0000000000000084 $d
                            *COM*:000000000000003c htim3
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:662    .text.MX_TIM5_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:668    .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:798    .text.MX_TIM5_Init:00000000000000b0 $d
                            *COM*:000000000000003c htim5
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:805    .text.MX_TIM13_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:811    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:896    .text.MX_TIM13_Init:0000000000000064 $d
                            *COM*:000000000000003c htim13
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:903    .text.MX_TIM14_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:909    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:994    .text.MX_TIM14_Init:0000000000000064 $d
                            *COM*:000000000000003c htim14
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1001   .text.MX_I2C3_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1007   .text.MX_I2C3_Init:0000000000000000 MX_I2C3_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1055   .text.MX_I2C3_Init:0000000000000034 $d
                            *COM*:0000000000000054 hi2c3
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1063   .text.SystemClock_Config:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1070   .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1197   .text.SystemClock_Config:00000000000000b0 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1205   .text.main:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1212   .text.main:0000000000000000 main
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1287   .text.main:0000000000000058 $d
                            *COM*:0000000000000004 defaultTaskHandle
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1303   .rodata:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1313   .rodata.MX_CAN1_Init.str1.4:0000000000000000 $d
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s 			page 40


/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccT4gBjr.s:1317   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
MX_USB_DEVICE_Init
osDelay
HAL_IncTick
HAL_CAN_Init
HAL_I2C_Init
HAL_SD_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_TIM_Base_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
riptideMain
osThreadCreate
osKernelStart
