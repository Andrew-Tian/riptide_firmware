ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB131:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 2


  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f4xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** #include "usb_device.h"
  53:Src/main.c    **** #include "usbd_cdc_if.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN Includes */
  56:Src/main.c    **** #include "riptideMain.h"
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END Includes */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  61:Src/main.c    **** osThreadId defaultTaskHandle;
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN PV */
  64:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PV */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  69:Src/main.c    **** void SystemClock_Config(void);
  70:Src/main.c    **** static void MX_GPIO_Init(void);
  71:Src/main.c    **** void StartDefaultTask(void const * argument);
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE BEGIN PFP */
  74:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE BEGIN 0 */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END 0 */
  81:Src/main.c    **** 
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN 1 */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END 1 */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  92:Src/main.c    ****   HAL_Init();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN Init */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END Init */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Configure the system clock */
  99:Src/main.c    ****   SystemClock_Config();
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END SysInit */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Initialize all configured peripherals */
 106:Src/main.c    ****   MX_GPIO_Init();
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE BEGIN 2 */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE END 2 */
 111:Src/main.c    ****     riptideMain();
 112:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 113:Src/main.c    ****   /* add mutexes, ... */
 114:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 117:Src/main.c    ****   /* add semaphores, ... */
 118:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 121:Src/main.c    ****   /* start timers, add new ones, ... */
 122:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* Create the thread(s) */
 125:Src/main.c    ****   /* definition and creation of defaultTask */
 126:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 127:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 130:Src/main.c    ****     //riptideMain();
 131:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 136:Src/main.c    ****  
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* Start scheduler */
 139:Src/main.c    ****   osKernelStart();
 140:Src/main.c    ****   
 141:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 142:Src/main.c    **** 
 143:Src/main.c    ****   /* Infinite loop */
 144:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 145:Src/main.c    ****   while (1)
 146:Src/main.c    ****   {
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 4


 147:Src/main.c    ****   /* USER CODE END WHILE */
 148:Src/main.c    **** 
 149:Src/main.c    ****   /* USER CODE BEGIN 3 */
 150:Src/main.c    **** 
 151:Src/main.c    ****   }
 152:Src/main.c    ****   /* USER CODE END 3 */
 153:Src/main.c    **** 
 154:Src/main.c    **** }
 155:Src/main.c    **** 
 156:Src/main.c    **** /** System Clock Configuration
 157:Src/main.c    **** */
 158:Src/main.c    **** void SystemClock_Config(void)
 159:Src/main.c    **** {
 160:Src/main.c    **** 
 161:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 162:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 163:Src/main.c    **** 
 164:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 165:Src/main.c    ****     */
 166:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 167:Src/main.c    **** 
 168:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 169:Src/main.c    **** 
 170:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 171:Src/main.c    ****     */
 172:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 173:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 174:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 175:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 176:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 177:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 178:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 179:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 180:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 181:Src/main.c    ****   {
 182:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 183:Src/main.c    ****   }
 184:Src/main.c    **** 
 185:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 186:Src/main.c    ****     */
 187:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 188:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 189:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 190:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 191:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 192:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 193:Src/main.c    **** 
 194:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 195:Src/main.c    ****   {
 196:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 197:Src/main.c    ****   }
 198:Src/main.c    **** 
 199:Src/main.c    ****     /**Configure the Systick interrupt time 
 200:Src/main.c    ****     */
 201:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 202:Src/main.c    **** 
 203:Src/main.c    ****     /**Configure the Systick 
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 5


 204:Src/main.c    ****     */
 205:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 206:Src/main.c    **** 
 207:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 208:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 209:Src/main.c    **** }
 210:Src/main.c    **** 
 211:Src/main.c    **** /** Configure pins as 
 212:Src/main.c    ****         * Analog 
 213:Src/main.c    ****         * Input 
 214:Src/main.c    ****         * Output
 215:Src/main.c    ****         * EVENT_OUT
 216:Src/main.c    ****         * EXTI
 217:Src/main.c    **** */
 218:Src/main.c    **** static void MX_GPIO_Init(void)
 219:Src/main.c    **** {
  27              		.loc 1 219 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
  40              	.LBB2:
 220:Src/main.c    **** 
 221:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* GPIO Ports Clock Enable */
 224:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  41              		.loc 1 224 0
  42 0004 0024     		movs	r4, #0
  43 0006 0194     		str	r4, [sp, #4]
  44 0008 1C4B     		ldr	r3, .L3
  45 000a 1A6B     		ldr	r2, [r3, #48]
  46 000c 42F08002 		orr	r2, r2, #128
  47 0010 1A63     		str	r2, [r3, #48]
  48 0012 1A6B     		ldr	r2, [r3, #48]
  49 0014 02F08002 		and	r2, r2, #128
  50 0018 0192     		str	r2, [sp, #4]
  51 001a 019A     		ldr	r2, [sp, #4]
  52              	.LBE2:
  53              	.LBB3:
 225:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  54              		.loc 1 225 0
  55 001c 0294     		str	r4, [sp, #8]
  56 001e 1A6B     		ldr	r2, [r3, #48]
  57 0020 42F00202 		orr	r2, r2, #2
  58 0024 1A63     		str	r2, [r3, #48]
  59 0026 1A6B     		ldr	r2, [r3, #48]
  60 0028 02F00202 		and	r2, r2, #2
  61 002c 0292     		str	r2, [sp, #8]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 6


  62 002e 029A     		ldr	r2, [sp, #8]
  63              	.LBE3:
  64              	.LBB4:
 226:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  65              		.loc 1 226 0
  66 0030 0394     		str	r4, [sp, #12]
  67 0032 1A6B     		ldr	r2, [r3, #48]
  68 0034 42F00402 		orr	r2, r2, #4
  69 0038 1A63     		str	r2, [r3, #48]
  70 003a 1A6B     		ldr	r2, [r3, #48]
  71 003c 02F00402 		and	r2, r2, #4
  72 0040 0392     		str	r2, [sp, #12]
  73 0042 039A     		ldr	r2, [sp, #12]
  74              	.LBE4:
  75              	.LBB5:
 227:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  76              		.loc 1 227 0
  77 0044 0494     		str	r4, [sp, #16]
  78 0046 1A6B     		ldr	r2, [r3, #48]
  79 0048 42F00102 		orr	r2, r2, #1
  80 004c 1A63     		str	r2, [r3, #48]
  81 004e 1B6B     		ldr	r3, [r3, #48]
  82 0050 03F00103 		and	r3, r3, #1
  83 0054 0493     		str	r3, [sp, #16]
  84 0056 049B     		ldr	r3, [sp, #16]
  85              	.LBE5:
 228:Src/main.c    **** 
 229:Src/main.c    ****   /*Configure GPIO pin Output Level */
 230:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, HeartBeat1_Pin|HeartBeat2_Pin, GPIO_PIN_RESET);
  86              		.loc 1 230 0
  87 0058 094D     		ldr	r5, .L3+4
  88 005a 2246     		mov	r2, r4
  89 005c C021     		movs	r1, #192
  90 005e 2846     		mov	r0, r5
  91 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL0:
 231:Src/main.c    **** 
 232:Src/main.c    ****   /*Configure GPIO pins : HeartBeat1_Pin HeartBeat2_Pin */
 233:Src/main.c    ****   GPIO_InitStruct.Pin = HeartBeat1_Pin|HeartBeat2_Pin;
  93              		.loc 1 233 0
  94 0064 C023     		movs	r3, #192
  95 0066 0593     		str	r3, [sp, #20]
 234:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  96              		.loc 1 234 0
  97 0068 0123     		movs	r3, #1
  98 006a 0693     		str	r3, [sp, #24]
 235:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  99              		.loc 1 235 0
 100 006c 0794     		str	r4, [sp, #28]
 236:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 101              		.loc 1 236 0
 102 006e 0894     		str	r4, [sp, #32]
 237:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 103              		.loc 1 237 0
 104 0070 05A9     		add	r1, sp, #20
 105 0072 2846     		mov	r0, r5
 106 0074 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 7


 107              	.LVL1:
 238:Src/main.c    **** 
 239:Src/main.c    **** }
 108              		.loc 1 239 0
 109 0078 0BB0     		add	sp, sp, #44
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 007a 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115              		.align	2
 116              	.L3:
 117 007c 00380240 		.word	1073887232
 118 0080 00080240 		.word	1073874944
 119              		.cfi_endproc
 120              	.LFE131:
 122              		.section	.text.StartDefaultTask,"ax",%progbits
 123              		.align	1
 124              		.global	StartDefaultTask
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	StartDefaultTask:
 131              	.LFB132:
 240:Src/main.c    **** 
 241:Src/main.c    **** /* USER CODE BEGIN 4 */
 242:Src/main.c    **** 
 243:Src/main.c    **** /* USER CODE END 4 */
 244:Src/main.c    **** 
 245:Src/main.c    **** /* StartDefaultTask function */
 246:Src/main.c    **** void StartDefaultTask(void const * argument)
 247:Src/main.c    **** {
 132              		.loc 1 247 0
 133              		.cfi_startproc
 134              		@ Volatile: function does not return.
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              	.LVL2:
 138 0000 08B5     		push	{r3, lr}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 3, -8
 142              		.cfi_offset 14, -4
 248:Src/main.c    ****   /* init code for USB_DEVICE */
 249:Src/main.c    ****   MX_USB_DEVICE_Init();
 143              		.loc 1 249 0
 144 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 145              	.LVL3:
 146              	.L6:
 250:Src/main.c    **** 
 251:Src/main.c    **** 
 252:Src/main.c    ****   /* USER CODE BEGIN 5 */
 253:Src/main.c    ****   /* Infinite loop */
 254:Src/main.c    ****   for(;;) {
 255:Src/main.c    ****     //for the love of god leave the osDelay in
 256:Src/main.c    ****       osDelay(1);
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 8


 147              		.loc 1 256 0 discriminator 1
 148 0006 0120     		movs	r0, #1
 149 0008 FFF7FEFF 		bl	osDelay
 150              	.LVL4:
 151 000c FBE7     		b	.L6
 152              		.cfi_endproc
 153              	.LFE132:
 155              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 156              		.align	1
 157              		.global	HAL_TIM_PeriodElapsedCallback
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	HAL_TIM_PeriodElapsedCallback:
 164              	.LFB133:
 257:Src/main.c    **** 
 258:Src/main.c    ****   }
 259:Src/main.c    ****   /* USER CODE END 5 */ 
 260:Src/main.c    **** }
 261:Src/main.c    **** 
 262:Src/main.c    **** /**
 263:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 264:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 265:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 266:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 267:Src/main.c    ****   * @param  htim : TIM handle
 268:Src/main.c    ****   * @retval None
 269:Src/main.c    ****   */
 270:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 271:Src/main.c    **** {
 165              		.loc 1 271 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              	.LVL5:
 170 0000 08B5     		push	{r3, lr}
 171              	.LCFI4:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 3, -8
 174              		.cfi_offset 14, -4
 272:Src/main.c    **** /* USER CODE BEGIN Callback 0 */
 273:Src/main.c    **** 
 274:Src/main.c    **** /* USER CODE END Callback 0 */
 275:Src/main.c    ****   if (htim->Instance == TIM1) {
 175              		.loc 1 275 0
 176 0002 0268     		ldr	r2, [r0]
 177 0004 034B     		ldr	r3, .L12
 178 0006 9A42     		cmp	r2, r3
 179 0008 00D0     		beq	.L11
 180              	.LVL6:
 181              	.L8:
 182 000a 08BD     		pop	{r3, pc}
 183              	.LVL7:
 184              	.L11:
 276:Src/main.c    ****     HAL_IncTick();
 185              		.loc 1 276 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 9


 186 000c FFF7FEFF 		bl	HAL_IncTick
 187              	.LVL8:
 277:Src/main.c    ****   }
 278:Src/main.c    **** /* USER CODE BEGIN Callback 1 */
 279:Src/main.c    **** 
 280:Src/main.c    **** /* USER CODE END Callback 1 */
 281:Src/main.c    **** }
 188              		.loc 1 281 0
 189 0010 FBE7     		b	.L8
 190              	.L13:
 191 0012 00BF     		.align	2
 192              	.L12:
 193 0014 00000140 		.word	1073807360
 194              		.cfi_endproc
 195              	.LFE133:
 197              		.section	.text._Error_Handler,"ax",%progbits
 198              		.align	1
 199              		.global	_Error_Handler
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv4-sp-d16
 205              	_Error_Handler:
 206              	.LFB134:
 282:Src/main.c    **** 
 283:Src/main.c    **** /**
 284:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 285:Src/main.c    ****   * @param  None
 286:Src/main.c    ****   * @retval None
 287:Src/main.c    ****   */
 288:Src/main.c    **** void _Error_Handler(char * file, int line)
 289:Src/main.c    **** {
 207              		.loc 1 289 0
 208              		.cfi_startproc
 209              		@ Volatile: function does not return.
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213              	.LVL9:
 214              	.L15:
 215 0000 FEE7     		b	.L15
 216              		.cfi_endproc
 217              	.LFE134:
 219              		.section	.text.SystemClock_Config,"ax",%progbits
 220              		.align	1
 221              		.global	SystemClock_Config
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu fpv4-sp-d16
 227              	SystemClock_Config:
 228              	.LFB130:
 159:Src/main.c    **** 
 229              		.loc 1 159 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 80
 232              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 10


 159:Src/main.c    **** 
 233              		.loc 1 159 0
 234 0000 00B5     		push	{lr}
 235              	.LCFI5:
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 14, -4
 238 0002 95B0     		sub	sp, sp, #84
 239              	.LCFI6:
 240              		.cfi_def_cfa_offset 88
 241              	.LBB6:
 166:Src/main.c    **** 
 242              		.loc 1 166 0
 243 0004 0021     		movs	r1, #0
 244 0006 0191     		str	r1, [sp, #4]
 245 0008 294B     		ldr	r3, .L22
 246 000a 1A6C     		ldr	r2, [r3, #64]
 247 000c 42F08052 		orr	r2, r2, #268435456
 248 0010 1A64     		str	r2, [r3, #64]
 249 0012 1B6C     		ldr	r3, [r3, #64]
 250 0014 03F08053 		and	r3, r3, #268435456
 251 0018 0193     		str	r3, [sp, #4]
 252 001a 019B     		ldr	r3, [sp, #4]
 253              	.LBE6:
 254              	.LBB7:
 168:Src/main.c    **** 
 255              		.loc 1 168 0
 256 001c 0291     		str	r1, [sp, #8]
 257 001e 254B     		ldr	r3, .L22+4
 258 0020 1A68     		ldr	r2, [r3]
 259 0022 42F48042 		orr	r2, r2, #16384
 260 0026 1A60     		str	r2, [r3]
 261 0028 1B68     		ldr	r3, [r3]
 262 002a 03F48043 		and	r3, r3, #16384
 263 002e 0293     		str	r3, [sp, #8]
 264 0030 029B     		ldr	r3, [sp, #8]
 265              	.LBE7:
 172:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 266              		.loc 1 172 0
 267 0032 0123     		movs	r3, #1
 268 0034 0893     		str	r3, [sp, #32]
 173:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 269              		.loc 1 173 0
 270 0036 4FF48033 		mov	r3, #65536
 271 003a 0993     		str	r3, [sp, #36]
 174:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 272              		.loc 1 174 0
 273 003c 0223     		movs	r3, #2
 274 003e 0E93     		str	r3, [sp, #56]
 175:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 275              		.loc 1 175 0
 276 0040 4FF48002 		mov	r2, #4194304
 277 0044 0F92     		str	r2, [sp, #60]
 176:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 278              		.loc 1 176 0
 279 0046 0822     		movs	r2, #8
 280 0048 1092     		str	r2, [sp, #64]
 177:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 11


 281              		.loc 1 177 0
 282 004a 4822     		movs	r2, #72
 283 004c 1192     		str	r2, [sp, #68]
 178:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 284              		.loc 1 178 0
 285 004e 1293     		str	r3, [sp, #72]
 179:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 286              		.loc 1 179 0
 287 0050 0323     		movs	r3, #3
 288 0052 1393     		str	r3, [sp, #76]
 180:Src/main.c    ****   {
 289              		.loc 1 180 0
 290 0054 08A8     		add	r0, sp, #32
 291 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 292              	.LVL10:
 293 005a 08BB     		cbnz	r0, .L20
 187:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 294              		.loc 1 187 0
 295 005c 0F23     		movs	r3, #15
 296 005e 0393     		str	r3, [sp, #12]
 189:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 297              		.loc 1 189 0
 298 0060 0221     		movs	r1, #2
 299 0062 0491     		str	r1, [sp, #16]
 190:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 300              		.loc 1 190 0
 301 0064 0023     		movs	r3, #0
 302 0066 0593     		str	r3, [sp, #20]
 191:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 303              		.loc 1 191 0
 304 0068 4FF48052 		mov	r2, #4096
 305 006c 0692     		str	r2, [sp, #24]
 192:Src/main.c    **** 
 306              		.loc 1 192 0
 307 006e 0793     		str	r3, [sp, #28]
 194:Src/main.c    ****   {
 308              		.loc 1 194 0
 309 0070 03A8     		add	r0, sp, #12
 310 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 311              	.LVL11:
 312 0076 B8B9     		cbnz	r0, .L21
 201:Src/main.c    **** 
 313              		.loc 1 201 0
 314 0078 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 315              	.LVL12:
 316 007c 0E4B     		ldr	r3, .L22+8
 317 007e A3FB0030 		umull	r3, r0, r3, r0
 318 0082 8009     		lsrs	r0, r0, #6
 319 0084 FFF7FEFF 		bl	HAL_SYSTICK_Config
 320              	.LVL13:
 205:Src/main.c    **** 
 321              		.loc 1 205 0
 322 0088 0420     		movs	r0, #4
 323 008a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 324              	.LVL14:
 208:Src/main.c    **** }
 325              		.loc 1 208 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 12


 326 008e 0022     		movs	r2, #0
 327 0090 0F21     		movs	r1, #15
 328 0092 4FF0FF30 		mov	r0, #-1
 329 0096 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 330              	.LVL15:
 209:Src/main.c    **** 
 331              		.loc 1 209 0
 332 009a 15B0     		add	sp, sp, #84
 333              	.LCFI7:
 334              		.cfi_remember_state
 335              		.cfi_def_cfa_offset 4
 336              		@ sp needed
 337 009c 5DF804FB 		ldr	pc, [sp], #4
 338              	.L20:
 339              	.LCFI8:
 340              		.cfi_restore_state
 182:Src/main.c    ****   }
 341              		.loc 1 182 0
 342 00a0 B621     		movs	r1, #182
 343 00a2 0648     		ldr	r0, .L22+12
 344 00a4 FFF7FEFF 		bl	_Error_Handler
 345              	.LVL16:
 346              	.L21:
 196:Src/main.c    ****   }
 347              		.loc 1 196 0
 348 00a8 C421     		movs	r1, #196
 349 00aa 0448     		ldr	r0, .L22+12
 350 00ac FFF7FEFF 		bl	_Error_Handler
 351              	.LVL17:
 352              	.L23:
 353              		.align	2
 354              	.L22:
 355 00b0 00380240 		.word	1073887232
 356 00b4 00700040 		.word	1073770496
 357 00b8 D34D6210 		.word	274877907
 358 00bc 00000000 		.word	.LC2
 359              		.cfi_endproc
 360              	.LFE130:
 362              		.section	.text.main,"ax",%progbits
 363              		.align	1
 364              		.global	main
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	main:
 371              	.LFB129:
  83:Src/main.c    **** 
 372              		.loc 1 83 0
 373              		.cfi_startproc
 374              		@ Volatile: function does not return.
 375              		@ args = 0, pretend = 0, frame = 24
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377 0000 00B5     		push	{lr}
 378              	.LCFI9:
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 14, -4
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 13


 381 0002 87B0     		sub	sp, sp, #28
 382              	.LCFI10:
 383              		.cfi_def_cfa_offset 32
  92:Src/main.c    **** 
 384              		.loc 1 92 0
 385 0004 FFF7FEFF 		bl	HAL_Init
 386              	.LVL18:
  99:Src/main.c    **** 
 387              		.loc 1 99 0
 388 0008 FFF7FEFF 		bl	SystemClock_Config
 389              	.LVL19:
 106:Src/main.c    **** 
 390              		.loc 1 106 0
 391 000c FFF7FEFF 		bl	MX_GPIO_Init
 392              	.LVL20:
 111:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 393              		.loc 1 111 0
 394 0010 FFF7FEFF 		bl	riptideMain
 395              	.LVL21:
 126:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 396              		.loc 1 126 0
 397 0014 01AC     		add	r4, sp, #4
 398 0016 074D     		ldr	r5, .L27
 399 0018 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 400 001a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 401 001c 2B68     		ldr	r3, [r5]
 402 001e 2360     		str	r3, [r4]
 127:Src/main.c    **** 
 403              		.loc 1 127 0
 404 0020 0021     		movs	r1, #0
 405 0022 01A8     		add	r0, sp, #4
 406 0024 FFF7FEFF 		bl	osThreadCreate
 407              	.LVL22:
 408 0028 034B     		ldr	r3, .L27+4
 409 002a 1860     		str	r0, [r3]
 139:Src/main.c    ****   
 410              		.loc 1 139 0
 411 002c FFF7FEFF 		bl	osKernelStart
 412              	.LVL23:
 413              	.L25:
 414 0030 FEE7     		b	.L25
 415              	.L28:
 416 0032 00BF     		.align	2
 417              	.L27:
 418 0034 00000000 		.word	.LANCHOR0
 419 0038 00000000 		.word	defaultTaskHandle
 420              		.cfi_endproc
 421              	.LFE129:
 423              		.comm	defaultTaskHandle,4,4
 424              		.section	.rodata
 425              		.align	2
 426              		.set	.LANCHOR0,. + 0
 427              	.LC3:
 428 0000 00000000 		.word	.LC0
 429 0004 00000000 		.word	StartDefaultTask
 430 0008 0000     		.short	0
 431 000a 0000     		.space	2
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 14


 432 000c 00000000 		.word	0
 433 0010 80000000 		.word	128
 434              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 435              		.align	2
 436              	.LC2:
 437 0000 5372632F 		.ascii	"Src/main.c\000"
 437      6D61696E 
 437      2E6300
 438              		.section	.rodata.str1.4,"aMS",%progbits,1
 439              		.align	2
 440              	.LC0:
 441 0000 64656661 		.ascii	"defaultTask\000"
 441      756C7454 
 441      61736B00 
 442              		.text
 443              	.Letext0:
 444              		.file 2 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 445              		.file 3 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 446              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 447              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 448              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 449              		.file 7 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 450              		.file 8 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 451              		.file 9 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 452              		.file 10 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-u
 453              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 454              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 455              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 456              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 457              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 458              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 459              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 460              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 461              		.file 19 "/Users/augustmason/Documents/GitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-u
 462              		.file 20 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 463              		.file 21 "Inc/usb_device.h"
 464              		.file 22 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 465              		.file 23 "Inc/usbd_cdc_if.h"
 466              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 467              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 468              		.file 26 "riptideSTM/inc/riptideMain.h"
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:18     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:117    .text.MX_GPIO_Init:000000000000007c $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:123    .text.StartDefaultTask:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:130    .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:156    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:163    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:193    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:198    .text._Error_Handler:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:205    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:220    .text.SystemClock_Config:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:227    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:355    .text.SystemClock_Config:00000000000000b0 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:363    .text.main:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:370    .text.main:0000000000000000 main
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:418    .text.main:0000000000000034 $d
                            *COM*:0000000000000004 defaultTaskHandle
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:425    .rodata:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:435    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccVt9REa.s:439    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
MX_USB_DEVICE_Init
osDelay
HAL_IncTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
riptideMain
osThreadCreate
osKernelStart
