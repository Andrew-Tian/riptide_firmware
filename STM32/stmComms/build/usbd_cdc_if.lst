ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_cdc_if.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CDC_DeInit_HS,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	CDC_DeInit_HS:
  25              	.LFB130:
  26              		.file 1 "Src/usbd_cdc_if.c"
   1:Src/usbd_cdc_if.c **** /**
   2:Src/usbd_cdc_if.c ****   ******************************************************************************
   3:Src/usbd_cdc_if.c ****   * @file           : usbd_cdc_if.c
   4:Src/usbd_cdc_if.c ****   * @brief          :
   5:Src/usbd_cdc_if.c ****   ******************************************************************************
   6:Src/usbd_cdc_if.c ****   * This notice applies to any and all portions of this file
   7:Src/usbd_cdc_if.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/usbd_cdc_if.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/usbd_cdc_if.c ****   * inserted by the user or by software development tools
  10:Src/usbd_cdc_if.c ****   * are owned by their respective copyright owners.
  11:Src/usbd_cdc_if.c ****   *
  12:Src/usbd_cdc_if.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/usbd_cdc_if.c ****   * All rights reserved.
  14:Src/usbd_cdc_if.c ****   *
  15:Src/usbd_cdc_if.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/usbd_cdc_if.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/usbd_cdc_if.c ****   *
  18:Src/usbd_cdc_if.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/usbd_cdc_if.c ****   *    this list of conditions and the following disclaimer.
  20:Src/usbd_cdc_if.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/usbd_cdc_if.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/usbd_cdc_if.c ****   *    and/or other materials provided with the distribution.
  23:Src/usbd_cdc_if.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/usbd_cdc_if.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/usbd_cdc_if.c ****   *    derived from this software without specific written permission.
  26:Src/usbd_cdc_if.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/usbd_cdc_if.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/usbd_cdc_if.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/usbd_cdc_if.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/usbd_cdc_if.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/usbd_cdc_if.c ****   *    this license. 
  32:Src/usbd_cdc_if.c ****   *
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 2


  33:Src/usbd_cdc_if.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/usbd_cdc_if.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/usbd_cdc_if.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/usbd_cdc_if.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/usbd_cdc_if.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/usbd_cdc_if.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/usbd_cdc_if.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/usbd_cdc_if.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/usbd_cdc_if.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/usbd_cdc_if.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/usbd_cdc_if.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/usbd_cdc_if.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/usbd_cdc_if.c ****   *
  46:Src/usbd_cdc_if.c ****   ******************************************************************************
  47:Src/usbd_cdc_if.c **** */
  48:Src/usbd_cdc_if.c **** 
  49:Src/usbd_cdc_if.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/usbd_cdc_if.c **** #include "main.h"
  51:Src/usbd_cdc_if.c **** #include "stm32f4xx_hal.h"
  52:Src/usbd_cdc_if.c **** #include "cmsis_os.h"
  53:Src/usbd_cdc_if.c **** #include "usbd_cdc_if.h"
  54:Src/usbd_cdc_if.c **** #include <stdbool.h>
  55:Src/usbd_cdc_if.c **** #include "riptideFunctions.h"
  56:Src/usbd_cdc_if.c **** /* USER CODE BEGIN INCLUDE */
  57:Src/usbd_cdc_if.c **** /* USER CODE END INCLUDE */
  58:Src/usbd_cdc_if.c **** 
  59:Src/usbd_cdc_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  60:Src/usbd_cdc_if.c ****   * @{
  61:Src/usbd_cdc_if.c ****   */
  62:Src/usbd_cdc_if.c **** 
  63:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC 
  64:Src/usbd_cdc_if.c ****   * @brief usbd core module
  65:Src/usbd_cdc_if.c ****   * @{
  66:Src/usbd_cdc_if.c ****   */ 
  67:Src/usbd_cdc_if.c **** 
  68:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_TypesDefinitions
  69:Src/usbd_cdc_if.c ****   * @{
  70:Src/usbd_cdc_if.c ****   */ 
  71:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  72:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_TYPES */ 
  73:Src/usbd_cdc_if.c **** /**
  74:Src/usbd_cdc_if.c ****   * @}
  75:Src/usbd_cdc_if.c ****   */ 
  76:Src/usbd_cdc_if.c **** 
  77:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_Defines
  78:Src/usbd_cdc_if.c ****   * @{
  79:Src/usbd_cdc_if.c ****   */ 
  80:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  81:Src/usbd_cdc_if.c **** /* Define size for the receive and transmit buffer over CDC */
  82:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  83:Src/usbd_cdc_if.c **** #define APP_RX_DATA_SIZE  2048
  84:Src/usbd_cdc_if.c **** #define APP_TX_DATA_SIZE  2048
  85:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_DEFINES */
  86:Src/usbd_cdc_if.c **** /**
  87:Src/usbd_cdc_if.c ****   * @}
  88:Src/usbd_cdc_if.c ****   */ 
  89:Src/usbd_cdc_if.c **** 
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 3


  90:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_Macros
  91:Src/usbd_cdc_if.c ****   * @{
  92:Src/usbd_cdc_if.c ****   */ 
  93:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  94:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_MACRO */
  95:Src/usbd_cdc_if.c **** 
  96:Src/usbd_cdc_if.c **** /**
  97:Src/usbd_cdc_if.c ****   * @}
  98:Src/usbd_cdc_if.c ****   */ 
  99:Src/usbd_cdc_if.c ****   
 100:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_Variables
 101:Src/usbd_cdc_if.c ****   * @{
 102:Src/usbd_cdc_if.c ****   */
 103:Src/usbd_cdc_if.c **** 
 104:Src/usbd_cdc_if.c **** /* Create buffer for reception and transmission           */
 105:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
 106:Src/usbd_cdc_if.c **** /* Received Data over USB are stored in this buffer       */
 107:Src/usbd_cdc_if.c **** uint8_t UserRxBufferHS[APP_RX_DATA_SIZE];
 108:Src/usbd_cdc_if.c **** 
 109:Src/usbd_cdc_if.c **** /* Send Data over USB CDC are stored in this buffer       */
 110:Src/usbd_cdc_if.c **** uint8_t UserTxBufferHS[APP_TX_DATA_SIZE];
 111:Src/usbd_cdc_if.c **** 
 112:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 113:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 114:Src/usbd_cdc_if.c **** 
 115:Src/usbd_cdc_if.c **** /**
 116:Src/usbd_cdc_if.c ****   * @}
 117:Src/usbd_cdc_if.c ****   */ 
 118:Src/usbd_cdc_if.c ****   
 119:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Exported_Variables
 120:Src/usbd_cdc_if.c ****   * @{
 121:Src/usbd_cdc_if.c ****   */ 
 122:Src/usbd_cdc_if.c ****   extern USBD_HandleTypeDef hUsbDeviceHS;  
 123:Src/usbd_cdc_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 124:Src/usbd_cdc_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 125:Src/usbd_cdc_if.c **** 
 126:Src/usbd_cdc_if.c **** /**
 127:Src/usbd_cdc_if.c ****   * @}
 128:Src/usbd_cdc_if.c ****   */ 
 129:Src/usbd_cdc_if.c ****   
 130:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_FunctionPrototypes
 131:Src/usbd_cdc_if.c ****   * @{
 132:Src/usbd_cdc_if.c ****   */
 133:Src/usbd_cdc_if.c **** 
 134:Src/usbd_cdc_if.c **** static int8_t CDC_Init_HS     (void);
 135:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_HS   (void);
 136:Src/usbd_cdc_if.c **** static int8_t CDC_Control_HS  (uint8_t cmd, uint8_t* pbuf, uint16_t length);
 137:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_HS  (uint8_t* pbuf, uint32_t *Len);
 138:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 139:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 140:Src/usbd_cdc_if.c **** 
 141:Src/usbd_cdc_if.c **** /**
 142:Src/usbd_cdc_if.c ****   * @}
 143:Src/usbd_cdc_if.c ****   */ 
 144:Src/usbd_cdc_if.c ****   
 145:Src/usbd_cdc_if.c **** 
 146:Src/usbd_cdc_if.c **** USBD_CDC_ItfTypeDef USBD_Interface_fops_HS = 
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 4


 147:Src/usbd_cdc_if.c **** {
 148:Src/usbd_cdc_if.c ****   CDC_Init_HS,
 149:Src/usbd_cdc_if.c ****   CDC_DeInit_HS,
 150:Src/usbd_cdc_if.c ****   CDC_Control_HS,  
 151:Src/usbd_cdc_if.c ****   CDC_Receive_HS
 152:Src/usbd_cdc_if.c **** };
 153:Src/usbd_cdc_if.c **** 
 154:Src/usbd_cdc_if.c **** /* Private functions ---------------------------------------------------------*/
 155:Src/usbd_cdc_if.c **** 
 156:Src/usbd_cdc_if.c **** /**
 157:Src/usbd_cdc_if.c ****   * @brief  CDC_Init_HS
 158:Src/usbd_cdc_if.c ****   *         Initializes the CDC media low layer over the USB HS IP
 159:Src/usbd_cdc_if.c ****   * @param  None
 160:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 161:Src/usbd_cdc_if.c ****   */
 162:Src/usbd_cdc_if.c **** static int8_t CDC_Init_HS(void)
 163:Src/usbd_cdc_if.c **** { 
 164:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 8 */ 
 165:Src/usbd_cdc_if.c ****   /* Set Application Buffers */
 166:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceHS, UserTxBufferHS, 0);
 167:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceHS, UserRxBufferHS);
 168:Src/usbd_cdc_if.c ****   return (USBD_OK);
 169:Src/usbd_cdc_if.c ****   /* USER CODE END 8 */ 
 170:Src/usbd_cdc_if.c **** }
 171:Src/usbd_cdc_if.c **** 
 172:Src/usbd_cdc_if.c **** /**
 173:Src/usbd_cdc_if.c ****   * @brief  CDC_DeInit_HS
 174:Src/usbd_cdc_if.c ****   *         DeInitializes the CDC media low layer
 175:Src/usbd_cdc_if.c ****   * @param  None
 176:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 177:Src/usbd_cdc_if.c ****   */
 178:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_HS(void)
 179:Src/usbd_cdc_if.c **** {
  27              		.loc 1 179 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 180:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 9 */ 
 181:Src/usbd_cdc_if.c ****   return (USBD_OK);
 182:Src/usbd_cdc_if.c ****   /* USER CODE END 9 */ 
 183:Src/usbd_cdc_if.c **** }
  32              		.loc 1 183 0
  33 0000 0020     		movs	r0, #0
  34 0002 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE130:
  38              		.section	.text.CDC_Control_HS,"ax",%progbits
  39              		.align	1
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	CDC_Control_HS:
  46              	.LFB131:
 184:Src/usbd_cdc_if.c **** 
 185:Src/usbd_cdc_if.c **** /**
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 5


 186:Src/usbd_cdc_if.c ****   * @brief  CDC_Control_HS
 187:Src/usbd_cdc_if.c ****   *         Manage the CDC class requests
 188:Src/usbd_cdc_if.c ****   * @param  cmd: Command code            
 189:Src/usbd_cdc_if.c ****   * @param  pbuf: Buffer containing command data (request parameters)
 190:Src/usbd_cdc_if.c ****   * @param  length: Number of data to be sent (in bytes)
 191:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 192:Src/usbd_cdc_if.c ****   */
 193:Src/usbd_cdc_if.c **** static int8_t CDC_Control_HS  (uint8_t cmd, uint8_t* pbuf, uint16_t length)
 194:Src/usbd_cdc_if.c **** { 
  47              		.loc 1 194 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL0:
 195:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 10 */
 196:Src/usbd_cdc_if.c ****   switch (cmd)
 197:Src/usbd_cdc_if.c ****   {
 198:Src/usbd_cdc_if.c ****   case CDC_SEND_ENCAPSULATED_COMMAND:
 199:Src/usbd_cdc_if.c ****  
 200:Src/usbd_cdc_if.c ****     break;
 201:Src/usbd_cdc_if.c **** 
 202:Src/usbd_cdc_if.c ****   case CDC_GET_ENCAPSULATED_RESPONSE:
 203:Src/usbd_cdc_if.c ****  
 204:Src/usbd_cdc_if.c ****     break;
 205:Src/usbd_cdc_if.c **** 
 206:Src/usbd_cdc_if.c ****   case CDC_SET_COMM_FEATURE:
 207:Src/usbd_cdc_if.c ****  
 208:Src/usbd_cdc_if.c ****     break;
 209:Src/usbd_cdc_if.c **** 
 210:Src/usbd_cdc_if.c ****   case CDC_GET_COMM_FEATURE:
 211:Src/usbd_cdc_if.c **** 
 212:Src/usbd_cdc_if.c ****     break;
 213:Src/usbd_cdc_if.c **** 
 214:Src/usbd_cdc_if.c ****   case CDC_CLEAR_COMM_FEATURE:
 215:Src/usbd_cdc_if.c **** 
 216:Src/usbd_cdc_if.c ****     break;
 217:Src/usbd_cdc_if.c **** 
 218:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 219:Src/usbd_cdc_if.c ****   /* Line Coding Structure                                                       */
 220:Src/usbd_cdc_if.c ****   /*-----------------------------------------------------------------------------*/
 221:Src/usbd_cdc_if.c ****   /* Offset | Field       | Size | Value  | Description                          */
 222:Src/usbd_cdc_if.c ****   /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
 223:Src/usbd_cdc_if.c ****   /* 4      | bCharFormat |   1  | Number | Stop bits                            */
 224:Src/usbd_cdc_if.c ****   /*                                        0 - 1 Stop bit                       */
 225:Src/usbd_cdc_if.c ****   /*                                        1 - 1.5 Stop bits                    */
 226:Src/usbd_cdc_if.c ****   /*                                        2 - 2 Stop bits                      */
 227:Src/usbd_cdc_if.c ****   /* 5      | bParityType |  1   | Number | Parity                               */
 228:Src/usbd_cdc_if.c ****   /*                                        0 - None                             */
 229:Src/usbd_cdc_if.c ****   /*                                        1 - Odd                              */ 
 230:Src/usbd_cdc_if.c ****   /*                                        2 - Even                             */
 231:Src/usbd_cdc_if.c ****   /*                                        3 - Mark                             */
 232:Src/usbd_cdc_if.c ****   /*                                        4 - Space                            */
 233:Src/usbd_cdc_if.c ****   /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
 234:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 235:Src/usbd_cdc_if.c ****   case CDC_SET_LINE_CODING:   
 236:Src/usbd_cdc_if.c **** 	
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 6


 237:Src/usbd_cdc_if.c ****     break;
 238:Src/usbd_cdc_if.c **** 
 239:Src/usbd_cdc_if.c ****   case CDC_GET_LINE_CODING:     
 240:Src/usbd_cdc_if.c **** 
 241:Src/usbd_cdc_if.c ****     break;
 242:Src/usbd_cdc_if.c **** 
 243:Src/usbd_cdc_if.c ****   case CDC_SET_CONTROL_LINE_STATE:
 244:Src/usbd_cdc_if.c **** 
 245:Src/usbd_cdc_if.c ****     break;
 246:Src/usbd_cdc_if.c **** 
 247:Src/usbd_cdc_if.c ****   case CDC_SEND_BREAK:
 248:Src/usbd_cdc_if.c ****  
 249:Src/usbd_cdc_if.c ****     break;    
 250:Src/usbd_cdc_if.c ****     
 251:Src/usbd_cdc_if.c ****   default:
 252:Src/usbd_cdc_if.c ****     break;
 253:Src/usbd_cdc_if.c ****   }
 254:Src/usbd_cdc_if.c **** 
 255:Src/usbd_cdc_if.c ****   return (USBD_OK);
 256:Src/usbd_cdc_if.c ****   /* USER CODE END 10 */
 257:Src/usbd_cdc_if.c **** }
  53              		.loc 1 257 0
  54 0000 0020     		movs	r0, #0
  55              	.LVL1:
  56 0002 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE131:
  60              		.section	.text.CDC_Receive_HS,"ax",%progbits
  61              		.align	1
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	CDC_Receive_HS:
  68              	.LFB132:
 258:Src/usbd_cdc_if.c **** 
 259:Src/usbd_cdc_if.c **** /**
 260:Src/usbd_cdc_if.c ****   * @brief  CDC_Receive_HS
 261:Src/usbd_cdc_if.c ****   *         Data received over USB OUT endpoint are sent over CDC interface 
 262:Src/usbd_cdc_if.c ****   *         through this function.
 263:Src/usbd_cdc_if.c ****   *           
 264:Src/usbd_cdc_if.c ****   *         @note
 265:Src/usbd_cdc_if.c ****   *         This function will block any OUT packet reception on USB endpoint 
 266:Src/usbd_cdc_if.c ****   *         untill exiting this function. If you exit this function before transfer
 267:Src/usbd_cdc_if.c ****   *         is complete on CDC interface (ie. using DMA controller) it will result 
 268:Src/usbd_cdc_if.c ****   *         in receiving more data while previous ones are still not sent.
 269:Src/usbd_cdc_if.c ****   *                 
 270:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 271:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 272:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 273:Src/usbd_cdc_if.c ****   */
 274:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_HS (uint8_t* Buf, uint32_t *Len)
 275:Src/usbd_cdc_if.c **** {
  69              		.loc 1 275 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 7


  73              	.LVL2:
  74 0000 70B5     		push	{r4, r5, r6, lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 16
  77              		.cfi_offset 4, -16
  78              		.cfi_offset 5, -12
  79              		.cfi_offset 6, -8
  80              		.cfi_offset 14, -4
  81 0002 0446     		mov	r4, r0
  82 0004 0E46     		mov	r6, r1
 276:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 11 */ 
 277:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceHS, &Buf[0]);
  83              		.loc 1 277 0
  84 0006 074D     		ldr	r5, .L5
  85 0008 0146     		mov	r1, r0
  86              	.LVL3:
  87 000a 2846     		mov	r0, r5
  88              	.LVL4:
  89 000c FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
  90              	.LVL5:
 278:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceHS);
  91              		.loc 1 278 0
  92 0010 2846     		mov	r0, r5
  93 0012 FFF7FEFF 		bl	USBD_CDC_ReceivePacket
  94              	.LVL6:
 279:Src/usbd_cdc_if.c ****   Riptide_CDC_Receive(Buf, Len);
  95              		.loc 1 279 0
  96 0016 3146     		mov	r1, r6
  97 0018 2046     		mov	r0, r4
  98 001a FFF7FEFF 		bl	Riptide_CDC_Receive
  99              	.LVL7:
 280:Src/usbd_cdc_if.c ****   /*uint8_t Successmsg[] = "thrust hell yeah \r\n";
 281:Src/usbd_cdc_if.c ****   uint8_t failmsg[] = "not good enough kid\r\n";
 282:Src/usbd_cdc_if.c **** 
 283:Src/usbd_cdc_if.c ****   char* thrustst = "#";
 284:Src/usbd_cdc_if.c ****   char* thrustend = "@";
 285:Src/usbd_cdc_if.c ****   int   thrustComp = 4;
 286:Src/usbd_cdc_if.c ****   bool thrustsuccess = false;
 287:Src/usbd_cdc_if.c ****   thrustsuccess = MessageCheck(thrustst, thrustend, thrustComp, Buf, Len);
 288:Src/usbd_cdc_if.c ****   if (thrustsuccess){
 289:Src/usbd_cdc_if.c ****     HAL_GPIO_TogglePin(HeartBeat2_GPIO_Port, HeartBeat2_Pin);
 290:Src/usbd_cdc_if.c ****     CDC_Transmit_HS(Successmsg, sizeof(Successmsg)/ sizeof(uint8_t));
 291:Src/usbd_cdc_if.c ****   }
 292:Src/usbd_cdc_if.c ****   if (!thrustsuccess){
 293:Src/usbd_cdc_if.c ****     CDC_Transmit_HS(failmsg, sizeof(failmsg));
 294:Src/usbd_cdc_if.c ****   }*/
 295:Src/usbd_cdc_if.c ****   return (USBD_OK);
 296:Src/usbd_cdc_if.c ****   /* USER CODE END 11 */ 
 297:Src/usbd_cdc_if.c **** }
 100              		.loc 1 297 0
 101 001e 0020     		movs	r0, #0
 102 0020 70BD     		pop	{r4, r5, r6, pc}
 103              	.LVL8:
 104              	.L6:
 105 0022 00BF     		.align	2
 106              	.L5:
 107 0024 00000000 		.word	hUsbDeviceHS
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 8


 108              		.cfi_endproc
 109              	.LFE132:
 111              		.section	.text.CDC_Init_HS,"ax",%progbits
 112              		.align	1
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv4-sp-d16
 118              	CDC_Init_HS:
 119              	.LFB129:
 163:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 8 */ 
 120              		.loc 1 163 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124 0000 10B5     		push	{r4, lr}
 125              	.LCFI1:
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 4, -8
 128              		.cfi_offset 14, -4
 166:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceHS, UserRxBufferHS);
 129              		.loc 1 166 0
 130 0002 064C     		ldr	r4, .L9
 131 0004 0022     		movs	r2, #0
 132 0006 0649     		ldr	r1, .L9+4
 133 0008 2046     		mov	r0, r4
 134 000a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 135              	.LVL9:
 167:Src/usbd_cdc_if.c ****   return (USBD_OK);
 136              		.loc 1 167 0
 137 000e 0549     		ldr	r1, .L9+8
 138 0010 2046     		mov	r0, r4
 139 0012 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 140              	.LVL10:
 170:Src/usbd_cdc_if.c **** 
 141              		.loc 1 170 0
 142 0016 0020     		movs	r0, #0
 143 0018 10BD     		pop	{r4, pc}
 144              	.L10:
 145 001a 00BF     		.align	2
 146              	.L9:
 147 001c 00000000 		.word	hUsbDeviceHS
 148 0020 00000000 		.word	UserTxBufferHS
 149 0024 00000000 		.word	UserRxBufferHS
 150              		.cfi_endproc
 151              	.LFE129:
 153              		.section	.text.CDC_Transmit_HS,"ax",%progbits
 154              		.align	1
 155              		.global	CDC_Transmit_HS
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv4-sp-d16
 161              	CDC_Transmit_HS:
 162              	.LFB133:
 298:Src/usbd_cdc_if.c **** /**
 299:Src/usbd_cdc_if.c ****   * @brief  CDC_Transmit_HS
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 9


 300:Src/usbd_cdc_if.c ****   *         Data send over USB IN endpoint are sent over CDC interface 
 301:Src/usbd_cdc_if.c ****   *         through this function.           
 302:Src/usbd_cdc_if.c ****   *         @note
 303:Src/usbd_cdc_if.c ****   *         
 304:Src/usbd_cdc_if.c ****   *                 
 305:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be send
 306:Src/usbd_cdc_if.c ****   * @param  Len: Number of data to be send (in bytes)
 307:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
 308:Src/usbd_cdc_if.c ****   */
 309:Src/usbd_cdc_if.c **** uint8_t CDC_Transmit_HS(uint8_t* Buf, uint16_t Len)
 310:Src/usbd_cdc_if.c **** {
 163              		.loc 1 310 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              	.LVL11:
 311:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 312:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 12 */ 
 313:Src/usbd_cdc_if.c ****   USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceHS.pClassData;
 168              		.loc 1 313 0
 169 0000 094B     		ldr	r3, .L19
 170 0002 D3F81832 		ldr	r3, [r3, #536]
 171              	.LVL12:
 314:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 172              		.loc 1 314 0
 173 0006 D3F81432 		ldr	r3, [r3, #532]
 174              	.LVL13:
 175 000a 0BB1     		cbz	r3, .L18
 315:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 176              		.loc 1 315 0
 177 000c 0120     		movs	r0, #1
 178              	.LVL14:
 179 000e 7047     		bx	lr
 180              	.LVL15:
 181              	.L18:
 310:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 182              		.loc 1 310 0
 183 0010 10B5     		push	{r4, lr}
 184              	.LCFI2:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 188 0012 0A46     		mov	r2, r1
 189 0014 0146     		mov	r1, r0
 190              	.LVL16:
 316:Src/usbd_cdc_if.c ****   }
 317:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceHS, Buf, Len);
 191              		.loc 1 317 0
 192 0016 044C     		ldr	r4, .L19
 193              	.LVL17:
 194 0018 2046     		mov	r0, r4
 195              	.LVL18:
 196 001a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 197              	.LVL19:
 318:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceHS);
 198              		.loc 1 318 0
 199 001e 2046     		mov	r0, r4
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 10


 200 0020 FFF7FEFF 		bl	USBD_CDC_TransmitPacket
 201              	.LVL20:
 319:Src/usbd_cdc_if.c ****   /* USER CODE END 12 */ 
 320:Src/usbd_cdc_if.c ****   return result;
 202              		.loc 1 320 0
 203 0024 10BD     		pop	{r4, pc}
 204              	.L20:
 205 0026 00BF     		.align	2
 206              	.L19:
 207 0028 00000000 		.word	hUsbDeviceHS
 208              		.cfi_endproc
 209              	.LFE133:
 211              		.global	USBD_Interface_fops_HS
 212              		.comm	UserTxBufferHS,2048,4
 213              		.comm	UserRxBufferHS,2048,4
 214              		.section	.data.USBD_Interface_fops_HS,"aw",%progbits
 215              		.align	2
 218              	USBD_Interface_fops_HS:
 219 0000 00000000 		.word	CDC_Init_HS
 220 0004 00000000 		.word	CDC_DeInit_HS
 221 0008 00000000 		.word	CDC_Control_HS
 222 000c 00000000 		.word	CDC_Receive_HS
 223              		.text
 224              	.Letext0:
 225              		.file 2 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 226              		.file 3 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 227              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 228              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 229              		.file 6 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 230              		.file 7 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 231              		.file 8 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 232              		.file 9 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-up
 233              		.file 10 "/Users/augustmason/Documents/gitHub/riptide_firmware/STM32/gcc-arm-none-eabi-6-2017-q2-u
 234              		.file 11 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 235              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 236              		.file 13 "Inc/usbd_cdc_if.h"
 237              		.file 14 "riptideSTM/inc/riptideFunctions.h"
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_cdc_if.c
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:18     .text.CDC_DeInit_HS:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:24     .text.CDC_DeInit_HS:0000000000000000 CDC_DeInit_HS
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:39     .text.CDC_Control_HS:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:45     .text.CDC_Control_HS:0000000000000000 CDC_Control_HS
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:61     .text.CDC_Receive_HS:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:67     .text.CDC_Receive_HS:0000000000000000 CDC_Receive_HS
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:107    .text.CDC_Receive_HS:0000000000000024 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:112    .text.CDC_Init_HS:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:118    .text.CDC_Init_HS:0000000000000000 CDC_Init_HS
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:147    .text.CDC_Init_HS:000000000000001c $d
                            *COM*:0000000000000800 UserTxBufferHS
                            *COM*:0000000000000800 UserRxBufferHS
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:154    .text.CDC_Transmit_HS:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:161    .text.CDC_Transmit_HS:0000000000000000 CDC_Transmit_HS
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:207    .text.CDC_Transmit_HS:0000000000000028 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:218    .data.USBD_Interface_fops_HS:0000000000000000 USBD_Interface_fops_HS
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//ccEGhm9T.s:215    .data.USBD_Interface_fops_HS:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USBD_CDC_SetRxBuffer
USBD_CDC_ReceivePacket
Riptide_CDC_Receive
hUsbDeviceHS
USBD_CDC_SetTxBuffer
USBD_CDC_TransmitPacket
