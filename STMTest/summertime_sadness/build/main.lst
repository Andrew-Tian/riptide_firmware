ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_SDIO_SD_Init:
  25              	.LFB136:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2017 STMicroelectronics International N.V.
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice,
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under
  31:Src/main.c    ****   *    this license.
  32:Src/main.c    ****   *
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 2


  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f4xx_hal.h"
  51:Src/main.c    **** #include "cmsis_os.h"
  52:Src/main.c    **** #include "fatfs.h"
  53:Src/main.c    **** #include "usb_device.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END Includes */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  60:Src/main.c    **** ADC_HandleTypeDef hadc3;
  61:Src/main.c    **** 
  62:Src/main.c    **** CAN_HandleTypeDef hcan1;
  63:Src/main.c    **** 
  64:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  65:Src/main.c    **** 
  66:Src/main.c    **** IWDG_HandleTypeDef hiwdg;
  67:Src/main.c    **** 
  68:Src/main.c    **** RNG_HandleTypeDef hrng;
  69:Src/main.c    **** 
  70:Src/main.c    **** SD_HandleTypeDef hsd;
  71:Src/main.c    **** 
  72:Src/main.c    **** TIM_HandleTypeDef htim2;
  73:Src/main.c    **** TIM_HandleTypeDef htim3;
  74:Src/main.c    **** TIM_HandleTypeDef htim5;
  75:Src/main.c    **** TIM_HandleTypeDef htim13;
  76:Src/main.c    **** TIM_HandleTypeDef htim14;
  77:Src/main.c    **** 
  78:Src/main.c    **** WWDG_HandleTypeDef hwwdg;
  79:Src/main.c    **** 
  80:Src/main.c    **** osThreadId defaultTaskHandle;
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE BEGIN PV */
  83:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  84:Src/main.c    **** 
  85:Src/main.c    **** /* USER CODE END PV */
  86:Src/main.c    **** 
  87:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  88:Src/main.c    **** void SystemClock_Config(void);
  89:Src/main.c    **** static void MX_GPIO_Init(void);
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 3


  90:Src/main.c    **** static void MX_TIM5_Init(void);
  91:Src/main.c    **** static void MX_TIM3_Init(void);
  92:Src/main.c    **** static void MX_TIM2_Init(void);
  93:Src/main.c    **** static void MX_TIM13_Init(void);
  94:Src/main.c    **** static void MX_TIM14_Init(void);
  95:Src/main.c    **** static void MX_CAN1_Init(void);
  96:Src/main.c    **** static void MX_SDIO_SD_Init(void);
  97:Src/main.c    **** static void MX_I2C1_Init(void);
  98:Src/main.c    **** static void MX_WWDG_Init(void);
  99:Src/main.c    **** static void MX_IWDG_Init(void);
 100:Src/main.c    **** static void MX_RNG_Init(void);
 101:Src/main.c    **** static void MX_ADC3_Init(void);
 102:Src/main.c    **** void StartDefaultTask(void const * argument);
 103:Src/main.c    **** 
 104:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
 105:Src/main.c    **** 
 106:Src/main.c    **** 
 107:Src/main.c    **** 
 108:Src/main.c    **** 
 109:Src/main.c    **** 
 110:Src/main.c    **** 
 111:Src/main.c    **** /* USER CODE BEGIN PFP */
 112:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 113:Src/main.c    **** 
 114:Src/main.c    **** /* USER CODE END PFP */
 115:Src/main.c    **** 
 116:Src/main.c    **** /* USER CODE BEGIN 0 */
 117:Src/main.c    **** 
 118:Src/main.c    **** /* USER CODE END 0 */
 119:Src/main.c    **** 
 120:Src/main.c    **** int main(void)
 121:Src/main.c    **** {
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* USER CODE BEGIN 1 */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE END 1 */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 130:Src/main.c    ****   HAL_Init();
 131:Src/main.c    **** 
 132:Src/main.c    **** 
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* USER CODE BEGIN Init */
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* USER CODE END Init */
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* Configure the system clock */
 139:Src/main.c    ****   SystemClock_Config();
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 142:Src/main.c    **** 
 143:Src/main.c    ****   /* USER CODE END SysInit */
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* Initialize all configured peripherals */
 146:Src/main.c    ****   MX_GPIO_Init();
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 4


 147:Src/main.c    ****   MX_TIM5_Init();
 148:Src/main.c    ****   MX_TIM3_Init();
 149:Src/main.c    ****   MX_TIM2_Init();
 150:Src/main.c    ****   MX_TIM13_Init();
 151:Src/main.c    ****   MX_TIM14_Init();
 152:Src/main.c    ****   MX_CAN1_Init();
 153:Src/main.c    ****   MX_SDIO_SD_Init();
 154:Src/main.c    ****   MX_I2C1_Init();
 155:Src/main.c    ****   MX_WWDG_Init();
 156:Src/main.c    ****   MX_IWDG_Init();
 157:Src/main.c    ****   MX_RNG_Init();
 158:Src/main.c    ****   MX_ADC3_Init();
 159:Src/main.c    **** 
 160:Src/main.c    ****   /* USER CODE BEGIN 2 */
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* USER CODE END 2 */
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 165:Src/main.c    ****   /* add mutexes, ... */
 166:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 169:Src/main.c    ****   /* add semaphores, ... */
 170:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 171:Src/main.c    **** 
 172:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 173:Src/main.c    ****   /* start timers, add new ones, ... */
 174:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 175:Src/main.c    **** 
 176:Src/main.c    ****   /* Create the thread(s) */
 177:Src/main.c    ****   /* definition and creation of defaultTask */
 178:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 179:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 182:Src/main.c    ****   /* add threads, ... */
 183:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 186:Src/main.c    ****   /* add queues, ... */
 187:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 188:Src/main.c    **** 
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* Start scheduler */
 191:Src/main.c    ****   osKernelStart();
 192:Src/main.c    **** 
 193:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* Infinite loop */
 196:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 197:Src/main.c    ****   while (1)
 198:Src/main.c    ****   {
 199:Src/main.c    ****   /* USER CODE END WHILE */
 200:Src/main.c    **** 
 201:Src/main.c    ****   /* USER CODE BEGIN 3 */
 202:Src/main.c    **** 
 203:Src/main.c    ****   }
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 5


 204:Src/main.c    ****   /* USER CODE END 3 */
 205:Src/main.c    **** 
 206:Src/main.c    **** }
 207:Src/main.c    **** 
 208:Src/main.c    **** /** System Clock Configuration
 209:Src/main.c    **** */
 210:Src/main.c    **** void SystemClock_Config(void)
 211:Src/main.c    **** {
 212:Src/main.c    **** 
 213:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 214:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 215:Src/main.c    **** 
 216:Src/main.c    ****     /**Configure the main internal regulator output voltage
 217:Src/main.c    ****     */
 218:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 219:Src/main.c    **** 
 220:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 221:Src/main.c    **** 
 222:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 223:Src/main.c    ****     */
 224:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 225:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 226:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 15;
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 144;
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 232:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 5;
 233:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 234:Src/main.c    ****   {
 235:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 236:Src/main.c    ****   }
 237:Src/main.c    **** 
 238:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 239:Src/main.c    ****     */
 240:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 241:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 242:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 243:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 244:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 245:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 246:Src/main.c    **** 
 247:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 248:Src/main.c    ****   {
 249:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 250:Src/main.c    ****   }
 251:Src/main.c    **** 
 252:Src/main.c    ****     /**Configure the Systick interrupt time
 253:Src/main.c    ****     */
 254:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 255:Src/main.c    **** 
 256:Src/main.c    ****     /**Configure the Systick
 257:Src/main.c    ****     */
 258:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 259:Src/main.c    **** 
 260:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 6


 261:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 262:Src/main.c    **** }
 263:Src/main.c    **** 
 264:Src/main.c    **** /* ADC3 init function */
 265:Src/main.c    **** static void MX_ADC3_Init(void)
 266:Src/main.c    **** {
 267:Src/main.c    **** 
 268:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 269:Src/main.c    **** 
 270:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 271:Src/main.c    ****     */
 272:Src/main.c    ****   hadc3.Instance = ADC3;
 273:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 274:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 275:Src/main.c    ****   hadc3.Init.ScanConvMode = DISABLE;
 276:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 277:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 278:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 279:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 280:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 281:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 282:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 283:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 284:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 285:Src/main.c    ****   {
 286:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 287:Src/main.c    ****   }
 288:Src/main.c    **** 
 289:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 290:Src/main.c    ****     */
 291:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_10;
 292:Src/main.c    ****   sConfig.Rank = 1;
 293:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 294:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 295:Src/main.c    ****   {
 296:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 297:Src/main.c    ****   }
 298:Src/main.c    **** 
 299:Src/main.c    **** }
 300:Src/main.c    **** 
 301:Src/main.c    **** /* CAN1 init function */
 302:Src/main.c    **** static void MX_CAN1_Init(void)
 303:Src/main.c    **** {
 304:Src/main.c    **** 
 305:Src/main.c    ****   hcan1.Instance = CAN1;
 306:Src/main.c    ****   hcan1.Init.Prescaler = 16;
 307:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 308:Src/main.c    ****   hcan1.Init.SJW = CAN_SJW_1TQ;
 309:Src/main.c    ****   hcan1.Init.BS1 = CAN_BS1_1TQ;
 310:Src/main.c    ****   hcan1.Init.BS2 = CAN_BS2_1TQ;
 311:Src/main.c    ****   hcan1.Init.TTCM = DISABLE;
 312:Src/main.c    ****   hcan1.Init.ABOM = DISABLE;
 313:Src/main.c    ****   hcan1.Init.AWUM = DISABLE;
 314:Src/main.c    ****   hcan1.Init.NART = DISABLE;
 315:Src/main.c    ****   hcan1.Init.RFLM = DISABLE;
 316:Src/main.c    ****   hcan1.Init.TXFP = DISABLE;
 317:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 7


 318:Src/main.c    ****   {
 319:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 320:Src/main.c    ****   }
 321:Src/main.c    **** 
 322:Src/main.c    **** }
 323:Src/main.c    **** 
 324:Src/main.c    **** /* I2C1 init function */
 325:Src/main.c    **** static void MX_I2C1_Init(void)
 326:Src/main.c    **** {
 327:Src/main.c    **** 
 328:Src/main.c    ****   hi2c1.Instance = I2C1;
 329:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 330:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 331:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 332:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 333:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 334:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 335:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 336:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 337:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 338:Src/main.c    ****   {
 339:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 340:Src/main.c    ****   }
 341:Src/main.c    **** 
 342:Src/main.c    **** }
 343:Src/main.c    **** 
 344:Src/main.c    **** /* IWDG init function */
 345:Src/main.c    **** static void MX_IWDG_Init(void)
 346:Src/main.c    **** {
 347:Src/main.c    **** 
 348:Src/main.c    ****   hiwdg.Instance = IWDG;
 349:Src/main.c    ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 350:Src/main.c    ****   hiwdg.Init.Reload = 4095;
 351:Src/main.c    ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 352:Src/main.c    ****   {
 353:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 354:Src/main.c    ****   }
 355:Src/main.c    **** 
 356:Src/main.c    **** }
 357:Src/main.c    **** 
 358:Src/main.c    **** /* RNG init function */
 359:Src/main.c    **** static void MX_RNG_Init(void)
 360:Src/main.c    **** {
 361:Src/main.c    **** 
 362:Src/main.c    ****   hrng.Instance = RNG;
 363:Src/main.c    ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 364:Src/main.c    ****   {
 365:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 366:Src/main.c    ****   }
 367:Src/main.c    **** 
 368:Src/main.c    **** }
 369:Src/main.c    **** 
 370:Src/main.c    **** /* SDIO init function */
 371:Src/main.c    **** static void MX_SDIO_SD_Init(void)
 372:Src/main.c    **** {
  27              		.loc 1 372 0
  28              		.cfi_startproc
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 8


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 373:Src/main.c    **** 
 374:Src/main.c    ****   hsd.Instance = SDIO;
  32              		.loc 1 374 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 064A     		ldr	r2, .L2+4
  35 0004 1A60     		str	r2, [r3]
 375:Src/main.c    ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
  36              		.loc 1 375 0
  37 0006 0022     		movs	r2, #0
  38 0008 5A60     		str	r2, [r3, #4]
 376:Src/main.c    ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
  39              		.loc 1 376 0
  40 000a 9A60     		str	r2, [r3, #8]
 377:Src/main.c    ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 377 0
  42 000c DA60     		str	r2, [r3, #12]
 378:Src/main.c    ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
  43              		.loc 1 378 0
  44 000e 1A61     		str	r2, [r3, #16]
 379:Src/main.c    ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
  45              		.loc 1 379 0
  46 0010 5A61     		str	r2, [r3, #20]
 380:Src/main.c    ****   hsd.Init.ClockDiv = 0;
  47              		.loc 1 380 0
  48 0012 9A61     		str	r2, [r3, #24]
  49 0014 7047     		bx	lr
  50              	.L3:
  51 0016 00BF     		.align	2
  52              	.L2:
  53 0018 00000000 		.word	hsd
  54 001c 002C0140 		.word	1073818624
  55              		.cfi_endproc
  56              	.LFE136:
  58              		.section	.text.MX_GPIO_Init,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	MX_GPIO_Init:
  66              	.LFB143:
 381:Src/main.c    **** 
 382:Src/main.c    **** }
 383:Src/main.c    **** 
 384:Src/main.c    **** /* TIM2 init function */
 385:Src/main.c    **** static void MX_TIM2_Init(void)
 386:Src/main.c    **** {
 387:Src/main.c    **** 
 388:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 389:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 390:Src/main.c    **** 
 391:Src/main.c    ****   htim2.Instance = TIM2;
 392:Src/main.c    ****   htim2.Init.Prescaler = 0;
 393:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 9


 394:Src/main.c    ****   htim2.Init.Period = 0;
 395:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 396:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 397:Src/main.c    ****   {
 398:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 399:Src/main.c    ****   }
 400:Src/main.c    **** 
 401:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 402:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 403:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 404:Src/main.c    ****   {
 405:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 406:Src/main.c    ****   }
 407:Src/main.c    **** 
 408:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 409:Src/main.c    ****   sConfigOC.Pulse = 0;
 410:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 411:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 412:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 413:Src/main.c    ****   {
 414:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 415:Src/main.c    ****   }
 416:Src/main.c    **** 
 417:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 418:Src/main.c    ****   {
 419:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 420:Src/main.c    ****   }
 421:Src/main.c    **** 
 422:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 423:Src/main.c    **** 
 424:Src/main.c    **** }
 425:Src/main.c    **** 
 426:Src/main.c    **** /* TIM3 init function */
 427:Src/main.c    **** static void MX_TIM3_Init(void)
 428:Src/main.c    **** {
 429:Src/main.c    **** 
 430:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 431:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 432:Src/main.c    **** 
 433:Src/main.c    ****   htim3.Instance = TIM3;
 434:Src/main.c    ****   htim3.Init.Prescaler = 0;
 435:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 436:Src/main.c    ****   htim3.Init.Period = 0;
 437:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 438:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 439:Src/main.c    ****   {
 440:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 441:Src/main.c    ****   }
 442:Src/main.c    **** 
 443:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 444:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 445:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 446:Src/main.c    ****   {
 447:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 448:Src/main.c    ****   }
 449:Src/main.c    **** 
 450:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 10


 451:Src/main.c    ****   sConfigOC.Pulse = 0;
 452:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 453:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 454:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 455:Src/main.c    ****   {
 456:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 457:Src/main.c    ****   }
 458:Src/main.c    **** 
 459:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 460:Src/main.c    ****   {
 461:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 462:Src/main.c    ****   }
 463:Src/main.c    **** 
 464:Src/main.c    ****   HAL_TIM_MspPostInit(&htim3);
 465:Src/main.c    **** 
 466:Src/main.c    **** }
 467:Src/main.c    **** 
 468:Src/main.c    **** /* TIM5 init function */
 469:Src/main.c    **** static void MX_TIM5_Init(void)
 470:Src/main.c    **** {
 471:Src/main.c    **** 
 472:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 473:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 474:Src/main.c    **** 
 475:Src/main.c    ****   htim5.Instance = TIM5;
 476:Src/main.c    ****   htim5.Init.Prescaler = 0;
 477:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 478:Src/main.c    ****   htim5.Init.Period = 0;
 479:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 480:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 481:Src/main.c    ****   {
 482:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 483:Src/main.c    ****   }
 484:Src/main.c    **** 
 485:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 486:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 487:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 488:Src/main.c    ****   {
 489:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 490:Src/main.c    ****   }
 491:Src/main.c    **** 
 492:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 493:Src/main.c    ****   sConfigOC.Pulse = 0;
 494:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 495:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 496:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 497:Src/main.c    ****   {
 498:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 499:Src/main.c    ****   }
 500:Src/main.c    **** 
 501:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 502:Src/main.c    ****   {
 503:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 504:Src/main.c    ****   }
 505:Src/main.c    **** 
 506:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 507:Src/main.c    ****   {
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 11


 508:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 509:Src/main.c    ****   }
 510:Src/main.c    **** 
 511:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 512:Src/main.c    ****   {
 513:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 514:Src/main.c    ****   }
 515:Src/main.c    **** 
 516:Src/main.c    ****   HAL_TIM_MspPostInit(&htim5);
 517:Src/main.c    **** 
 518:Src/main.c    **** }
 519:Src/main.c    **** 
 520:Src/main.c    **** /* TIM13 init function */
 521:Src/main.c    **** static void MX_TIM13_Init(void)
 522:Src/main.c    **** {
 523:Src/main.c    **** 
 524:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 525:Src/main.c    **** 
 526:Src/main.c    ****   htim13.Instance = TIM13;
 527:Src/main.c    ****   htim13.Init.Prescaler = 0;
 528:Src/main.c    ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 529:Src/main.c    ****   htim13.Init.Period = 0;
 530:Src/main.c    ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 531:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 532:Src/main.c    ****   {
 533:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 534:Src/main.c    ****   }
 535:Src/main.c    **** 
 536:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 537:Src/main.c    ****   {
 538:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 539:Src/main.c    ****   }
 540:Src/main.c    **** 
 541:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 542:Src/main.c    ****   sConfigOC.Pulse = 0;
 543:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 544:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 545:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 546:Src/main.c    ****   {
 547:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 548:Src/main.c    ****   }
 549:Src/main.c    **** 
 550:Src/main.c    ****   HAL_TIM_MspPostInit(&htim13);
 551:Src/main.c    **** 
 552:Src/main.c    **** }
 553:Src/main.c    **** 
 554:Src/main.c    **** /* TIM14 init function */
 555:Src/main.c    **** static void MX_TIM14_Init(void)
 556:Src/main.c    **** {
 557:Src/main.c    **** 
 558:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 559:Src/main.c    **** 
 560:Src/main.c    ****   htim14.Instance = TIM14;
 561:Src/main.c    ****   htim14.Init.Prescaler = 0;
 562:Src/main.c    ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 563:Src/main.c    ****   htim14.Init.Period = 0;
 564:Src/main.c    ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 12


 565:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 566:Src/main.c    ****   {
 567:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 568:Src/main.c    ****   }
 569:Src/main.c    **** 
 570:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 571:Src/main.c    ****   {
 572:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 573:Src/main.c    ****   }
 574:Src/main.c    **** 
 575:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 576:Src/main.c    ****   sConfigOC.Pulse = 0;
 577:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 578:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 579:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 580:Src/main.c    ****   {
 581:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 582:Src/main.c    ****   }
 583:Src/main.c    **** 
 584:Src/main.c    ****   HAL_TIM_MspPostInit(&htim14);
 585:Src/main.c    **** 
 586:Src/main.c    **** }
 587:Src/main.c    **** 
 588:Src/main.c    **** /* WWDG init function */
 589:Src/main.c    **** static void MX_WWDG_Init(void)
 590:Src/main.c    **** {
 591:Src/main.c    **** 
 592:Src/main.c    ****   hwwdg.Instance = WWDG;
 593:Src/main.c    ****   hwwdg.Init.Prescaler = WWDG_PRESCALER_1;
 594:Src/main.c    ****   hwwdg.Init.Window = 64;
 595:Src/main.c    ****   hwwdg.Init.Counter = 64;
 596:Src/main.c    ****   hwwdg.Init.EWIMode = WWDG_EWI_DISABLE;
 597:Src/main.c    ****   if (HAL_WWDG_Init(&hwwdg) != HAL_OK)
 598:Src/main.c    ****   {
 599:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 600:Src/main.c    ****   }
 601:Src/main.c    **** 
 602:Src/main.c    **** }
 603:Src/main.c    **** 
 604:Src/main.c    **** /** Configure pins as
 605:Src/main.c    ****         * Analog
 606:Src/main.c    ****         * Input
 607:Src/main.c    ****         * Output
 608:Src/main.c    ****         * EVENT_OUT
 609:Src/main.c    ****         * EXTI
 610:Src/main.c    **** */
 611:Src/main.c    **** static void MX_GPIO_Init(void)
 612:Src/main.c    **** {
  67              		.loc 1 612 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 24
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72 0000 86B0     		sub	sp, sp, #24
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 24
  75              	.LBB2:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 13


 613:Src/main.c    **** 
 614:Src/main.c    ****   /* GPIO Ports Clock Enable */
 615:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  76              		.loc 1 615 0
  77 0002 0022     		movs	r2, #0
  78 0004 0192     		str	r2, [sp, #4]
  79 0006 1A4B     		ldr	r3, .L6
  80 0008 196B     		ldr	r1, [r3, #48]
  81 000a 41F08001 		orr	r1, r1, #128
  82 000e 1963     		str	r1, [r3, #48]
  83 0010 196B     		ldr	r1, [r3, #48]
  84 0012 01F08001 		and	r1, r1, #128
  85 0016 0191     		str	r1, [sp, #4]
  86 0018 0199     		ldr	r1, [sp, #4]
  87              	.LBE2:
  88              	.LBB3:
 616:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  89              		.loc 1 616 0
  90 001a 0292     		str	r2, [sp, #8]
  91 001c 196B     		ldr	r1, [r3, #48]
  92 001e 41F00401 		orr	r1, r1, #4
  93 0022 1963     		str	r1, [r3, #48]
  94 0024 196B     		ldr	r1, [r3, #48]
  95 0026 01F00401 		and	r1, r1, #4
  96 002a 0291     		str	r1, [sp, #8]
  97 002c 0299     		ldr	r1, [sp, #8]
  98              	.LBE3:
  99              	.LBB4:
 617:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 100              		.loc 1 617 0
 101 002e 0392     		str	r2, [sp, #12]
 102 0030 196B     		ldr	r1, [r3, #48]
 103 0032 41F00101 		orr	r1, r1, #1
 104 0036 1963     		str	r1, [r3, #48]
 105 0038 196B     		ldr	r1, [r3, #48]
 106 003a 01F00101 		and	r1, r1, #1
 107 003e 0391     		str	r1, [sp, #12]
 108 0040 0399     		ldr	r1, [sp, #12]
 109              	.LBE4:
 110              	.LBB5:
 618:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 111              		.loc 1 618 0
 112 0042 0492     		str	r2, [sp, #16]
 113 0044 196B     		ldr	r1, [r3, #48]
 114 0046 41F00201 		orr	r1, r1, #2
 115 004a 1963     		str	r1, [r3, #48]
 116 004c 196B     		ldr	r1, [r3, #48]
 117 004e 01F00201 		and	r1, r1, #2
 118 0052 0491     		str	r1, [sp, #16]
 119 0054 0499     		ldr	r1, [sp, #16]
 120              	.LBE5:
 121              	.LBB6:
 619:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 122              		.loc 1 619 0
 123 0056 0592     		str	r2, [sp, #20]
 124 0058 1A6B     		ldr	r2, [r3, #48]
 125 005a 42F00802 		orr	r2, r2, #8
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 14


 126 005e 1A63     		str	r2, [r3, #48]
 127 0060 1B6B     		ldr	r3, [r3, #48]
 128 0062 03F00803 		and	r3, r3, #8
 129 0066 0593     		str	r3, [sp, #20]
 130 0068 059B     		ldr	r3, [sp, #20]
 131              	.LBE6:
 620:Src/main.c    **** 
 621:Src/main.c    **** }
 132              		.loc 1 621 0
 133 006a 06B0     		add	sp, sp, #24
 134              	.LCFI1:
 135              		.cfi_def_cfa_offset 0
 136              		@ sp needed
 137 006c 7047     		bx	lr
 138              	.L7:
 139 006e 00BF     		.align	2
 140              	.L6:
 141 0070 00380240 		.word	1073887232
 142              		.cfi_endproc
 143              	.LFE143:
 145              		.section	.text.StartDefaultTask,"ax",%progbits
 146              		.align	1
 147              		.global	StartDefaultTask
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv4-sp-d16
 153              	StartDefaultTask:
 154              	.LFB144:
 622:Src/main.c    **** 
 623:Src/main.c    **** /* USER CODE BEGIN 4 */
 624:Src/main.c    **** 
 625:Src/main.c    **** /* USER CODE END 4 */
 626:Src/main.c    **** 
 627:Src/main.c    **** /* StartDefaultTask function */
 628:Src/main.c    **** void StartDefaultTask(void const * argument)
 629:Src/main.c    **** {
 155              		.loc 1 629 0
 156              		.cfi_startproc
 157              		@ Volatile: function does not return.
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              	.LVL0:
 161 0000 08B5     		push	{r3, lr}
 162              	.LCFI2:
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 3, -8
 165              		.cfi_offset 14, -4
 630:Src/main.c    ****   /* init code for USB_DEVICE */
 631:Src/main.c    ****   MX_USB_DEVICE_Init();
 166              		.loc 1 631 0
 167 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 168              	.LVL1:
 632:Src/main.c    **** 
 633:Src/main.c    ****   /* init code for FATFS */
 634:Src/main.c    ****   MX_FATFS_Init();
 169              		.loc 1 634 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 15


 170 0006 FFF7FEFF 		bl	MX_FATFS_Init
 171              	.LVL2:
 172              	.L9:
 635:Src/main.c    **** 
 636:Src/main.c    ****   /* USER CODE BEGIN 5 */
 637:Src/main.c    ****   /* Infinite loop */
 638:Src/main.c    ****   for(;;)
 639:Src/main.c    ****   {
 640:Src/main.c    ****     osDelay(1);
 173              		.loc 1 640 0 discriminator 1
 174 000a 0120     		movs	r0, #1
 175 000c FFF7FEFF 		bl	osDelay
 176              	.LVL3:
 177 0010 FBE7     		b	.L9
 178              		.cfi_endproc
 179              	.LFE144:
 181              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 182              		.align	1
 183              		.global	HAL_TIM_PeriodElapsedCallback
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	HAL_TIM_PeriodElapsedCallback:
 190              	.LFB145:
 641:Src/main.c    ****   }
 642:Src/main.c    ****   /* USER CODE END 5 */
 643:Src/main.c    **** }
 644:Src/main.c    **** 
 645:Src/main.c    **** /**
 646:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 647:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 648:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 649:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 650:Src/main.c    ****   * @param  htim : TIM handle
 651:Src/main.c    ****   * @retval None
 652:Src/main.c    ****   */
 653:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 654:Src/main.c    **** {
 191              		.loc 1 654 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              	.LVL4:
 196 0000 08B5     		push	{r3, lr}
 197              	.LCFI3:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 655:Src/main.c    **** /* USER CODE BEGIN Callback 0 */
 656:Src/main.c    **** 
 657:Src/main.c    **** /* USER CODE END Callback 0 */
 658:Src/main.c    ****   if (htim->Instance == TIM1) {
 201              		.loc 1 658 0
 202 0002 0268     		ldr	r2, [r0]
 203 0004 034B     		ldr	r3, .L15
 204 0006 9A42     		cmp	r2, r3
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 16


 205 0008 00D0     		beq	.L14
 206              	.LVL5:
 207              	.L11:
 208 000a 08BD     		pop	{r3, pc}
 209              	.LVL6:
 210              	.L14:
 659:Src/main.c    ****     HAL_IncTick();
 211              		.loc 1 659 0
 212 000c FFF7FEFF 		bl	HAL_IncTick
 213              	.LVL7:
 660:Src/main.c    ****   }
 661:Src/main.c    **** /* USER CODE BEGIN Callback 1 */
 662:Src/main.c    **** 
 663:Src/main.c    **** /* USER CODE END Callback 1 */
 664:Src/main.c    **** }
 214              		.loc 1 664 0
 215 0010 FBE7     		b	.L11
 216              	.L16:
 217 0012 00BF     		.align	2
 218              	.L15:
 219 0014 00000140 		.word	1073807360
 220              		.cfi_endproc
 221              	.LFE145:
 223              		.section	.text._Error_Handler,"ax",%progbits
 224              		.align	1
 225              		.global	_Error_Handler
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	_Error_Handler:
 232              	.LFB146:
 665:Src/main.c    **** 
 666:Src/main.c    **** /**
 667:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 668:Src/main.c    ****   * @param  None
 669:Src/main.c    ****   * @retval None
 670:Src/main.c    ****   */
 671:Src/main.c    **** void _Error_Handler(char * file, int line)
 672:Src/main.c    **** {
 233              		.loc 1 672 0
 234              		.cfi_startproc
 235              		@ Volatile: function does not return.
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239              	.LVL8:
 240              	.L18:
 241 0000 FEE7     		b	.L18
 242              		.cfi_endproc
 243              	.LFE146:
 245              		.section	.text.MX_TIM5_Init,"ax",%progbits
 246              		.align	1
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 17


 252              	MX_TIM5_Init:
 253              	.LFB139:
 470:Src/main.c    **** 
 254              		.loc 1 470 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 40
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 470:Src/main.c    **** 
 258              		.loc 1 470 0
 259 0000 00B5     		push	{lr}
 260              	.LCFI4:
 261              		.cfi_def_cfa_offset 4
 262              		.cfi_offset 14, -4
 263 0002 8BB0     		sub	sp, sp, #44
 264              	.LCFI5:
 265              		.cfi_def_cfa_offset 48
 475:Src/main.c    ****   htim5.Init.Prescaler = 0;
 266              		.loc 1 475 0
 267 0004 2A48     		ldr	r0, .L33
 268 0006 2B4B     		ldr	r3, .L33+4
 269 0008 0360     		str	r3, [r0]
 476:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 270              		.loc 1 476 0
 271 000a 0023     		movs	r3, #0
 272 000c 4360     		str	r3, [r0, #4]
 477:Src/main.c    ****   htim5.Init.Period = 0;
 273              		.loc 1 477 0
 274 000e 8360     		str	r3, [r0, #8]
 478:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 275              		.loc 1 478 0
 276 0010 C360     		str	r3, [r0, #12]
 479:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 277              		.loc 1 479 0
 278 0012 0361     		str	r3, [r0, #16]
 480:Src/main.c    ****   {
 279              		.loc 1 480 0
 280 0014 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 281              	.LVL9:
 282 0018 58BB     		cbnz	r0, .L27
 485:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 283              		.loc 1 485 0
 284 001a 0023     		movs	r3, #0
 285 001c 0893     		str	r3, [sp, #32]
 486:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 286              		.loc 1 486 0
 287 001e 0993     		str	r3, [sp, #36]
 487:Src/main.c    ****   {
 288              		.loc 1 487 0
 289 0020 08A9     		add	r1, sp, #32
 290 0022 2348     		ldr	r0, .L33
 291 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 292              	.LVL10:
 293 0028 40BB     		cbnz	r0, .L28
 492:Src/main.c    ****   sConfigOC.Pulse = 0;
 294              		.loc 1 492 0
 295 002a 6023     		movs	r3, #96
 296 002c 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 18


 493:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 297              		.loc 1 493 0
 298 002e 0022     		movs	r2, #0
 299 0030 0292     		str	r2, [sp, #8]
 494:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 300              		.loc 1 494 0
 301 0032 0392     		str	r2, [sp, #12]
 495:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 302              		.loc 1 495 0
 303 0034 0592     		str	r2, [sp, #20]
 496:Src/main.c    ****   {
 304              		.loc 1 496 0
 305 0036 01A9     		add	r1, sp, #4
 306 0038 1D48     		ldr	r0, .L33
 307 003a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 308              	.LVL11:
 309 003e 10BB     		cbnz	r0, .L29
 501:Src/main.c    ****   {
 310              		.loc 1 501 0
 311 0040 0422     		movs	r2, #4
 312 0042 0DEB0201 		add	r1, sp, r2
 313 0046 1A48     		ldr	r0, .L33
 314 0048 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 315              	.LVL12:
 316 004c 00BB     		cbnz	r0, .L30
 506:Src/main.c    ****   {
 317              		.loc 1 506 0
 318 004e 0822     		movs	r2, #8
 319 0050 01A9     		add	r1, sp, #4
 320 0052 1748     		ldr	r0, .L33
 321 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 322              	.LVL13:
 323 0058 F8B9     		cbnz	r0, .L31
 511:Src/main.c    ****   {
 324              		.loc 1 511 0
 325 005a 0C22     		movs	r2, #12
 326 005c 01A9     		add	r1, sp, #4
 327 005e 1448     		ldr	r0, .L33
 328 0060 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 329              	.LVL14:
 330 0064 F0B9     		cbnz	r0, .L32
 516:Src/main.c    **** 
 331              		.loc 1 516 0
 332 0066 1248     		ldr	r0, .L33
 333 0068 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 334              	.LVL15:
 518:Src/main.c    **** 
 335              		.loc 1 518 0
 336 006c 0BB0     		add	sp, sp, #44
 337              	.LCFI6:
 338              		.cfi_remember_state
 339              		.cfi_def_cfa_offset 4
 340              		@ sp needed
 341 006e 5DF804FB 		ldr	pc, [sp], #4
 342              	.L27:
 343              	.LCFI7:
 344              		.cfi_restore_state
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 19


 482:Src/main.c    ****   }
 345              		.loc 1 482 0
 346 0072 4FF4F171 		mov	r1, #482
 347 0076 1048     		ldr	r0, .L33+8
 348 0078 FFF7FEFF 		bl	_Error_Handler
 349              	.LVL16:
 350              	.L28:
 489:Src/main.c    ****   }
 351              		.loc 1 489 0
 352 007c 40F2E911 		movw	r1, #489
 353 0080 0D48     		ldr	r0, .L33+8
 354 0082 FFF7FEFF 		bl	_Error_Handler
 355              	.LVL17:
 356              	.L29:
 498:Src/main.c    ****   }
 357              		.loc 1 498 0
 358 0086 4FF4F971 		mov	r1, #498
 359 008a 0B48     		ldr	r0, .L33+8
 360 008c FFF7FEFF 		bl	_Error_Handler
 361              	.LVL18:
 362              	.L30:
 503:Src/main.c    ****   }
 363              		.loc 1 503 0
 364 0090 40F2F711 		movw	r1, #503
 365 0094 0848     		ldr	r0, .L33+8
 366 0096 FFF7FEFF 		bl	_Error_Handler
 367              	.LVL19:
 368              	.L31:
 508:Src/main.c    ****   }
 369              		.loc 1 508 0
 370 009a 4FF4FE71 		mov	r1, #508
 371 009e 0648     		ldr	r0, .L33+8
 372 00a0 FFF7FEFF 		bl	_Error_Handler
 373              	.LVL20:
 374              	.L32:
 513:Src/main.c    ****   }
 375              		.loc 1 513 0
 376 00a4 40F20121 		movw	r1, #513
 377 00a8 0348     		ldr	r0, .L33+8
 378 00aa FFF7FEFF 		bl	_Error_Handler
 379              	.LVL21:
 380              	.L34:
 381 00ae 00BF     		.align	2
 382              	.L33:
 383 00b0 00000000 		.word	htim5
 384 00b4 000C0040 		.word	1073744896
 385 00b8 00000000 		.word	.LC2
 386              		.cfi_endproc
 387              	.LFE139:
 389              		.section	.text.MX_TIM3_Init,"ax",%progbits
 390              		.align	1
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	MX_TIM3_Init:
 397              	.LFB138:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 20


 428:Src/main.c    **** 
 398              		.loc 1 428 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 40
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402 0000 00B5     		push	{lr}
 403              	.LCFI8:
 404              		.cfi_def_cfa_offset 4
 405              		.cfi_offset 14, -4
 406 0002 8BB0     		sub	sp, sp, #44
 407              	.LCFI9:
 408              		.cfi_def_cfa_offset 48
 433:Src/main.c    ****   htim3.Init.Prescaler = 0;
 409              		.loc 1 433 0
 410 0004 1F48     		ldr	r0, .L45
 411 0006 204B     		ldr	r3, .L45+4
 412 0008 0360     		str	r3, [r0]
 434:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 413              		.loc 1 434 0
 414 000a 0023     		movs	r3, #0
 415 000c 4360     		str	r3, [r0, #4]
 435:Src/main.c    ****   htim3.Init.Period = 0;
 416              		.loc 1 435 0
 417 000e 8360     		str	r3, [r0, #8]
 436:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 418              		.loc 1 436 0
 419 0010 C360     		str	r3, [r0, #12]
 437:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 420              		.loc 1 437 0
 421 0012 0361     		str	r3, [r0, #16]
 438:Src/main.c    ****   {
 422              		.loc 1 438 0
 423 0014 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 424              	.LVL22:
 425 0018 F8B9     		cbnz	r0, .L41
 443:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 426              		.loc 1 443 0
 427 001a 0023     		movs	r3, #0
 428 001c 0893     		str	r3, [sp, #32]
 444:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 429              		.loc 1 444 0
 430 001e 0993     		str	r3, [sp, #36]
 445:Src/main.c    ****   {
 431              		.loc 1 445 0
 432 0020 08A9     		add	r1, sp, #32
 433 0022 1848     		ldr	r0, .L45
 434 0024 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 435              	.LVL23:
 436 0028 E0B9     		cbnz	r0, .L42
 450:Src/main.c    ****   sConfigOC.Pulse = 0;
 437              		.loc 1 450 0
 438 002a 6023     		movs	r3, #96
 439 002c 0193     		str	r3, [sp, #4]
 451:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 440              		.loc 1 451 0
 441 002e 0023     		movs	r3, #0
 442 0030 0293     		str	r3, [sp, #8]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 21


 452:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 443              		.loc 1 452 0
 444 0032 0393     		str	r3, [sp, #12]
 453:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 445              		.loc 1 453 0
 446 0034 0593     		str	r3, [sp, #20]
 454:Src/main.c    ****   {
 447              		.loc 1 454 0
 448 0036 0822     		movs	r2, #8
 449 0038 01A9     		add	r1, sp, #4
 450 003a 1248     		ldr	r0, .L45
 451 003c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 452              	.LVL24:
 453 0040 A8B9     		cbnz	r0, .L43
 459:Src/main.c    ****   {
 454              		.loc 1 459 0
 455 0042 0C22     		movs	r2, #12
 456 0044 01A9     		add	r1, sp, #4
 457 0046 0F48     		ldr	r0, .L45
 458 0048 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 459              	.LVL25:
 460 004c A0B9     		cbnz	r0, .L44
 464:Src/main.c    **** 
 461              		.loc 1 464 0
 462 004e 0D48     		ldr	r0, .L45
 463 0050 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 464              	.LVL26:
 466:Src/main.c    **** 
 465              		.loc 1 466 0
 466 0054 0BB0     		add	sp, sp, #44
 467              	.LCFI10:
 468              		.cfi_remember_state
 469              		.cfi_def_cfa_offset 4
 470              		@ sp needed
 471 0056 5DF804FB 		ldr	pc, [sp], #4
 472              	.L41:
 473              	.LCFI11:
 474              		.cfi_restore_state
 440:Src/main.c    ****   }
 475              		.loc 1 440 0
 476 005a 4FF4DC71 		mov	r1, #440
 477 005e 0B48     		ldr	r0, .L45+8
 478 0060 FFF7FEFF 		bl	_Error_Handler
 479              	.LVL27:
 480              	.L42:
 447:Src/main.c    ****   }
 481              		.loc 1 447 0
 482 0064 40F2BF11 		movw	r1, #447
 483 0068 0848     		ldr	r0, .L45+8
 484 006a FFF7FEFF 		bl	_Error_Handler
 485              	.LVL28:
 486              	.L43:
 456:Src/main.c    ****   }
 487              		.loc 1 456 0
 488 006e 4FF4E471 		mov	r1, #456
 489 0072 0648     		ldr	r0, .L45+8
 490 0074 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 22


 491              	.LVL29:
 492              	.L44:
 461:Src/main.c    ****   }
 493              		.loc 1 461 0
 494 0078 40F2CD11 		movw	r1, #461
 495 007c 0348     		ldr	r0, .L45+8
 496 007e FFF7FEFF 		bl	_Error_Handler
 497              	.LVL30:
 498              	.L46:
 499 0082 00BF     		.align	2
 500              	.L45:
 501 0084 00000000 		.word	htim3
 502 0088 00040040 		.word	1073742848
 503 008c 00000000 		.word	.LC2
 504              		.cfi_endproc
 505              	.LFE138:
 507              		.section	.text.MX_TIM2_Init,"ax",%progbits
 508              		.align	1
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv4-sp-d16
 514              	MX_TIM2_Init:
 515              	.LFB137:
 386:Src/main.c    **** 
 516              		.loc 1 386 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 40
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 00B5     		push	{lr}
 521              	.LCFI12:
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 14, -4
 524 0002 8BB0     		sub	sp, sp, #44
 525              	.LCFI13:
 526              		.cfi_def_cfa_offset 48
 391:Src/main.c    ****   htim2.Init.Prescaler = 0;
 527              		.loc 1 391 0
 528 0004 1F48     		ldr	r0, .L57
 529 0006 4FF08043 		mov	r3, #1073741824
 530 000a 0360     		str	r3, [r0]
 392:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 531              		.loc 1 392 0
 532 000c 0023     		movs	r3, #0
 533 000e 4360     		str	r3, [r0, #4]
 393:Src/main.c    ****   htim2.Init.Period = 0;
 534              		.loc 1 393 0
 535 0010 8360     		str	r3, [r0, #8]
 394:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 536              		.loc 1 394 0
 537 0012 C360     		str	r3, [r0, #12]
 395:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 538              		.loc 1 395 0
 539 0014 0361     		str	r3, [r0, #16]
 396:Src/main.c    ****   {
 540              		.loc 1 396 0
 541 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 23


 542              	.LVL31:
 543 001a F8B9     		cbnz	r0, .L53
 401:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 544              		.loc 1 401 0
 545 001c 0023     		movs	r3, #0
 546 001e 0893     		str	r3, [sp, #32]
 402:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 547              		.loc 1 402 0
 548 0020 0993     		str	r3, [sp, #36]
 403:Src/main.c    ****   {
 549              		.loc 1 403 0
 550 0022 08A9     		add	r1, sp, #32
 551 0024 1748     		ldr	r0, .L57
 552 0026 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 553              	.LVL32:
 554 002a E0B9     		cbnz	r0, .L54
 408:Src/main.c    ****   sConfigOC.Pulse = 0;
 555              		.loc 1 408 0
 556 002c 6023     		movs	r3, #96
 557 002e 0193     		str	r3, [sp, #4]
 409:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 558              		.loc 1 409 0
 559 0030 0023     		movs	r3, #0
 560 0032 0293     		str	r3, [sp, #8]
 410:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 561              		.loc 1 410 0
 562 0034 0393     		str	r3, [sp, #12]
 411:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 563              		.loc 1 411 0
 564 0036 0593     		str	r3, [sp, #20]
 412:Src/main.c    ****   {
 565              		.loc 1 412 0
 566 0038 0822     		movs	r2, #8
 567 003a 01A9     		add	r1, sp, #4
 568 003c 1148     		ldr	r0, .L57
 569 003e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 570              	.LVL33:
 571 0042 A8B9     		cbnz	r0, .L55
 417:Src/main.c    ****   {
 572              		.loc 1 417 0
 573 0044 0C22     		movs	r2, #12
 574 0046 01A9     		add	r1, sp, #4
 575 0048 0E48     		ldr	r0, .L57
 576 004a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 577              	.LVL34:
 578 004e A0B9     		cbnz	r0, .L56
 422:Src/main.c    **** 
 579              		.loc 1 422 0
 580 0050 0C48     		ldr	r0, .L57
 581 0052 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 582              	.LVL35:
 424:Src/main.c    **** 
 583              		.loc 1 424 0
 584 0056 0BB0     		add	sp, sp, #44
 585              	.LCFI14:
 586              		.cfi_remember_state
 587              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 24


 588              		@ sp needed
 589 0058 5DF804FB 		ldr	pc, [sp], #4
 590              	.L53:
 591              	.LCFI15:
 592              		.cfi_restore_state
 398:Src/main.c    ****   }
 593              		.loc 1 398 0
 594 005c 4FF4C771 		mov	r1, #398
 595 0060 0948     		ldr	r0, .L57+4
 596 0062 FFF7FEFF 		bl	_Error_Handler
 597              	.LVL36:
 598              	.L54:
 405:Src/main.c    ****   }
 599              		.loc 1 405 0
 600 0066 40F29511 		movw	r1, #405
 601 006a 0748     		ldr	r0, .L57+4
 602 006c FFF7FEFF 		bl	_Error_Handler
 603              	.LVL37:
 604              	.L55:
 414:Src/main.c    ****   }
 605              		.loc 1 414 0
 606 0070 4FF4CF71 		mov	r1, #414
 607 0074 0448     		ldr	r0, .L57+4
 608 0076 FFF7FEFF 		bl	_Error_Handler
 609              	.LVL38:
 610              	.L56:
 419:Src/main.c    ****   }
 611              		.loc 1 419 0
 612 007a 40F2A311 		movw	r1, #419
 613 007e 0248     		ldr	r0, .L57+4
 614 0080 FFF7FEFF 		bl	_Error_Handler
 615              	.LVL39:
 616              	.L58:
 617              		.align	2
 618              	.L57:
 619 0084 00000000 		.word	htim2
 620 0088 00000000 		.word	.LC2
 621              		.cfi_endproc
 622              	.LFE137:
 624              		.section	.text.MX_TIM13_Init,"ax",%progbits
 625              		.align	1
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 629              		.fpu fpv4-sp-d16
 631              	MX_TIM13_Init:
 632              	.LFB140:
 522:Src/main.c    **** 
 633              		.loc 1 522 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 32
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637 0000 00B5     		push	{lr}
 638              	.LCFI16:
 639              		.cfi_def_cfa_offset 4
 640              		.cfi_offset 14, -4
 641 0002 89B0     		sub	sp, sp, #36
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 25


 642              	.LCFI17:
 643              		.cfi_def_cfa_offset 40
 526:Src/main.c    ****   htim13.Init.Prescaler = 0;
 644              		.loc 1 526 0
 645 0004 1748     		ldr	r0, .L67
 646 0006 184B     		ldr	r3, .L67+4
 647 0008 0360     		str	r3, [r0]
 527:Src/main.c    ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 648              		.loc 1 527 0
 649 000a 0023     		movs	r3, #0
 650 000c 4360     		str	r3, [r0, #4]
 528:Src/main.c    ****   htim13.Init.Period = 0;
 651              		.loc 1 528 0
 652 000e 8360     		str	r3, [r0, #8]
 529:Src/main.c    ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 653              		.loc 1 529 0
 654 0010 C360     		str	r3, [r0, #12]
 530:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 655              		.loc 1 530 0
 656 0012 0361     		str	r3, [r0, #16]
 531:Src/main.c    ****   {
 657              		.loc 1 531 0
 658 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 659              	.LVL40:
 660 0018 A0B9     		cbnz	r0, .L64
 536:Src/main.c    ****   {
 661              		.loc 1 536 0
 662 001a 1248     		ldr	r0, .L67
 663 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 664              	.LVL41:
 665 0020 A8B9     		cbnz	r0, .L65
 541:Src/main.c    ****   sConfigOC.Pulse = 0;
 666              		.loc 1 541 0
 667 0022 6023     		movs	r3, #96
 668 0024 0193     		str	r3, [sp, #4]
 542:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 669              		.loc 1 542 0
 670 0026 0022     		movs	r2, #0
 671 0028 0292     		str	r2, [sp, #8]
 543:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 672              		.loc 1 543 0
 673 002a 0392     		str	r2, [sp, #12]
 544:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 674              		.loc 1 544 0
 675 002c 0592     		str	r2, [sp, #20]
 545:Src/main.c    ****   {
 676              		.loc 1 545 0
 677 002e 01A9     		add	r1, sp, #4
 678 0030 0C48     		ldr	r0, .L67
 679 0032 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 680              	.LVL42:
 681 0036 78B9     		cbnz	r0, .L66
 550:Src/main.c    **** 
 682              		.loc 1 550 0
 683 0038 0A48     		ldr	r0, .L67
 684 003a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 685              	.LVL43:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 26


 552:Src/main.c    **** 
 686              		.loc 1 552 0
 687 003e 09B0     		add	sp, sp, #36
 688              	.LCFI18:
 689              		.cfi_remember_state
 690              		.cfi_def_cfa_offset 4
 691              		@ sp needed
 692 0040 5DF804FB 		ldr	pc, [sp], #4
 693              	.L64:
 694              	.LCFI19:
 695              		.cfi_restore_state
 533:Src/main.c    ****   }
 696              		.loc 1 533 0
 697 0044 40F21521 		movw	r1, #533
 698 0048 0848     		ldr	r0, .L67+8
 699 004a FFF7FEFF 		bl	_Error_Handler
 700              	.LVL44:
 701              	.L65:
 538:Src/main.c    ****   }
 702              		.loc 1 538 0
 703 004e 40F21A21 		movw	r1, #538
 704 0052 0648     		ldr	r0, .L67+8
 705 0054 FFF7FEFF 		bl	_Error_Handler
 706              	.LVL45:
 707              	.L66:
 547:Src/main.c    ****   }
 708              		.loc 1 547 0
 709 0058 40F22321 		movw	r1, #547
 710 005c 0348     		ldr	r0, .L67+8
 711 005e FFF7FEFF 		bl	_Error_Handler
 712              	.LVL46:
 713              	.L68:
 714 0062 00BF     		.align	2
 715              	.L67:
 716 0064 00000000 		.word	htim13
 717 0068 001C0040 		.word	1073748992
 718 006c 00000000 		.word	.LC2
 719              		.cfi_endproc
 720              	.LFE140:
 722              		.section	.text.MX_TIM14_Init,"ax",%progbits
 723              		.align	1
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv4-sp-d16
 729              	MX_TIM14_Init:
 730              	.LFB141:
 556:Src/main.c    **** 
 731              		.loc 1 556 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 32
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735 0000 00B5     		push	{lr}
 736              	.LCFI20:
 737              		.cfi_def_cfa_offset 4
 738              		.cfi_offset 14, -4
 739 0002 89B0     		sub	sp, sp, #36
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 27


 740              	.LCFI21:
 741              		.cfi_def_cfa_offset 40
 560:Src/main.c    ****   htim14.Init.Prescaler = 0;
 742              		.loc 1 560 0
 743 0004 1748     		ldr	r0, .L77
 744 0006 184B     		ldr	r3, .L77+4
 745 0008 0360     		str	r3, [r0]
 561:Src/main.c    ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 746              		.loc 1 561 0
 747 000a 0023     		movs	r3, #0
 748 000c 4360     		str	r3, [r0, #4]
 562:Src/main.c    ****   htim14.Init.Period = 0;
 749              		.loc 1 562 0
 750 000e 8360     		str	r3, [r0, #8]
 563:Src/main.c    ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 751              		.loc 1 563 0
 752 0010 C360     		str	r3, [r0, #12]
 564:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 753              		.loc 1 564 0
 754 0012 0361     		str	r3, [r0, #16]
 565:Src/main.c    ****   {
 755              		.loc 1 565 0
 756 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 757              	.LVL47:
 758 0018 A0B9     		cbnz	r0, .L74
 570:Src/main.c    ****   {
 759              		.loc 1 570 0
 760 001a 1248     		ldr	r0, .L77
 761 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 762              	.LVL48:
 763 0020 A8B9     		cbnz	r0, .L75
 575:Src/main.c    ****   sConfigOC.Pulse = 0;
 764              		.loc 1 575 0
 765 0022 6023     		movs	r3, #96
 766 0024 0193     		str	r3, [sp, #4]
 576:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 767              		.loc 1 576 0
 768 0026 0022     		movs	r2, #0
 769 0028 0292     		str	r2, [sp, #8]
 577:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 770              		.loc 1 577 0
 771 002a 0392     		str	r2, [sp, #12]
 578:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 772              		.loc 1 578 0
 773 002c 0592     		str	r2, [sp, #20]
 579:Src/main.c    ****   {
 774              		.loc 1 579 0
 775 002e 01A9     		add	r1, sp, #4
 776 0030 0C48     		ldr	r0, .L77
 777 0032 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 778              	.LVL49:
 779 0036 78B9     		cbnz	r0, .L76
 584:Src/main.c    **** 
 780              		.loc 1 584 0
 781 0038 0A48     		ldr	r0, .L77
 782 003a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 783              	.LVL50:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 28


 586:Src/main.c    **** 
 784              		.loc 1 586 0
 785 003e 09B0     		add	sp, sp, #36
 786              	.LCFI22:
 787              		.cfi_remember_state
 788              		.cfi_def_cfa_offset 4
 789              		@ sp needed
 790 0040 5DF804FB 		ldr	pc, [sp], #4
 791              	.L74:
 792              	.LCFI23:
 793              		.cfi_restore_state
 567:Src/main.c    ****   }
 794              		.loc 1 567 0
 795 0044 40F23721 		movw	r1, #567
 796 0048 0848     		ldr	r0, .L77+8
 797 004a FFF7FEFF 		bl	_Error_Handler
 798              	.LVL51:
 799              	.L75:
 572:Src/main.c    ****   }
 800              		.loc 1 572 0
 801 004e 4FF40F71 		mov	r1, #572
 802 0052 0648     		ldr	r0, .L77+8
 803 0054 FFF7FEFF 		bl	_Error_Handler
 804              	.LVL52:
 805              	.L76:
 581:Src/main.c    ****   }
 806              		.loc 1 581 0
 807 0058 40F24521 		movw	r1, #581
 808 005c 0348     		ldr	r0, .L77+8
 809 005e FFF7FEFF 		bl	_Error_Handler
 810              	.LVL53:
 811              	.L78:
 812 0062 00BF     		.align	2
 813              	.L77:
 814 0064 00000000 		.word	htim14
 815 0068 00200040 		.word	1073750016
 816 006c 00000000 		.word	.LC2
 817              		.cfi_endproc
 818              	.LFE141:
 820              		.section	.text.MX_CAN1_Init,"ax",%progbits
 821              		.align	1
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 825              		.fpu fpv4-sp-d16
 827              	MX_CAN1_Init:
 828              	.LFB132:
 303:Src/main.c    **** 
 829              		.loc 1 303 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833 0000 08B5     		push	{r3, lr}
 834              	.LCFI24:
 835              		.cfi_def_cfa_offset 8
 836              		.cfi_offset 3, -8
 837              		.cfi_offset 14, -4
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 29


 305:Src/main.c    ****   hcan1.Init.Prescaler = 16;
 838              		.loc 1 305 0
 839 0002 0C48     		ldr	r0, .L83
 840 0004 0C4B     		ldr	r3, .L83+4
 841 0006 0360     		str	r3, [r0]
 306:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 842              		.loc 1 306 0
 843 0008 1023     		movs	r3, #16
 844 000a 4360     		str	r3, [r0, #4]
 307:Src/main.c    ****   hcan1.Init.SJW = CAN_SJW_1TQ;
 845              		.loc 1 307 0
 846 000c 0023     		movs	r3, #0
 847 000e 8360     		str	r3, [r0, #8]
 308:Src/main.c    ****   hcan1.Init.BS1 = CAN_BS1_1TQ;
 848              		.loc 1 308 0
 849 0010 C360     		str	r3, [r0, #12]
 309:Src/main.c    ****   hcan1.Init.BS2 = CAN_BS2_1TQ;
 850              		.loc 1 309 0
 851 0012 0361     		str	r3, [r0, #16]
 310:Src/main.c    ****   hcan1.Init.TTCM = DISABLE;
 852              		.loc 1 310 0
 853 0014 4361     		str	r3, [r0, #20]
 311:Src/main.c    ****   hcan1.Init.ABOM = DISABLE;
 854              		.loc 1 311 0
 855 0016 8361     		str	r3, [r0, #24]
 312:Src/main.c    ****   hcan1.Init.AWUM = DISABLE;
 856              		.loc 1 312 0
 857 0018 C361     		str	r3, [r0, #28]
 313:Src/main.c    ****   hcan1.Init.NART = DISABLE;
 858              		.loc 1 313 0
 859 001a 0362     		str	r3, [r0, #32]
 314:Src/main.c    ****   hcan1.Init.RFLM = DISABLE;
 860              		.loc 1 314 0
 861 001c 4362     		str	r3, [r0, #36]
 315:Src/main.c    ****   hcan1.Init.TXFP = DISABLE;
 862              		.loc 1 315 0
 863 001e 8362     		str	r3, [r0, #40]
 316:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 864              		.loc 1 316 0
 865 0020 C362     		str	r3, [r0, #44]
 317:Src/main.c    ****   {
 866              		.loc 1 317 0
 867 0022 FFF7FEFF 		bl	HAL_CAN_Init
 868              	.LVL54:
 869 0026 00B9     		cbnz	r0, .L82
 870 0028 08BD     		pop	{r3, pc}
 871              	.L82:
 319:Src/main.c    ****   }
 872              		.loc 1 319 0
 873 002a 40F23F11 		movw	r1, #319
 874 002e 0348     		ldr	r0, .L83+8
 875 0030 FFF7FEFF 		bl	_Error_Handler
 876              	.LVL55:
 877              	.L84:
 878              		.align	2
 879              	.L83:
 880 0034 00000000 		.word	hcan1
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 30


 881 0038 00640040 		.word	1073767424
 882 003c 00000000 		.word	.LC2
 883              		.cfi_endproc
 884              	.LFE132:
 886              		.section	.text.MX_I2C1_Init,"ax",%progbits
 887              		.align	1
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 891              		.fpu fpv4-sp-d16
 893              	MX_I2C1_Init:
 894              	.LFB133:
 326:Src/main.c    **** 
 895              		.loc 1 326 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899 0000 08B5     		push	{r3, lr}
 900              	.LCFI25:
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 3, -8
 903              		.cfi_offset 14, -4
 328:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 904              		.loc 1 328 0
 905 0002 0C48     		ldr	r0, .L89
 906 0004 0C4B     		ldr	r3, .L89+4
 907 0006 0360     		str	r3, [r0]
 329:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 908              		.loc 1 329 0
 909 0008 0C4B     		ldr	r3, .L89+8
 910 000a 4360     		str	r3, [r0, #4]
 330:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 911              		.loc 1 330 0
 912 000c 0023     		movs	r3, #0
 913 000e 8360     		str	r3, [r0, #8]
 331:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 914              		.loc 1 331 0
 915 0010 C360     		str	r3, [r0, #12]
 332:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 916              		.loc 1 332 0
 917 0012 4FF48042 		mov	r2, #16384
 918 0016 0261     		str	r2, [r0, #16]
 333:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 919              		.loc 1 333 0
 920 0018 4361     		str	r3, [r0, #20]
 334:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 921              		.loc 1 334 0
 922 001a 8361     		str	r3, [r0, #24]
 335:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 923              		.loc 1 335 0
 924 001c C361     		str	r3, [r0, #28]
 336:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 925              		.loc 1 336 0
 926 001e 0362     		str	r3, [r0, #32]
 337:Src/main.c    ****   {
 927              		.loc 1 337 0
 928 0020 FFF7FEFF 		bl	HAL_I2C_Init
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 31


 929              	.LVL56:
 930 0024 00B9     		cbnz	r0, .L88
 931 0026 08BD     		pop	{r3, pc}
 932              	.L88:
 339:Src/main.c    ****   }
 933              		.loc 1 339 0
 934 0028 40F25311 		movw	r1, #339
 935 002c 0448     		ldr	r0, .L89+12
 936 002e FFF7FEFF 		bl	_Error_Handler
 937              	.LVL57:
 938              	.L90:
 939 0032 00BF     		.align	2
 940              	.L89:
 941 0034 00000000 		.word	hi2c1
 942 0038 00540040 		.word	1073763328
 943 003c A0860100 		.word	100000
 944 0040 00000000 		.word	.LC2
 945              		.cfi_endproc
 946              	.LFE133:
 948              		.section	.text.MX_WWDG_Init,"ax",%progbits
 949              		.align	1
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu fpv4-sp-d16
 955              	MX_WWDG_Init:
 956              	.LFB142:
 590:Src/main.c    **** 
 957              		.loc 1 590 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961 0000 08B5     		push	{r3, lr}
 962              	.LCFI26:
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 3, -8
 965              		.cfi_offset 14, -4
 592:Src/main.c    ****   hwwdg.Init.Prescaler = WWDG_PRESCALER_1;
 966              		.loc 1 592 0
 967 0002 0948     		ldr	r0, .L95
 968 0004 094B     		ldr	r3, .L95+4
 969 0006 0360     		str	r3, [r0]
 593:Src/main.c    ****   hwwdg.Init.Window = 64;
 970              		.loc 1 593 0
 971 0008 0023     		movs	r3, #0
 972 000a 4360     		str	r3, [r0, #4]
 594:Src/main.c    ****   hwwdg.Init.Counter = 64;
 973              		.loc 1 594 0
 974 000c 4022     		movs	r2, #64
 975 000e 8260     		str	r2, [r0, #8]
 595:Src/main.c    ****   hwwdg.Init.EWIMode = WWDG_EWI_DISABLE;
 976              		.loc 1 595 0
 977 0010 C260     		str	r2, [r0, #12]
 596:Src/main.c    ****   if (HAL_WWDG_Init(&hwwdg) != HAL_OK)
 978              		.loc 1 596 0
 979 0012 0361     		str	r3, [r0, #16]
 597:Src/main.c    ****   {
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 32


 980              		.loc 1 597 0
 981 0014 FFF7FEFF 		bl	HAL_WWDG_Init
 982              	.LVL58:
 983 0018 00B9     		cbnz	r0, .L94
 984 001a 08BD     		pop	{r3, pc}
 985              	.L94:
 599:Src/main.c    ****   }
 986              		.loc 1 599 0
 987 001c 40F25721 		movw	r1, #599
 988 0020 0348     		ldr	r0, .L95+8
 989 0022 FFF7FEFF 		bl	_Error_Handler
 990              	.LVL59:
 991              	.L96:
 992 0026 00BF     		.align	2
 993              	.L95:
 994 0028 00000000 		.word	hwwdg
 995 002c 002C0040 		.word	1073753088
 996 0030 00000000 		.word	.LC2
 997              		.cfi_endproc
 998              	.LFE142:
 1000              		.section	.text.MX_IWDG_Init,"ax",%progbits
 1001              		.align	1
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
 1005              		.fpu fpv4-sp-d16
 1007              	MX_IWDG_Init:
 1008              	.LFB134:
 346:Src/main.c    **** 
 1009              		.loc 1 346 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013 0000 08B5     		push	{r3, lr}
 1014              	.LCFI27:
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 3, -8
 1017              		.cfi_offset 14, -4
 348:Src/main.c    ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 1018              		.loc 1 348 0
 1019 0002 0848     		ldr	r0, .L101
 1020 0004 084B     		ldr	r3, .L101+4
 1021 0006 0360     		str	r3, [r0]
 349:Src/main.c    ****   hiwdg.Init.Reload = 4095;
 1022              		.loc 1 349 0
 1023 0008 0023     		movs	r3, #0
 1024 000a 4360     		str	r3, [r0, #4]
 350:Src/main.c    ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 1025              		.loc 1 350 0
 1026 000c 40F6FF73 		movw	r3, #4095
 1027 0010 8360     		str	r3, [r0, #8]
 351:Src/main.c    ****   {
 1028              		.loc 1 351 0
 1029 0012 FFF7FEFF 		bl	HAL_IWDG_Init
 1030              	.LVL60:
 1031 0016 00B9     		cbnz	r0, .L100
 1032 0018 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 33


 1033              	.L100:
 353:Src/main.c    ****   }
 1034              		.loc 1 353 0
 1035 001a 40F26111 		movw	r1, #353
 1036 001e 0348     		ldr	r0, .L101+8
 1037 0020 FFF7FEFF 		bl	_Error_Handler
 1038              	.LVL61:
 1039              	.L102:
 1040              		.align	2
 1041              	.L101:
 1042 0024 00000000 		.word	hiwdg
 1043 0028 00300040 		.word	1073754112
 1044 002c 00000000 		.word	.LC2
 1045              		.cfi_endproc
 1046              	.LFE134:
 1048              		.section	.text.MX_RNG_Init,"ax",%progbits
 1049              		.align	1
 1050              		.syntax unified
 1051              		.thumb
 1052              		.thumb_func
 1053              		.fpu fpv4-sp-d16
 1055              	MX_RNG_Init:
 1056              	.LFB135:
 360:Src/main.c    **** 
 1057              		.loc 1 360 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061 0000 08B5     		push	{r3, lr}
 1062              	.LCFI28:
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 3, -8
 1065              		.cfi_offset 14, -4
 362:Src/main.c    ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 1066              		.loc 1 362 0
 1067 0002 0648     		ldr	r0, .L107
 1068 0004 064B     		ldr	r3, .L107+4
 1069 0006 0360     		str	r3, [r0]
 363:Src/main.c    ****   {
 1070              		.loc 1 363 0
 1071 0008 FFF7FEFF 		bl	HAL_RNG_Init
 1072              	.LVL62:
 1073 000c 00B9     		cbnz	r0, .L106
 1074 000e 08BD     		pop	{r3, pc}
 1075              	.L106:
 365:Src/main.c    ****   }
 1076              		.loc 1 365 0
 1077 0010 40F26D11 		movw	r1, #365
 1078 0014 0348     		ldr	r0, .L107+8
 1079 0016 FFF7FEFF 		bl	_Error_Handler
 1080              	.LVL63:
 1081              	.L108:
 1082 001a 00BF     		.align	2
 1083              	.L107:
 1084 001c 00000000 		.word	hrng
 1085 0020 00080650 		.word	1342572544
 1086 0024 00000000 		.word	.LC2
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 34


 1087              		.cfi_endproc
 1088              	.LFE135:
 1090              		.section	.text.MX_ADC3_Init,"ax",%progbits
 1091              		.align	1
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1095              		.fpu fpv4-sp-d16
 1097              	MX_ADC3_Init:
 1098              	.LFB131:
 266:Src/main.c    **** 
 1099              		.loc 1 266 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 16
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103 0000 00B5     		push	{lr}
 1104              	.LCFI29:
 1105              		.cfi_def_cfa_offset 4
 1106              		.cfi_offset 14, -4
 1107 0002 85B0     		sub	sp, sp, #20
 1108              	.LCFI30:
 1109              		.cfi_def_cfa_offset 24
 272:Src/main.c    ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 1110              		.loc 1 272 0
 1111 0004 1548     		ldr	r0, .L115
 1112 0006 164B     		ldr	r3, .L115+4
 1113 0008 0360     		str	r3, [r0]
 273:Src/main.c    ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 1114              		.loc 1 273 0
 1115 000a 0023     		movs	r3, #0
 1116 000c 4360     		str	r3, [r0, #4]
 274:Src/main.c    ****   hadc3.Init.ScanConvMode = DISABLE;
 1117              		.loc 1 274 0
 1118 000e 8360     		str	r3, [r0, #8]
 275:Src/main.c    ****   hadc3.Init.ContinuousConvMode = DISABLE;
 1119              		.loc 1 275 0
 1120 0010 0361     		str	r3, [r0, #16]
 276:Src/main.c    ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 1121              		.loc 1 276 0
 1122 0012 8361     		str	r3, [r0, #24]
 277:Src/main.c    ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1123              		.loc 1 277 0
 1124 0014 0362     		str	r3, [r0, #32]
 278:Src/main.c    ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1125              		.loc 1 278 0
 1126 0016 C362     		str	r3, [r0, #44]
 279:Src/main.c    ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1127              		.loc 1 279 0
 1128 0018 124A     		ldr	r2, .L115+8
 1129 001a 8262     		str	r2, [r0, #40]
 280:Src/main.c    ****   hadc3.Init.NbrOfConversion = 1;
 1130              		.loc 1 280 0
 1131 001c C360     		str	r3, [r0, #12]
 281:Src/main.c    ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 1132              		.loc 1 281 0
 1133 001e 0122     		movs	r2, #1
 1134 0020 C261     		str	r2, [r0, #28]
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 35


 282:Src/main.c    ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1135              		.loc 1 282 0
 1136 0022 0363     		str	r3, [r0, #48]
 283:Src/main.c    ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 1137              		.loc 1 283 0
 1138 0024 4261     		str	r2, [r0, #20]
 284:Src/main.c    ****   {
 1139              		.loc 1 284 0
 1140 0026 FFF7FEFF 		bl	HAL_ADC_Init
 1141              	.LVL64:
 1142 002a 68B9     		cbnz	r0, .L113
 291:Src/main.c    ****   sConfig.Rank = 1;
 1143              		.loc 1 291 0
 1144 002c 0A23     		movs	r3, #10
 1145 002e 0093     		str	r3, [sp]
 292:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1146              		.loc 1 292 0
 1147 0030 0123     		movs	r3, #1
 1148 0032 0193     		str	r3, [sp, #4]
 293:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 1149              		.loc 1 293 0
 1150 0034 0023     		movs	r3, #0
 1151 0036 0293     		str	r3, [sp, #8]
 294:Src/main.c    ****   {
 1152              		.loc 1 294 0
 1153 0038 6946     		mov	r1, sp
 1154 003a 0848     		ldr	r0, .L115
 1155 003c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1156              	.LVL65:
 1157 0040 38B9     		cbnz	r0, .L114
 299:Src/main.c    **** 
 1158              		.loc 1 299 0
 1159 0042 05B0     		add	sp, sp, #20
 1160              	.LCFI31:
 1161              		.cfi_remember_state
 1162              		.cfi_def_cfa_offset 4
 1163              		@ sp needed
 1164 0044 5DF804FB 		ldr	pc, [sp], #4
 1165              	.L113:
 1166              	.LCFI32:
 1167              		.cfi_restore_state
 286:Src/main.c    ****   }
 1168              		.loc 1 286 0
 1169 0048 4FF48F71 		mov	r1, #286
 1170 004c 0648     		ldr	r0, .L115+12
 1171 004e FFF7FEFF 		bl	_Error_Handler
 1172              	.LVL66:
 1173              	.L114:
 296:Src/main.c    ****   }
 1174              		.loc 1 296 0
 1175 0052 4FF49471 		mov	r1, #296
 1176 0056 0448     		ldr	r0, .L115+12
 1177 0058 FFF7FEFF 		bl	_Error_Handler
 1178              	.LVL67:
 1179              	.L116:
 1180              		.align	2
 1181              	.L115:
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 36


 1182 005c 00000000 		.word	hadc3
 1183 0060 00220140 		.word	1073816064
 1184 0064 0100000F 		.word	251658241
 1185 0068 00000000 		.word	.LC2
 1186              		.cfi_endproc
 1187              	.LFE131:
 1189              		.section	.text.SystemClock_Config,"ax",%progbits
 1190              		.align	1
 1191              		.global	SystemClock_Config
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
 1195              		.fpu fpv4-sp-d16
 1197              	SystemClock_Config:
 1198              	.LFB130:
 211:Src/main.c    **** 
 1199              		.loc 1 211 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 80
 1202              		@ frame_needed = 0, uses_anonymous_args = 0
 1203 0000 00B5     		push	{lr}
 1204              	.LCFI33:
 1205              		.cfi_def_cfa_offset 4
 1206              		.cfi_offset 14, -4
 1207 0002 95B0     		sub	sp, sp, #84
 1208              	.LCFI34:
 1209              		.cfi_def_cfa_offset 88
 1210              	.LBB7:
 218:Src/main.c    **** 
 1211              		.loc 1 218 0
 1212 0004 0021     		movs	r1, #0
 1213 0006 0191     		str	r1, [sp, #4]
 1214 0008 2C4B     		ldr	r3, .L123
 1215 000a 1A6C     		ldr	r2, [r3, #64]
 1216 000c 42F08052 		orr	r2, r2, #268435456
 1217 0010 1A64     		str	r2, [r3, #64]
 1218 0012 1B6C     		ldr	r3, [r3, #64]
 1219 0014 03F08053 		and	r3, r3, #268435456
 1220 0018 0193     		str	r3, [sp, #4]
 1221 001a 019B     		ldr	r3, [sp, #4]
 1222              	.LBE7:
 1223              	.LBB8:
 220:Src/main.c    **** 
 1224              		.loc 1 220 0
 1225 001c 0291     		str	r1, [sp, #8]
 1226 001e 284B     		ldr	r3, .L123+4
 1227 0020 1A68     		ldr	r2, [r3]
 1228 0022 42F48042 		orr	r2, r2, #16384
 1229 0026 1A60     		str	r2, [r3]
 1230 0028 1B68     		ldr	r3, [r3]
 1231 002a 03F48043 		and	r3, r3, #16384
 1232 002e 0293     		str	r3, [sp, #8]
 1233 0030 029B     		ldr	r3, [sp, #8]
 1234              	.LBE8:
 224:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1235              		.loc 1 224 0
 1236 0032 0923     		movs	r3, #9
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 37


 1237 0034 0893     		str	r3, [sp, #32]
 225:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1238              		.loc 1 225 0
 1239 0036 4FF48033 		mov	r3, #65536
 1240 003a 0993     		str	r3, [sp, #36]
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1241              		.loc 1 226 0
 1242 003c 0123     		movs	r3, #1
 1243 003e 0D93     		str	r3, [sp, #52]
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1244              		.loc 1 227 0
 1245 0040 0223     		movs	r3, #2
 1246 0042 0E93     		str	r3, [sp, #56]
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1247              		.loc 1 228 0
 1248 0044 4FF48002 		mov	r2, #4194304
 1249 0048 0F92     		str	r2, [sp, #60]
 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1250              		.loc 1 229 0
 1251 004a 0F22     		movs	r2, #15
 1252 004c 1092     		str	r2, [sp, #64]
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1253              		.loc 1 230 0
 1254 004e 9022     		movs	r2, #144
 1255 0050 1192     		str	r2, [sp, #68]
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 5;
 1256              		.loc 1 231 0
 1257 0052 1293     		str	r3, [sp, #72]
 232:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1258              		.loc 1 232 0
 1259 0054 0523     		movs	r3, #5
 1260 0056 1393     		str	r3, [sp, #76]
 233:Src/main.c    ****   {
 1261              		.loc 1 233 0
 1262 0058 08A8     		add	r0, sp, #32
 1263 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1264              	.LVL68:
 1265 005e 20BB     		cbnz	r0, .L121
 240:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1266              		.loc 1 240 0
 1267 0060 0F23     		movs	r3, #15
 1268 0062 0393     		str	r3, [sp, #12]
 242:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1269              		.loc 1 242 0
 1270 0064 0223     		movs	r3, #2
 1271 0066 0493     		str	r3, [sp, #16]
 243:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1272              		.loc 1 243 0
 1273 0068 0023     		movs	r3, #0
 1274 006a 0593     		str	r3, [sp, #20]
 244:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1275              		.loc 1 244 0
 1276 006c 4FF4A053 		mov	r3, #5120
 1277 0070 0693     		str	r3, [sp, #24]
 245:Src/main.c    **** 
 1278              		.loc 1 245 0
 1279 0072 4FF48053 		mov	r3, #4096
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 38


 1280 0076 0793     		str	r3, [sp, #28]
 247:Src/main.c    ****   {
 1281              		.loc 1 247 0
 1282 0078 0321     		movs	r1, #3
 1283 007a 03A8     		add	r0, sp, #12
 1284 007c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1285              	.LVL69:
 1286 0080 B8B9     		cbnz	r0, .L122
 254:Src/main.c    **** 
 1287              		.loc 1 254 0
 1288 0082 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1289              	.LVL70:
 1290 0086 0F4B     		ldr	r3, .L123+8
 1291 0088 A3FB0030 		umull	r3, r0, r3, r0
 1292 008c 8009     		lsrs	r0, r0, #6
 1293 008e FFF7FEFF 		bl	HAL_SYSTICK_Config
 1294              	.LVL71:
 258:Src/main.c    **** 
 1295              		.loc 1 258 0
 1296 0092 0420     		movs	r0, #4
 1297 0094 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 1298              	.LVL72:
 261:Src/main.c    **** }
 1299              		.loc 1 261 0
 1300 0098 0022     		movs	r2, #0
 1301 009a 0F21     		movs	r1, #15
 1302 009c 4FF0FF30 		mov	r0, #-1
 1303 00a0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1304              	.LVL73:
 262:Src/main.c    **** 
 1305              		.loc 1 262 0
 1306 00a4 15B0     		add	sp, sp, #84
 1307              	.LCFI35:
 1308              		.cfi_remember_state
 1309              		.cfi_def_cfa_offset 4
 1310              		@ sp needed
 1311 00a6 5DF804FB 		ldr	pc, [sp], #4
 1312              	.L121:
 1313              	.LCFI36:
 1314              		.cfi_restore_state
 235:Src/main.c    ****   }
 1315              		.loc 1 235 0
 1316 00aa EB21     		movs	r1, #235
 1317 00ac 0648     		ldr	r0, .L123+12
 1318 00ae FFF7FEFF 		bl	_Error_Handler
 1319              	.LVL74:
 1320              	.L122:
 249:Src/main.c    ****   }
 1321              		.loc 1 249 0
 1322 00b2 F921     		movs	r1, #249
 1323 00b4 0448     		ldr	r0, .L123+12
 1324 00b6 FFF7FEFF 		bl	_Error_Handler
 1325              	.LVL75:
 1326              	.L124:
 1327 00ba 00BF     		.align	2
 1328              	.L123:
 1329 00bc 00380240 		.word	1073887232
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 39


 1330 00c0 00700040 		.word	1073770496
 1331 00c4 D34D6210 		.word	274877907
 1332 00c8 00000000 		.word	.LC2
 1333              		.cfi_endproc
 1334              	.LFE130:
 1336              		.section	.text.main,"ax",%progbits
 1337              		.align	1
 1338              		.global	main
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu fpv4-sp-d16
 1344              	main:
 1345              	.LFB129:
 121:Src/main.c    **** 
 1346              		.loc 1 121 0
 1347              		.cfi_startproc
 1348              		@ Volatile: function does not return.
 1349              		@ args = 0, pretend = 0, frame = 24
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351 0000 00B5     		push	{lr}
 1352              	.LCFI37:
 1353              		.cfi_def_cfa_offset 4
 1354              		.cfi_offset 14, -4
 1355 0002 87B0     		sub	sp, sp, #28
 1356              	.LCFI38:
 1357              		.cfi_def_cfa_offset 32
 130:Src/main.c    **** 
 1358              		.loc 1 130 0
 1359 0004 FFF7FEFF 		bl	HAL_Init
 1360              	.LVL76:
 139:Src/main.c    **** 
 1361              		.loc 1 139 0
 1362 0008 FFF7FEFF 		bl	SystemClock_Config
 1363              	.LVL77:
 146:Src/main.c    ****   MX_TIM5_Init();
 1364              		.loc 1 146 0
 1365 000c FFF7FEFF 		bl	MX_GPIO_Init
 1366              	.LVL78:
 147:Src/main.c    ****   MX_TIM3_Init();
 1367              		.loc 1 147 0
 1368 0010 FFF7FEFF 		bl	MX_TIM5_Init
 1369              	.LVL79:
 148:Src/main.c    ****   MX_TIM2_Init();
 1370              		.loc 1 148 0
 1371 0014 FFF7FEFF 		bl	MX_TIM3_Init
 1372              	.LVL80:
 149:Src/main.c    ****   MX_TIM13_Init();
 1373              		.loc 1 149 0
 1374 0018 FFF7FEFF 		bl	MX_TIM2_Init
 1375              	.LVL81:
 150:Src/main.c    ****   MX_TIM14_Init();
 1376              		.loc 1 150 0
 1377 001c FFF7FEFF 		bl	MX_TIM13_Init
 1378              	.LVL82:
 151:Src/main.c    ****   MX_CAN1_Init();
 1379              		.loc 1 151 0
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 40


 1380 0020 FFF7FEFF 		bl	MX_TIM14_Init
 1381              	.LVL83:
 152:Src/main.c    ****   MX_SDIO_SD_Init();
 1382              		.loc 1 152 0
 1383 0024 FFF7FEFF 		bl	MX_CAN1_Init
 1384              	.LVL84:
 153:Src/main.c    ****   MX_I2C1_Init();
 1385              		.loc 1 153 0
 1386 0028 FFF7FEFF 		bl	MX_SDIO_SD_Init
 1387              	.LVL85:
 154:Src/main.c    ****   MX_WWDG_Init();
 1388              		.loc 1 154 0
 1389 002c FFF7FEFF 		bl	MX_I2C1_Init
 1390              	.LVL86:
 155:Src/main.c    ****   MX_IWDG_Init();
 1391              		.loc 1 155 0
 1392 0030 FFF7FEFF 		bl	MX_WWDG_Init
 1393              	.LVL87:
 156:Src/main.c    ****   MX_RNG_Init();
 1394              		.loc 1 156 0
 1395 0034 FFF7FEFF 		bl	MX_IWDG_Init
 1396              	.LVL88:
 157:Src/main.c    ****   MX_ADC3_Init();
 1397              		.loc 1 157 0
 1398 0038 FFF7FEFF 		bl	MX_RNG_Init
 1399              	.LVL89:
 158:Src/main.c    **** 
 1400              		.loc 1 158 0
 1401 003c FFF7FEFF 		bl	MX_ADC3_Init
 1402              	.LVL90:
 178:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 1403              		.loc 1 178 0
 1404 0040 01AC     		add	r4, sp, #4
 1405 0042 074D     		ldr	r5, .L128
 1406 0044 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1407 0046 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1408 0048 2B68     		ldr	r3, [r5]
 1409 004a 2360     		str	r3, [r4]
 179:Src/main.c    **** 
 1410              		.loc 1 179 0
 1411 004c 0021     		movs	r1, #0
 1412 004e 01A8     		add	r0, sp, #4
 1413 0050 FFF7FEFF 		bl	osThreadCreate
 1414              	.LVL91:
 1415 0054 034B     		ldr	r3, .L128+4
 1416 0056 1860     		str	r0, [r3]
 191:Src/main.c    **** 
 1417              		.loc 1 191 0
 1418 0058 FFF7FEFF 		bl	osKernelStart
 1419              	.LVL92:
 1420              	.L126:
 1421 005c FEE7     		b	.L126
 1422              	.L129:
 1423 005e 00BF     		.align	2
 1424              	.L128:
 1425 0060 00000000 		.word	.LANCHOR0
 1426 0064 00000000 		.word	defaultTaskHandle
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 41


 1427              		.cfi_endproc
 1428              	.LFE129:
 1430              		.comm	defaultTaskHandle,4,4
 1431              		.comm	hwwdg,20,4
 1432              		.comm	htim14,60,4
 1433              		.comm	htim13,60,4
 1434              		.comm	htim5,60,4
 1435              		.comm	htim3,60,4
 1436              		.comm	htim2,60,4
 1437              		.comm	hsd,132,4
 1438              		.comm	hrng,12,4
 1439              		.comm	hiwdg,12,4
 1440              		.comm	hi2c1,84,4
 1441              		.comm	hcan1,68,4
 1442              		.comm	hadc3,72,4
 1443              		.section	.rodata
 1444              		.align	2
 1445              		.set	.LANCHOR0,. + 0
 1446              	.LC3:
 1447 0000 00000000 		.word	.LC0
 1448 0004 00000000 		.word	StartDefaultTask
 1449 0008 0000     		.short	0
 1450 000a 0000     		.space	2
 1451 000c 00000000 		.word	0
 1452 0010 80000000 		.word	128
 1453              		.section	.rodata.MX_TIM5_Init.str1.4,"aMS",%progbits,1
 1454              		.align	2
 1455              	.LC2:
 1456 0000 5372632F 		.ascii	"Src/main.c\000"
 1456      6D61696E 
 1456      2E6300
 1457              		.section	.rodata.str1.4,"aMS",%progbits,1
 1458              		.align	2
 1459              	.LC0:
 1460 0000 64656661 		.ascii	"defaultTask\000"
 1460      756C7454 
 1460      61736B00 
 1461              		.text
 1462              	.Letext0:
 1463              		.file 2 "/Users/augustmason/Documents/STMTest/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/inc
 1464              		.file 3 "/Users/augustmason/Documents/STMTest/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/inc
 1465              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1466              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1467              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1468              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1469              		.file 8 "/Users/augustmason/Documents/STMTest/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/inc
 1470              		.file 9 "/Users/augustmason/Documents/STMTest/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/inc
 1471              		.file 10 "/Users/augustmason/Documents/STMTest/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none
 1472              		.file 11 "/Users/augustmason/Documents/STMTest/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/in
 1473              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1474              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1475              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1476              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1477              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1478              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1479              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1480              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_iwdg.h"
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 42


 1481              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rng.h"
 1482              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 1483              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 1484              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1485              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1486              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_wwdg.h"
 1487              		.file 26 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1488              		.file 27 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1489              		.file 28 "Middlewares/Third_Party/FatFs/src/integer.h"
 1490              		.file 29 "Middlewares/Third_Party/FatFs/src/diskio.h"
 1491              		.file 30 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1492              		.file 31 "Middlewares/Third_Party/FatFs/src/drivers/sd_diskio.h"
 1493              		.file 32 "Inc/fatfs.h"
 1494              		.file 33 "/Users/augustmason/Documents/STMTest/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/in
 1495              		.file 34 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1496              		.file 35 "Inc/usb_device.h"
 1497              		.file 36 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1498              		.file 37 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:18     .text.MX_SDIO_SD_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:24     .text.MX_SDIO_SD_Init:0000000000000000 MX_SDIO_SD_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:53     .text.MX_SDIO_SD_Init:0000000000000018 $d
                            *COM*:0000000000000084 hsd
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:59     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:65     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:141    .text.MX_GPIO_Init:0000000000000070 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:146    .text.StartDefaultTask:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:153    .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:182    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:189    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:219    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:224    .text._Error_Handler:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:231    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:246    .text.MX_TIM5_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:252    .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:383    .text.MX_TIM5_Init:00000000000000b0 $d
                            *COM*:000000000000003c htim5
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:390    .text.MX_TIM3_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:396    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:501    .text.MX_TIM3_Init:0000000000000084 $d
                            *COM*:000000000000003c htim3
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:508    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:514    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:619    .text.MX_TIM2_Init:0000000000000084 $d
                            *COM*:000000000000003c htim2
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:625    .text.MX_TIM13_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:631    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:716    .text.MX_TIM13_Init:0000000000000064 $d
                            *COM*:000000000000003c htim13
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:723    .text.MX_TIM14_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:729    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:814    .text.MX_TIM14_Init:0000000000000064 $d
                            *COM*:000000000000003c htim14
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:821    .text.MX_CAN1_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:827    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:880    .text.MX_CAN1_Init:0000000000000034 $d
                            *COM*:0000000000000044 hcan1
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:887    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:893    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:941    .text.MX_I2C1_Init:0000000000000034 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:949    .text.MX_WWDG_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:955    .text.MX_WWDG_Init:0000000000000000 MX_WWDG_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:994    .text.MX_WWDG_Init:0000000000000028 $d
                            *COM*:0000000000000014 hwwdg
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1001   .text.MX_IWDG_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1007   .text.MX_IWDG_Init:0000000000000000 MX_IWDG_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1042   .text.MX_IWDG_Init:0000000000000024 $d
                            *COM*:000000000000000c hiwdg
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1049   .text.MX_RNG_Init:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1055   .text.MX_RNG_Init:0000000000000000 MX_RNG_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1084   .text.MX_RNG_Init:000000000000001c $d
                            *COM*:000000000000000c hrng
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1091   .text.MX_ADC3_Init:0000000000000000 $t
ARM GAS  /var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s 			page 44


/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1097   .text.MX_ADC3_Init:0000000000000000 MX_ADC3_Init
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1182   .text.MX_ADC3_Init:000000000000005c $d
                            *COM*:0000000000000048 hadc3
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1190   .text.SystemClock_Config:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1197   .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1329   .text.SystemClock_Config:00000000000000bc $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1337   .text.main:0000000000000000 $t
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1344   .text.main:0000000000000000 main
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1425   .text.main:0000000000000060 $d
                            *COM*:0000000000000004 defaultTaskHandle
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1444   .rodata:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1454   .rodata.MX_TIM5_Init.str1.4:0000000000000000 $d
/var/folders/7p/1_dhylqx7nl5s8914_0f_4w00000gn/T//cc1CbSGh.s:1458   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
MX_USB_DEVICE_Init
MX_FATFS_Init
osDelay
HAL_IncTick
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_TIM_Base_Init
HAL_CAN_Init
HAL_I2C_Init
HAL_WWDG_Init
HAL_IWDG_Init
HAL_RNG_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
osThreadCreate
osKernelStart
